Prompt,Response,Description,Testcase name
Generate a robot framework test case for testing to Validate Customer Unable To Create AutoPay For The Invoices that Past 500 days functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Unable To Create AutoPay For The Invoices that Past 500 days
    [Documentation] Test case for validating that the customer is unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Create AutoPay For Past 500 Days Invoices ${INVOICE_DETAILS}
    Validate Unable To Create AutoPay",This test case checks the validation for being unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver.,Validate Unable To Create AutoPay For The Invoices that Past 500 days
Generate a robot framework test case for testing to Validate Customer Unable To Create AutoPay For The Invoices That Due More Than 31 Days functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Unable To Create AutoPay For The Invoices That Due More Than 31 Days
    [Documentation] Test case for validating that the customer is unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Create AutoPay For Due More Than 31 Days Invoices ${INVOICE_DETAILS}
    Validate Unable To Create AutoPay",This test case checks the validation for being unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver.,Validate Unable To Create AutoPay For The Invoices That Due More Than 31 Days
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay Payments On A Daily Basis functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule AutoPay payments on a daily basis functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Schedule AutoPay Payments On A Daily Basis
    [Documentation] Test case for validating that the customer is able to schedule AutoPay payments on a daily basis functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule AutoPay Payments On A Daily Basis ${AUTOPAY_DETAILS}
    Validate AutoPay Scheduled",This test case checks the validation for scheduling AutoPay payments on a daily basis functionality of the PayNOW datadriver.,Validate Schedule AutoPay Payments On A Daily Basis
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay For Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule AutoPay for credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Schedule AutoPay For Credit Card
    [Documentation] Test case for validating that the customer is able to schedule AutoPay for credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule AutoPay For Credit Card ${AUTOPAY_DETAILS}
    Validate AutoPay Scheduled",This test case checks the validation for scheduling AutoPay for credit card functionality of the PayNOW datadriver.,Validate Schedule AutoPay For Credit Card
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay For Debit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule AutoPay for debit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Schedule AutoPay For Debit Card
    [Documentation] Test case for validating that the customer is able to schedule AutoPay for debit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule AutoPay For Debit Card ${AUTOPAY_DETAILS}
    Validate AutoPay Scheduled",This test case checks the validation for scheduling AutoPay for debit card functionality of the PayNOW datadriver.,Validate Schedule AutoPay For Debit Card
Generate a robot framework test case for testing to Validate Customer Is Able To Delete Saved AutoPay Schedule functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to delete saved AutoPay schedule functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Delete Saved AutoPay Schedule
    [Documentation] Test case for validating that the customer is able to delete saved AutoPay schedule functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Delete Saved AutoPay Schedule ${AUTOPAY_DETAILS}
    Validate AutoPay Schedule Deleted",This test case checks the validation for deleting saved AutoPay schedule functionality of the PayNOW datadriver.,Validate Delete Saved AutoPay Schedule
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay Payments on a Designated Monthly Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule AutoPay payments on a designated monthly date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Schedule AutoPay Payments on a Designated Monthly Date
    [Documentation] Test case for validating that the customer is able to schedule AutoPay payments on a designated monthly date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule AutoPay Payments on a Designated Monthly Date ${AUTOPAY_DETAILS}
    Validate AutoPay Scheduled",This test case checks the validation for scheduling AutoPay payments on a designated monthly date functionality of the PayNOW datadriver.,Validate Schedule AutoPay Payments on a Designated Monthly Date
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details

*** Test Cases ***
Validate Process The Lump Sum Payment
    [Documentation] Test case for validating that the non-integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}
    Validate Payment Processed",This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.,Validate Process The Lump Sum Payment
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Payment Only Against The Selected Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to process the payment only against the selected invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SELECTED_INVOICE_DETAILS} selected_invoice_details

*** Test Cases ***
Validate Process Payment Only Against The Selected Invoice
    [Documentation] Test case for validating that the non-integrated customer is able to process the payment only against the selected invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Invoice For Payment ${SELECTED_INVOICE_DETAILS}
    Process Payment
    Validate Payment Processed Only For Selected Invoice",This test case checks the validation for processing the payment only against the selected invoice functionality of the PayNOW datadriver.,Validate Process Payment Only Against The Selected Invoice
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Unable To Process The Payment Without Entering Routing Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is unable to process the payment without entering routing number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable To Process Payment Without Entering Routing Number
    [Documentation] Test case for validating that the non-integrated customer is unable to process the payment without entering routing number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Payment Without Routing Number
    Validate Unable To Process Payment",This test case checks the validation for being unable to process the payment without entering routing number functionality of the PayNOW datadriver.,Validate Unable To Process Payment Without Entering Routing Number
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Remove Selected Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to remove selected invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SELECTED_INVOICE_DETAILS} selected_invoice_details

*** Test Cases ***
Validate Remove Selected Invoice
    [Documentation] Test case for validating that the non-integrated customer is able to remove selected invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Invoice For Removal ${SELECTED_INVOICE_DETAILS}
    Remove Selected Invoice
    Validate Invoice Removed",This test case checks the validation for removing selected invoice functionality of the PayNOW datadriver.,Validate Remove Selected Invoice
Generate a robot framework test case for testing to Validate Default Checkbox States For Payment Authorization And Send-Email Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Default Checkbox States
    [Documentation] Test case for validating the default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Validate Default Checkbox States",This test case checks the validation for default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver.,Validate Default Checkbox States
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Without Selecting Payment Authorization functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process payment without selecting payment authorization functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable To Process Payment Without Selecting Payment Authorization
    [Documentation] Test case for validating that the customer is unable to process payment without selecting payment authorization functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Payment Without Selecting Payment Authorization
    Validate Unable To Process Payment",This test case checks the validation for being unable to process payment without selecting payment authorization functionality of the PayNOW datadriver.,Validate Unable To Process Payment Without Selecting Payment Authorization
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Payment Authorization Screen After Clicking On Payment Authorization Link functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate To Payment Authorization Screen
    [Documentation] Test case for validating that the customer is able to navigate to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click On Payment Authorization Link
    Validate Navigation To Payment Authorization Screen",This test case checks the validation for navigating to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver.,Validate Navigate To Payment Authorization Screen
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Payment Only Against The Selected Invoice Using ACHoreCheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to process the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SELECTED_INVOICE_DETAILS} selected_invoice_details

*** Test Cases ***
Validate Process Payment Only Against The Selected Invoice Using ACHoreCheck
    [Documentation] Test case for validating that the non-integrated customer is able to process the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Invoice For Payment ${SELECTED_INVOICE_DETAILS}
    Process Payment Using ACHoreCheck
    Validate Payment Processed Only For Selected Invoice",This test case checks the validation for processing the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver.,Validate Process Payment Only Against The Selected Invoice Using ACHoreCheck
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Add Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to add multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Add Multiple Invoices
    [Documentation] Test case for validating that the non-integrated customer is able to add multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Add Multiple Invoices ${INVOICE_DETAILS}
    Validate Multiple Invoices Added",This test case checks the validation for adding multiple invoices functionality of the PayNOW datadriver.,Validate Add Multiple Invoices
Generate a robot framework test case for testing to Validate Differential Surcharge Amount Applied When Colorado State Is Selected functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the differential surcharge amount is applied when Colorado state is selected functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${STATE_DETAILS}            state_details

*** Test Cases ***
Validate Differential Surcharge Amount Applied When Colorado State Is Selected
    [Documentation] Test case for validating that the differential surcharge amount is applied when Colorado state is selected functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Colorado State ${STATE_DETAILS}
    Validate Differential Surcharge Amount Applied",This test case checks the validation for differential surcharge amount being applied when Colorado state is selected functionality of the PayNOW datadriver.,Validate Differential Surcharge Amount Applied When Colorado State Is Selected
"Generate a robot framework test case for testing to Validate For The Invoices Which Are NOT Selected For Removing, The Invoice Details Are NOT Changed functionality of the PayNOW datadriver.","*** Settings ***
Documentation          Test cases for validating that for the invoices which are not selected for removing, the invoice details are not changed functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Invoice Details Not Changed For Unselected Invoices
    [Documentation] Test case for validating that for the invoices which are not selected for removing, the invoice details are not changed functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Remove Selected Invoices
    Validate Invoice Details Not Changed For Unselected Invoices ${INVOICE_DETAILS}",This test case checks the validation for the invoice details not being changed for the invoices which are not selected for removing functionality of the PayNOW datadriver.,Validate Invoice Details Not Changed For Unselected Invoices
Generate a robot framework test case for testing to Validate Non Integrated Customer Gets A Message That Surcharge Can Be Avoided By Paying With ACH Or Debit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer gets a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Surcharge Avoided Message
    [Documentation] Test case for validating that the non-integrated customer gets a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Payment
    Validate Surcharge Avoided Message Displayed",This test case checks the validation for getting a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver.,Validate Surcharge Avoided Message
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Select Account Type For ACHoreCheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to select account type for ACHoreCheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${ACCOUNT_TYPE}             account_type

*** Test Cases ***
Validate Select Account Type For ACHoreCheck
    [Documentation] Test case for validating that the non-integrated customer is able to select account type for ACHoreCheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Account Type For ACHoreCheck ${ACCOUNT_TYPE}
    Validate Account Type Selected",This test case checks the validation for selecting account type for ACHoreCheck functionality of the PayNOW datadriver.,Validate Select Account Type For ACHoreCheck
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Navigate Back From ACHoreCheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to navigate back from ACHoreCheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate Back From ACHoreCheck
    [Documentation] Test case for validating that the non-integrated customer is able to navigate back from ACHoreCheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate Back From ACHoreCheck
    Validate Navigation Successful",This test case checks the validation for navigating back from ACHoreCheck functionality of the PayNOW datadriver.,Validate Navigate Back From ACHoreCheck
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Navigate Back From Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to navigate back from credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate Back From Credit Card
    [Documentation] Test case for validating that the non-integrated customer is able to navigate back from credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate Back From Credit Card
    Validate Navigation Successful",This test case checks the validation for navigating back from credit card functionality of the PayNOW datadriver.,Validate Navigate Back From Credit Card
Generate a robot framework test case for testing to Validate That Surcharge Amount Is Re-Calculated When Customer Changes The State functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the surcharge amount is re-calculated when customer changes the state functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${STATE_DETAILS}            state_details

*** Test Cases ***
Validate Surcharge Amount Re-Calculated When Customer Changes The State
    [Documentation] Test case for validating that the surcharge amount is re-calculated when customer changes the state functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Change State ${STATE_DETAILS}
    Validate Surcharge Amount Re-Calculated",This test case checks the validation for re-calculating the surcharge amount when customer changes the state functionality of the PayNOW datadriver.,Validate Surcharge Amount Re-Calculated When Customer Changes The State
Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able Create Multiple Invoices And Clear All Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the non-integrated customer is able to create multiple invoices and clear all invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Create Multiple Invoices And Clear All Invoices
    [Documentation] Test case for validating that the non-integrated customer is able to create multiple invoices and clear all invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Create Multiple Invoices ${INVOICE_DETAILS}
    Clear All Invoices
    Validate Multiple Invoices Created And Cleared",This test case checks the validation for creating multiple invoices and clearing all invoices functionality of the PayNOW datadriver.,Validate Create Multiple Invoices And Clear All Invoices
Generate a robot framework test case for testing to Validate Customer Is Able Send Invoice Receipt To The Given Email Address functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to send invoice receipt to the given email address functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${EMAIL_ADDRESS}            email_address

*** Test Cases ***
Validate Send Invoice Receipt To The Given Email Address
    [Documentation] Test case for validating that the customer is able to send invoice receipt to the given email address functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Email Address ${EMAIL_ADDRESS}
    Send Invoice Receipt
    Validate Invoice Receipt Sent",This test case checks the validation for sending invoice receipt to the given email address functionality of the PayNOW datadriver.,Validate Send Invoice Receipt To The Given Email Address
Generate a robot framework test case for testing to Validate Customer Is Able To See Terms Conditions And Privacy Policy Screen functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to see terms, conditions, and privacy policy screen functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate See Terms Conditions And Privacy Policy Screen
    [Documentation] Test case for validating that the customer is able to see terms, conditions, and privacy policy screen functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Terms Conditions And Privacy Policy Screen
    Validate Terms Conditions And Privacy Policy Screen Displayed","This test case checks the validation for seeing terms, conditions, and privacy policy screen functionality of the PayNOW datadriver.",Validate See Terms Conditions And Privacy Policy Screen
Generate a robot framework test case for testing to Validate Customer Is Able To Signout From The Payment Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to signout from the payment receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Signout From The Payment Receipt
    [Documentation] Test case for validating that the customer is able to signout from the payment receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Receipt
    Signout
    Validate Signout Successful",This test case checks the validation for signing out from the payment receipt functionality of the PayNOW datadriver.,Validate Signout From The Payment Receipt
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To The Customer Invoice Referral Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to the customer invoice referral page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate To The Customer Invoice Referral Page
    [Documentation] Test case for validating that the customer is able to navigate to the customer invoice referral page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Customer Invoice Referral Page
    Validate Navigation Successful",This test case checks the validation for navigating to the customer invoice referral page functionality of the PayNOW datadriver.,Validate Navigate To The Customer Invoice Referral Page
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Transaction With Negative Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process transaction with negative amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable To Process Transaction With Negative Amount
    [Documentation] Test case for validating that the customer is unable to process transaction with negative amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Transaction With Negative Amount
    Validate Unable To Process Transaction",This test case checks the validation for being unable to process transaction with negative amount functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With Negative Amount
Generate a robot framework test case for testing to Validate That Application Sends Message If The State Field Is NOT Selected functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the application sends message if the state field is not selected functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Message Sent If State Field Is NOT Selected
    [Documentation] Test case for validating that the application sends message if the state field is not selected functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Transaction Without Selecting State
    Validate Message Sent If State Field Is NOT Selected",This test case checks the validation for sending a message if the state field is not selected functionality of the PayNOW datadriver.,Validate Message Sent If State Field Is NOT Selected
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Past Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment for past invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment For Past Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment for past invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment For Past Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment for past invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment For Past Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Current Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment for current invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment For Current Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment for current invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment For Current Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment for current invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment For Current Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Future Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment for future invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment For Future Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment for future invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment For Future Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment for future invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment For Future Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Current Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment To Multiple Invoices For Current Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment To Multiple Invoices For Current Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment To Multiple Invoices For Current Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Past Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment To Multiple Invoices For Past Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment To Multiple Invoices For Past Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment To Multiple Invoices For Past Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Future Invoice Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment To Multiple Invoices For Future Invoice Due Date
    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment To Multiple Invoices For Future Invoice Due Date ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver.,Validate Schedule Payment To Multiple Invoices For Future Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to schedule payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates
    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates ${PAYMENT_DETAILS}
    Validate Payment Scheduled",This test case checks the validation for scheduling payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver.,Validate Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates
Generate a robot framework test case for testing to Validate Customer Is Able To View Scheduled Payment Date And Origin In Scheduled Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate View Scheduled Payment Date And Origin In Scheduled Payments
    [Documentation] Test case for validating that the customer is able to view scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    View Scheduled Payment Date And Origin In Scheduled Payments
    Validate Scheduled Payment Date And Origin Displayed",This test case checks the validation for viewing scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver.,Validate View Scheduled Payment Date And Origin In Scheduled Payments
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Page In Schedule Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoice page in schedule payments functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoice Page In Schedule Payments
    [Documentation] Test case for validating that the merchant is able to navigate to invoice page in schedule payments functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Page In Schedule Payments
    Validate Navigation To Invoice Page",This test case checks the validation for navigating to invoice page in schedule payments functionality of the PayNOW datadriver.,Validate Navigate To Invoice Page In Schedule Payments
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount For LumpSum functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for lump sum functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With More Than Due Amount For LumpSum
    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for lump sum functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With More Than Due Amount For LumpSum
    Validate Transaction Failure",This test case checks the validation for processing transaction with more than due amount for lump sum functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With More Than Due Amount For LumpSum
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount for Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice
    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With More Than Due Amount for Specific Invoice
    Validate Transaction Failure",This test case checks the validation for processing transaction with more than due amount for specific invoice functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Searched With Customer Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Searched With Customer Number
    [Documentation] Test case for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Search With Customer Number
    Validate Search Results",This test case checks the validation for viewing searched with customer number functionality of the PayNOW datadriver.,Validate View Searched With Customer Number
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With Negative Amount Due In Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice
    [Documentation] Test case for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With Negative Amount Due In Specific Invoice
    Validate Transaction Failure",This test case checks the validation for processing transaction with negative amount due in specific invoice functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Exempt Status In Virtual Terminal",This test case checks the validation for viewing surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver.,Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge And Change In Total Amount After Selecting Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices
    [Documentation] Test case for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select Multiple Invoices
    View Surcharge And Total Amount Change",This test case checks the validation for viewing surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver.,Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In PayNOW functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Exempt Is Applied For Customer In PayNOW
    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Exempt Status In PayNOW",This test case checks the validation for viewing surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver.,Validate View Surcharge Exempt Is Applied For Customer In PayNOW
Generate a robot framework test case for testing to Validate Merchant Is Able To Custom Date Range And View Payment Status Summary And Payment Date In Grid functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to custom date range and view payment status summary and payment date in grid functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Custom Date Range And View Payment Status Summary And Payment Date In Grid
    [Documentation] Test case for validating that the merchant is able to custom date range and view payment status summary and payment date in grid functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Set Custom Date Range
    View Payment Status Summary And Payment Date In Grid",This test case checks the validation for custom date range and viewing payment status summary and payment date in grid functionality of the PayNOW datadriver.,Validate Custom Date Range And View Payment Status Summary And Payment Date In Grid
Generate a robot framework test case for testing to Validate Merchant Is Able To View Filtered Invoice In Payment Status functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view filtered invoice in payment status functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Filtered Invoice In Payment Status
    [Documentation] Test case for validating that the merchant is able to view filtered invoice in payment status functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Apply Invoice Filter
    View Filtered Invoice In Payment Status",This test case checks the validation for viewing filtered invoice in payment status functionality of the PayNOW datadriver.,Validate View Filtered Invoice In Payment Status
Generate a robot framework test case for testing to Validate Merchant Is Able To View Received Transactions Payment Status And Payment Information (i) In Payment Status functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Received Transactions Payment Status And Payment Information (i) In Payment Status
    [Documentation] Test case for validating that the merchant is able to view received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Received Transactions Payment Status And Payment Information (i) In Payment Status",This test case checks the validation for viewing received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver.,Validate View Received Transactions Payment Status And Payment Information (i) In Payment Status
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Details Page By Clicking On Invoice Number In Payment Status functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Details Page By Clicking On Invoice Number In Payment Status
    [Documentation] Test case for validating that the merchant is able to view invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click On Invoice Number In Payment Status
    View Invoice Details Page",This test case checks the validation for viewing invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver.,Validate View Invoice Details Page By Clicking On Invoice Number In Payment Status
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_SUMMARY}          invoice_summary
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigation To Customer Details
    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice Summary Details ${INVOICE_SUMMARY}
    Click On Customer Name
    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}",This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.,Validate Navigation To Customer Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Format Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view email format details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Email Format Details
    [Documentation] Test case for validating that merchant is able to view email format details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Email Format Details
    Validate Email Format Details",This test case checks the validation for viewing email format details functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking on Customer Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigation to Customer Details by Customer Number
    [Documentation] Test case for validating that merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click on Customer Number
    Validate Navigation to Customer Details Page",This test case checks the validation for navigating to customer details page by clicking on customer number functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking on Customer Name functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details page by clicking on customer name functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigation to Customer Details by Customer Name
    [Documentation] Test case for validating that merchant is able to navigate to customer details page by clicking on customer name functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click on Customer Name
    Validate Navigation to Customer Details Page",This test case checks the validation for navigating to customer details page by clicking on customer name functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To View Pdf Attached Status In Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view pdf attached status in email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate PDF Attached Status in Email Details
    [Documentation] Test case for validating that merchant is able to view pdf attached status in email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Email Details
    Validate PDF Attached Status",This test case checks the validation for viewing pdf attached status in email details functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Verify Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to verify email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Verification of Email Details
    [Documentation] Test case for validating that merchant is able to verify email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Email Details
    Validate Email Verification",This test case checks the validation for verifying email details functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Expand And Collapse Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant is able to expand and collapse email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL_DETAILS}            email_details

*** Test Cases ***
Validate Expand And Collapse Email Details
    [Documentation] Test case for validating that Merchant is able to expand and collapse email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Expand Email Details ${EMAIL_DETAILS}
    Collapse Email Details ${EMAIL_DETAILS}",This test case checks the validation for expanding and collapsing email details functionality of the PayNOW datadriver.,Validate Expand And Collapse Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Email Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant is able to view email details in email summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL_SUMMARY}            email_summary

*** Test Cases ***
Validate View Email Details In Email Summary
    [Documentation] Test case for validating that Merchant is able to view email details in email summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Email Details In Email Summary ${EMAIL_SUMMARY}",This test case checks the validation for viewing email details in email summary functionality of the PayNOW datadriver.,Validate View Email Details In Email Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Next And Previous Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant is able to view email details in next and previous page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL_PAGE}               email_page

*** Test Cases ***
Validate View Email Details In Next And Previous Page
    [Documentation] Test case for validating that Merchant is able to view email details in next and previous page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Email Details In Next And Previous Page ${EMAIL_PAGE}",This test case checks the validation for viewing email details in next and previous page functionality of the PayNOW datadriver.,Validate View Email Details In Next And Previous Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Last And First Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant is able to view email details in last and first page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL_PAGE}               email_page

*** Test Cases ***
Validate View Email Details In Last And First Page
    [Documentation] Test case for validating that Merchant is able to view email details in last and first page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Email Details In Last And First Page ${EMAIL_PAGE}",This test case checks the validation for viewing email details in last and first page functionality of the PayNOW datadriver.,Validate View Email Details In Last And First Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Reset Filter functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant is able to reset filter functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${FILTER}                   filter

*** Test Cases ***
Validate Reset Filter
    [Documentation] Test case for validating that Merchant is able to reset filter functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Reset Filter ${FILTER}",This test case checks the validation for resetting filter functionality of the PayNOW datadriver.,Validate Reset Filter
Generate a robot framework test case for testing to Validate Merchant Is Able To View All Active AutoPay Details functionality of the PayNOW datadriver.,"*** Settings *** 
Documentation          Test cases for validating that merchant is able to view all active AutoPay details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables *** 
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${ACTIVE_AUTOPAY_DETAILS}   active_autopay_details

*** Test Cases *** 
Validate All Active AutoPay Details
    [Documentation] Test case for validating that merchant is able to view all active AutoPay details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To AutoPay Details Page
    Validate Active AutoPay Details ${ACTIVE_AUTOPAY_DETAILS}",This test case checks the validation for viewing all active AutoPay details for a merchant in the PayNOW datadriver.,Validate All Active AutoPay Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Filter Auto Pay Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to filter Auto Pay details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${FILTER_CRITERIA}          filter_criteria
${FILTERED_AUTOPAY_DETAILS} filtered_autopay_details

*** Test Cases ***
Validate Filter Auto Pay Details
    [Documentation] Test case for validating that merchant is able to filter Auto Pay details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To AutoPay Details Page
    Apply Filter ${FILTER_CRITERIA}
    Validate Filtered AutoPay Details ${FILTERED_AUTOPAY_DETAILS}",This test case checks the validation for filtering Auto Pay details for a merchant in the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel AutoPay functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to cancel AutoPay functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details
${AUTOPAY_TO_CANCEL}    autopay_to_cancel
${CANCELLED_AUTOPAY}    cancelled_autopay

*** Test Cases ***
Validate Cancel AutoPay
    [Documentation] Test case for validating that merchant is able to cancel AutoPay functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To AutoPay Details Page
    Cancel AutoPay ${AUTOPAY_TO_CANCEL}
    Validate AutoPay Cancelled ${CANCELLED_AUTOPAY}",This test case checks the validation for cancelling AutoPay for a merchant in the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${CUSTOMER_DETAILS_PAGE}    customer_details_page

*** Test Cases ***
Validate Navigation To Customer Details Page
    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Page
    Click On Customer Name
    Validate Navigation To Customer Details Page ${CUSTOMER_DETAILS_PAGE}",This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.,Validate Navigation To Customer Details Page
Generate a robot framework test case for testing to Validate Merchant Able To Navigate To PayNOW From Invoice Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details

*** Test Cases ***
Validate Navigation From Invoice Details
    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Details
    Navigate To PayNOW From Invoice Details",This test case checks the validation for merchant's ability to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.,Validate Navigation From Invoice Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To PayNOW From Customer Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to PayNOW from customer details functionality of the PayNOW datadriver.
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details

*** Test Cases ***
Validate Navigation From Customer Details
    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from customer details functionality of the PayNOW datadriver.
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Customer Details
    Navigate To PayNOW From Customer Details",This test case checks the validation for merchant's ability to navigate to PayNOW from customer details functionality of the PayNOW datadriver.,Validate Navigation From Customer Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To PayNOW From Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to PayNOW from email functionality of the PayNOW datadriver.
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details

*** Test Cases ***
Validate Navigation From Email
    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from email functionality of the PayNOW datadriver.
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Email
    Navigate To PayNOW From Email",This test case checks the validation for merchant's ability to navigate to PayNOW from email functionality of the PayNOW datadriver.,Validate Navigation From Email
Generate a robot framework test case for testing to Validate Merchant Is Able To Search Invoice Details With Invoice Number,"*** Settings ***
Documentation          Validate Merchant Is Able To Search Invoice Details With Invoice Number
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com
${CUSTOMER_DETAILS}     customer_details

*** Test Cases ***
Validate Merchant Is Able To Search Invoice Details With Invoice Number
    [Documentation] Validate Merchant Is Able To Search Invoice Details With Invoice Number
    Launch Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Search Invoice By Invoice Number
    Validate Invoice Details Displayed",This test case checks the validation for merchant's ability to search invoice details with invoice number functionality.,Validate Merchant Is Able To Search Invoice Details With Invoice Number
Generate a robot framework test case for testing to Validate Merchant Is Able To Search Invoice Details With Customer Number,"*** Settings ***
Documentation          Validate Merchant Is Able To Search Invoice Details With Customer Number
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com
${CUSTOMER_DETAILS}     customer_details

*** Test Cases ***
Validate Merchant Is Able To Search Invoice Details With Customer Number
    [Documentation] Validate Merchant Is Able To Search Invoice Details With Customer Number
    Launch Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Search Invoice By Customer Number
    Validate Invoice Details Displayed",This test case checks the validation for merchant's ability to search invoice details with customer number functionality.,Validate Merchant Is Able To Search Invoice Details With Customer Number
Generate a robot framework test case for testing to Validate Merchant Is Able To Search With Invoice And Customer Number,"*** Settings ***
Documentation          Validate Merchant Is Able To Search With Invoice And Customer Number
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com
${CUSTOMER_DETAILS}     customer_details

*** Test Cases ***
Validate Merchant Is Able To Search With Invoice And Customer Number
    [Documentation] Validate Merchant Is Able To Search With Invoice And Customer Number
    Launch Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Search Invoice By Invoice And Customer Number
    Validate Invoice Details Displayed",This test case checks the validation for merchant's ability to search with invoice and customer number functionality.,Validate Merchant Is Able To Search With Invoice And Customer Number
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Address In Email Detail,"*** Settings ***
Documentation          Validate Merchant Is Able To View Email Address In Email Detail
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com
${CUSTOMER_DETAILS}     customer_details

*** Test Cases ***
Validate Merchant Is Able To View Email Address In Email Detail
    [Documentation] Validate Merchant Is Able To View Email Address In Email Detail
    Launch Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    View Email Detail
    Validate Email Address Displayed",This test case checks the validation for merchant's ability to view email address in email detail functionality.,Validate Merchant Is Able To View Email Address In Email Detail
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details
${INVOICE_DETAILS}      invoice_details

*** Test Cases ***
Validate Sending Invoice Email
    [Documentation] Test case for validating that Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Details Page
    Click Send Invoice Email
    Validate Email Sent",This test case checks the validation for sending invoice email from invoice details page functionality of the PayNOW datadriver.,Validate Sending Invoice Email
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details
${INVOICE_DETAILS}      invoice_details

*** Test Cases ***
Validate Sending Invoice Email Copy
    [Documentation] Test case for validating that Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Details Page
    Click Send Invoice Email Copy
    Validate Email Copy Sent",This test case checks the validation for sending invoice email copy from invoice details page functionality of the PayNOW datadriver.,Validate Sending Invoice Email Copy
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/paynow
${MERCHANT_DETAILS}     merchant_details
${INVOICE_DETAILS}      invoice_details

*** Test Cases ***
Validate Cancelling Send Invoice Email Popup
    [Documentation] Test case for validating that Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Details Page
    Click Cancel on Send Invoice Email Popup
    Validate Popup Cancelled",This test case checks the validation for cancelling send invoice email popup functionality of the PayNOW datadriver.,Validate Cancelling Send Invoice Email Popup
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Navigation To Virtual Terminal
    [Documentation] Test case for validating that Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Details Tab
    Click Pay Invoice
    Validate Navigation to Virtual Terminal",This test case checks the validation for navigating to virtual terminal by clicking on pay invoice in invoice details tab functionality of the PayNOW datadriver.,Validate Navigation To Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Navigation To Invoice Page
    [Documentation] Test case for validating that Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Details Page
    Click Customer View
    Validate Navigation to Invoice Page",This test case checks the validation for navigating to invoice page by clicking on customer view in invoice details page functionality of the PayNOW datadriver.,Validate Navigation To Invoice Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Navigation To Invoice Details Page
    [Documentation] Test case for validating that Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate to Invoice Page
    Click on Invoice
    Validate Navigation to Invoice Details Page",This test case checks the validation for navigating to invoice details page from invoice page functionality of the PayNOW datadriver.,Validate Navigation To Invoice Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_SUMMARY}          invoice_summary
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigation To Customer Details
    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice Summary Details ${INVOICE_SUMMARY}
    Click On Customer Name
    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}",This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.,Validate Navigation To Customer Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/paynow
${INVOICE_PAGE}        invoice_page
${CUSTOMER_PAGE}       customer_page

*** Test Cases ***
Validate Navigate to Customer Details Page
    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Invoice Page ${INVOICE_PAGE}
    Navigate To Customer Details Page ${CUSTOMER_PAGE}",This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To View Sent Date And Provider Response Message Of Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/paynow
${EMAIL_PAGE}          email_page
${SENT_DATE}           sent_date
${RESPONSE_MSG}        response_msg

*** Test Cases ***
Validate View Sent Date and Response Message
    [Documentation] Test case for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Email Page ${EMAIL_PAGE}
    Verify Sent Date ${SENT_DATE}
    Verify Provider Response Message ${RESPONSE_MSG}",This test case checks the validation for viewing sent date and provider response message of email functionality of the PayNOW datadriver.,
Generate a robot framework test case for testing to Validate Merchant Is Able To View Subject And Sent Address Of Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${EMAIL_PAGE}               email_page
${SUBJECT}                  subject
${SENT_ADDRESS}             sent_address

*** Test Cases ***
Validate View Subject and Sent Address
    [Documentation] Test case for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Email Page ${EMAIL_PAGE}
    Verify Email Subject ${SUBJECT}
    Verify Sent Address ${SENT_ADDRESS}",This test case checks the validation for viewing subject and sent address of email functionality of the PayNOW datadriver.,Validate View Subject and Sent Address
Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Single Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_PAGE}             invoice_page
${FORMAT_TYPE}              format_type

*** Test Cases ***
Validate View Format Type for Single Invoice
    [Documentation] Test case for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Invoice Page ${INVOICE_PAGE}
    Verify Format Type ${FORMAT_TYPE}",This test case checks the validation for viewing format type for single invoice functionality of the PayNOW datadriver.,Validate View Format Type for Single Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_PAGE}             invoice_page
${FORMAT_TYPE}              format_type

*** Test Cases ***
Validate View Format Type for Multiple Invoices
    [Documentation] Test case for validating that the merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Invoice Page ${INVOICE_PAGE}
    Verify Format Type ${FORMAT_TYPE}",This test case checks the validation for viewing format type for multiple invoices functionality of the PayNOW datadriver.,Validate View Format Type for Multiple Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Pending Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${PENDING_PAYMENTS}         pending_payments
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate Navigate to Transaction Details from Pending Payments
    [Documentation] Test case for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Pending Payments ${PENDING_PAYMENTS}
    Navigate To Transaction Details ${TRANSACTION_DETAILS}",This test case checks the validation for navigating to transaction details from pending payments functionality of the PayNOW datadriver.,Validate Navigate to Transaction Details from Pending Payments
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_SUMMARY}          invoice_summary
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate to Customer Details from Invoice Summary
    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Go To Invoice Summary ${INVOICE_SUMMARY}
    Navigate To Customer Details ${CUSTOMER_DETAILS}",This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.,Validate Navigate to Customer Details from Invoice Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${CUSTOMER_DETAILS_PAGE}    customer_details_page

*** Test Cases ***
Validate Navigation To Customer Details Page
    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Page
    Click On Customer Name
    Validate Navigation To Customer Details Page ${CUSTOMER_DETAILS_PAGE}",This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.,Validate Navigation To Customer Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Sent Date And Provider Response Message Of Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${EMAIL_DETAILS}            email_details
${SENT_DATE}                sent_date
${PROVIDER_RESPONSE}        provider_response

*** Test Cases ***
Validate Email Details
    [Documentation] Test case for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Email Details ${EMAIL_DETAILS}
    View Sent Date ${SENT_DATE}
    View Provider Response Message ${PROVIDER_RESPONSE}",This test case checks the validation for viewing sent date and provider response message of email functionality of the PayNOW datadriver.,Validate Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Subject And Sent Address Of Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${EMAIL_DETAILS}            email_details
${SUBJECT}                  subject
${SENT_ADDRESS}             sent_address

*** Test Cases ***
Validate Email Subject And Sent Address
    [Documentation] Test case for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Email Details ${EMAIL_DETAILS}
    View Subject ${SUBJECT}
    View Sent Address ${SENT_ADDRESS}",This test case checks the validation for viewing subject and sent address of email functionality of the PayNOW datadriver.,Validate Email Subject And Sent Address
Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Single Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_DETAILS}          invoice_details
${FORMAT_TYPE}              format_type

*** Test Cases ***
Validate Single Invoice Format Type
    [Documentation] Test case for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice Details ${INVOICE_DETAILS}
    View Format Type ${FORMAT_TYPE}",This test case checks the validation for viewing format type for single invoice functionality of the PayNOW datadriver.,Validate Single Invoice Format Type
Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_DETAILS}          invoice_details
${FORMAT_TYPE}              format_type

*** Test Cases ***
Validate Multiple Invoices Format Type
    [Documentation] Test case for validating that merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice Details ${INVOICE_DETAILS}
    View Format Type ${FORMAT_TYPE}",This test case checks the validation for viewing format type for multiple invoices functionality of the PayNOW datadriver.,Validate Multiple Invoices Format Type
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Pending Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${PENDING_PAYMENTS}         pending_payments
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate Navigation To Transaction Details
    [Documentation] Test case for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Pending Payments Details ${PENDING_PAYMENTS}
    Click On Transaction Details
    Validate Navigation To Transaction Details ${TRANSACTION_DETAILS}",This test case checks the validation for navigating to transaction details from pending payments functionality of the PayNOW datadriver.,Validate Navigation To Transaction Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_SUMMARY}          invoice_summary
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigation To Customer Details
    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice Summary Details ${INVOICE_SUMMARY}
    Click On Customer Name
    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}",This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.,Validate Navigation To Customer Details
Generate a robot framework test case for testing to Validate Merchant Is Able to Expand And Collapse Invoice Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to expand and collapse invoice details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Expand And Collapse Invoice Details
    [Documentation] Test case for validating that merchant is able to expand and collapse invoice details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Expand Invoice Details
    Validate Invoice Details Expanded ${INVOICE_DETAILS}
    Collapse Invoice Details
    Validate Invoice Details Collapsed ${INVOICE_DETAILS}",This test case checks the validation for expanding and collapsing invoice details functionality of the PayNOW datadriver.,Validate Expand And Collapse Invoice Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Enable Only show past due invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to enable only show past due invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${PAST_DUE_INVOICES}        past_due_invoices

*** Test Cases ***
Validate Enable Only Show Past Due Invoices
    [Documentation] Test case for validating that merchant is able to enable only show past due invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enable Only Show Past Due Invoices
    Validate Only Past Due Invoices Shown ${PAST_DUE_INVOICES}",This test case checks the validation for enabling only show past due invoices functionality of the PayNOW datadriver.,Validate Enable Only Show Past Due Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In Next And Previous Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view invoices in next and previous page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICES_PAGE}            invoices_page

*** Test Cases ***
Validate View Invoices In Next And Previous Page
    [Documentation] Test case for validating that merchant is able to view invoices in next and previous page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Next Page
    Validate Invoices In Next Page ${INVOICES_PAGE}
    Navigate To Previous Page
    Validate Invoices In Previous Page ${INVOICES_PAGE}",This test case checks the validation for viewing invoices in next and previous page functionality of the PayNOW datadriver.,Validate View Invoices In Next And Previous Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In Last And First Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view invoices in last and first page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICES_PAGE}            invoices_page

*** Test Cases ***
Validate View Invoices In Last And First Page
    [Documentation] Test case for validating that merchant is able to view invoices in last and first page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Last Page Link
    Validate Last Page Invoices Displayed ${INVOICES_PAGE}
    Click First Page Link
    Validate First Page Invoices Displayed ${INVOICES_PAGE}",This test case checks the validation for viewing invoices in last and first page functionality of the PayNOW datadriver.,Validate View Invoices In Last And First Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Filter Invoice Data In Invoice Details Grid functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to filter invoice data in invoice details grid functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${INVOICE_FILTER}           invoice_filter

*** Test Cases ***
Validate Filter Invoice Data
    [Documentation] Test case for validating that merchant is able to filter invoice data in invoice details grid functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Apply Invoice Filter ${INVOICE_FILTER}
    Validate Filtered Invoice Data Displayed ${INVOICE_FILTER}",This test case checks the validation for filtering invoice data in invoice details grid functionality of the PayNOW datadriver.,Validate Filter Invoice Data
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Email Clicked Date And Count When It Is Clicked functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view the email clicked date and count when it is clicked functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL_CLICKED}            email_clicked

*** Test Cases ***
Validate View Email Clicked Date And Count
    [Documentation] Test case for validating that merchant is able to view the email clicked date and count when it is clicked functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Email Clicked Date Link
    Validate Email Clicked Date And Count Displayed ${EMAIL_CLICKED}",This test case checks the validation for viewing the email clicked date and count when it is clicked functionality of the PayNOW datadriver.,Validate View Email Clicked Date And Count
Generate a robot framework test case for testing to Validate Merchant Is Able To View Line Items Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view line items details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${LINE_ITEMS}               line_items

*** Test Cases ***
Validate View Line Items Details
    [Documentation] Test case for validating that merchant is able to view line items details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Line Items Link
    Validate Line Items Details Displayed ${LINE_ITEMS}",This test case checks the validation for viewing line items details functionality of the PayNOW datadriver.,Validate View Line Items Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Tracking Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view tracking details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${TRACKING_DETAILS}         tracking_details

*** Test Cases ***
Validate View Tracking Details
    [Documentation] Test case for validating that merchant is able to view tracking details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Tracking Details Link
    Validate Tracking Details Displayed ${TRACKING_DETAILS}",This test case checks the validation for viewing tracking details functionality of the PayNOW datadriver.,Validate View Tracking Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Financial Payments Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view financial payments details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${FINANCIAL_PAYMENTS}       financial_payments

*** Test Cases ***
Validate View Financial Payments Details
    [Documentation] Test case for validating that merchant is able to view financial payments details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Financial Payments Link
    Validate Financial Payments Details Displayed ${FINANCIAL_PAYMENTS}",This test case checks the validation for viewing financial payments details functionality of the PayNOW datadriver.,Validate View Financial Payments Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Pending Payments Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that merchant is able to view pending payments details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${PENDING_PAYMENTS}         pending_payments

*** Test Cases ***
Validate View Pending Payments Details
    [Documentation] Test case for validating that merchant is able to view pending payments details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Pending Payments Link
    Validate Pending Payments Details Displayed ${PENDING_PAYMENTS}",This test case checks the validation for viewing pending payments details functionality of the PayNOW datadriver.,Validate View Pending Payments Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Filter With Customer Number In Failed PayNOW Logins functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to filter with customer number in failed PayNOW logins functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate Filter With Customer Number In Failed PayNOW Logins
    [Documentation]    Test case for validating that the merchant is able to filter with customer number in failed PayNOW logins functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Filter With Customer Number In Failed PayNOW Logins",This test case checks the validation for filtering with customer number in failed PayNOW logins functionality of the PayNOW datadriver.,Validate Filter With Customer Number In Failed PayNOW Logins
Generate a robot framework test case for testing to Validate Merchant Is Able To View Number Of Recent And Total Login Failed Attempts functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to view number of recent and total login failed attempts functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate View Number Of Recent And Total Login Failed Attempts
    [Documentation]    Test case for validating that the merchant is able to view number of recent and total login failed attempts functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    View Number Of Recent And Total Login Failed Attempts",This test case checks the validation for viewing number of recent and total login failed attempts functionality of the PayNOW datadriver.,Validate View Number Of Recent And Total Login Failed Attempts
Generate a robot framework test case for testing to Validate Merchant Is Able To Expand And Collapse Customer Details In Failed PayNOW Logins functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to expand and collapse customer details in failed PayNOW logins functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate Expand And Collapse Customer Details In Failed PayNOW Logins
    [Documentation]    Test case for validating that the merchant is able to expand and collapse customer details in failed PayNOW logins functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Expand And Collapse Customer Details In Failed PayNOW Logins",This test case checks the validation for expanding and collapsing customer details in failed PayNOW logins functionality of the PayNOW datadriver.,Validate Expand And Collapse Customer Details In Failed PayNOW Logins
Generate a robot framework test case for testing to Validate Merchant Is Able To View First And Last Login Failed Attempt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to view first and last login failed attempt functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate View First And Last Login Failed Attempt
    [Documentation]    Test case for validating that the merchant is able to view first and last login failed attempt functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    View First And Last Login Failed Attempt",This test case checks the validation for viewing first and last login failed attempt functionality of the PayNOW datadriver.,Validate View First And Last Login Failed Attempt
Generate a robot framework test case for testing to Validate Merchant Is Able To Create And View Scheduled Payment Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to create and view scheduled payment details functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate Create And View Scheduled Payment Details
    [Documentation]    Test case for validating that the merchant is able to create and view scheduled payment details functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Create Scheduled Payment
    View Scheduled Payment Details",This test case checks the validation for creating and viewing scheduled payment details functionality of the PayNOW datadriver.,Validate Create And View Scheduled Payment Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Scheduled Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to navigate to customer details from scheduled payments functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate Navigate To Customer Details From Scheduled Payments
    [Documentation]    Test case for validating that the merchant is able to navigate to customer details from scheduled payments functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Navigate To Customer Details From Scheduled Payments",This test case checks the validation for navigating to customer details from scheduled payments functionality of the PayNOW datadriver.,Validate Navigate To Customer Details From Scheduled Payments
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Scheduled Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to navigate to invoice details page from scheduled payments functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details

*** Test Cases ***
Validate Navigate To Invoice Details Page From Scheduled Payments
    [Documentation]    Test case for validating that the merchant is able to navigate to invoice details page from scheduled payments functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Navigate To Invoice Details Page From Scheduled Payments",This test case checks the validation for navigating to invoice details page from scheduled payments functionality of the PayNOW datadriver.,Validate Navigate To Invoice Details Page From Scheduled Payments
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount For LumpSum functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With More Than Due Amount For LumpSum
    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With More Than Due Amount For LumpSum
    Validate Transaction Rejected",This test case checks the validation for being unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With More Than Due Amount For LumpSum
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount for Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice
    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With More Than Due Amount for Specific Invoice
    Validate Transaction Rejected",This test case checks the validation for being unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Searched With Customer Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Searched With Customer Number
    [Documentation] Test case for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Search With Customer Number
    Validate Search Results",This test case checks the validation for viewing searched with customer number functionality of the PayNOW datadriver.,Validate View Searched With Customer Number
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With Negative Amount Due In Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice
    [Documentation] Test case for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Process Transaction With Negative Amount Due In Specific Invoice
    Validate Transaction Rejected",This test case checks the validation for being unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver.,Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Exempt Applied In Virtual Terminal",This test case checks the validation for viewing surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver.,Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge And Change In Total Amount After Selecting Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices
    [Documentation] Test case for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select Multiple Invoices
    View Surcharge And Change In Total Amount",This test case checks the validation for viewing surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver.,Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In PayNOW functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Exempt Is Applied For Customer In PayNOW
    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Exempt Applied In PayNOW",This test case checks the validation for viewing surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver.,Validate View Surcharge Exempt Is Applied For Customer In PayNOW
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count And Status For Successful Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoices count and status for successful transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoices Count And Status For Successful Transaction
    [Documentation] Test case for validating that the merchant is able to view invoices count and status for successful transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoices Count And Status For Successful Transaction",This test case checks the validation for viewing invoices count and status for successful transaction functionality of the PayNOW datadriver.,Validate View Invoices Count And Status For Successful Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count And Status For Declined Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoices count and status for declined transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoices Count And Status For Declined Transaction
    [Documentation] Test case for validating that the merchant is able to view invoices count and status for declined transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoices Count And Status For Declined Transaction",This test case checks the validation for viewing invoices count and status for declined transaction functionality of the PayNOW datadriver.,Validate View Invoices Count And Status For Declined Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details after Processing From PayNow functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction details after processing from PayNow functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Details After Processing From PayNow
    [Documentation] Test case for validating that the merchant is able to view transaction details after processing from PayNow functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Details After Processing From PayNow",This test case checks the validation for viewing transaction details after processing from PayNow functionality of the PayNOW datadriver.,Validate View Transaction Details After Processing From PayNow
Generate a robot framework test case for testing to Validate Merchant Is Able To View Method After ACH Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view method after ACH transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Method After ACH Transaction
    [Documentation] Test case for validating that the merchant is able to view method after ACH transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Method After ACH Transaction",This test case checks the validation for viewing method after ACH transaction functionality of the PayNOW datadriver.,Validate View Method After ACH Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Total Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view total invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Total Invoices
    [Documentation] Test case for validating that the merchant is able to view total invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Total Invoices",This test case checks the validation for viewing total invoices functionality of the PayNOW datadriver.,Validate View Total Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email For the Selected Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send email for the selected invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Send Email For the Selected Invoice
    [Documentation] Test case for validating that the merchant is able to send email for the selected invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send Email For the Selected Invoice",This test case checks the validation for sending email for the selected invoice functionality of the PayNOW datadriver.,Validate Send Email For the Selected Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To Send A Copy Of Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send a copy of receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Send A Copy Of Receipt
    [Documentation] Test case for validating that the merchant is able to send a copy of receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send A Copy Of Receipt",This test case checks the validation for sending a copy of receipt functionality of the PayNOW datadriver.,Validate Send A Copy Of Receipt
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email for Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send email for multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Send Email for Multiple Invoices
    [Documentation] Test case for validating that the merchant is able to send email for multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send Email for Multiple Invoices",This test case checks the validation for sending email for multiple invoices functionality of the PayNOW datadriver.,Validate Send Email for Multiple Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Invoice Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to cancel send invoice receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Cancel Send Invoice Receipt
    [Documentation] Test case for validating that the merchant is able to cancel send invoice receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Cancel Send Invoice Receipt",This test case checks the validation for canceling send invoice receipt functionality of the PayNOW datadriver.,Validate Cancel Send Invoice Receipt
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Transaction Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to transaction details from transaction tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Transaction Details From Transaction Tab
    [Documentation] Test case for validating that the merchant is able to navigate to transaction details from transaction tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Transaction Details From Transaction Tab",This test case checks the validation for navigating to transaction details from transaction tab functionality of the PayNOW datadriver.,Validate Navigate To Transaction Details From Transaction Tab
Generate a robot framework test case for testing to Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to validate credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer
    [Documentation] Test case for validating that the merchant is able to validate credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer",This test case checks the validation for credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver.,Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer
Generate a robot framework test case for testing to Validate Invoice Email After Enabling And Disabling PDF Setting functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to validate invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Invoice Email After Enabling And Disabling PDF Setting
    [Documentation] Test case for validating that the merchant is able to validate invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Validate Invoice Email After Enabling And Disabling PDF Setting",This test case checks the validation for invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver.,Validate Invoice Email After Enabling And Disabling PDF Setting
Generate a robot framework test case for testing to Validate Merchant Is Able To Enable And Disable Override Payment Method By Customer functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to enable and disable override payment method by customer functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Enable And Disable Override Payment Method By Customer
    [Documentation] Test case for validating that the merchant is able to enable and disable override payment method by customer functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enable And Disable Override Payment Method By Customer",This test case checks the validation for enabling and disabling override payment method by customer functionality of the PayNOW datadriver.,Validate Enable And Disable Override Payment Method By Customer
Generate a robot framework test case for testing to Validate Merchant Is Able To Enable And Disable Customize By Transaction Source functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to enable and disable customize by transaction source functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Enable And Disable Customize By Transaction Source
    [Documentation] Test case for validating that the merchant is able to enable and disable customize by transaction source functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enable And Disable Customize By Transaction Source",This test case checks the validation for enabling and disabling customize by transaction source functionality of the PayNOW datadriver.,Validate Enable And Disable Customize By Transaction Source
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Number And Email Format In Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice number and email format in email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Number And Email Format In Email Details
    [Documentation] Test case for validating that the merchant is able to view invoice number and email format in email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Number And Email Format In Email Details",This test case checks the validation for viewing invoice number and email format in email details functionality of the PayNOW datadriver.,Validate View Invoice Number And Email Format In Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Provider Response Message And Date Sent In Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view provider response message and date sent in email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Provider Response Message And Date Sent In Email Details
    [Documentation] Test case for validating that the merchant is able to view provider response message and date sent in email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Provider Response Message And Date Sent In Email Details",This test case checks the validation for viewing provider response message and date sent in email details functionality of the PayNOW datadriver.,Validate View Provider Response Message And Date Sent In Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Multiple Invoices Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view multiple invoices email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Multiple Invoices Email Details
    [Documentation] Test case for validating that the merchant is able to view multiple invoices email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Multiple Invoices Email Details",This test case checks the validation for viewing multiple invoices email details functionality of the PayNOW datadriver.,Validate View Multiple Invoices Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Account Number In Custom Fields functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view account number in custom fields functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Account Number In Custom Fields
    [Documentation] Test case for validating that the merchant is able to view account number in custom fields functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Account Number In Custom Fields",This test case checks the validation for viewing account number in custom fields functionality of the PayNOW datadriver.,Validate View Account Number In Custom Fields
Generate a robot framework test case for testing to Validate Merchant Is Able To Enter Amount To Pay And Notes In Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to enter amount to pay and notes in specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Enter Amount To Pay And Notes In Specific Invoice
    [Documentation] Test case for validating that the merchant is able to enter amount to pay and notes in specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enter Amount To Pay And Notes In Specific Invoice",This test case checks the validation for entering amount to pay and notes in specific invoice functionality of the PayNOW datadriver.,Validate Enter Amount To Pay And Notes In Specific Invoice
Generate a robot framework test case for testing to Validate Total Amount Is Updated As Per The changes in Invoices Due Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Total Amount Is Updated As Per The changes in Invoices Due Amount
    [Documentation] Test case for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Validate Total Amount Is Updated As Per The changes in Invoices Due Amount",This test case checks the validation for updating total amount as per the changes in invoices due amount functionality of the PayNOW datadriver.,Validate Total Amount Is Updated As Per The changes in Invoices Due Amount
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count In Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice count in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Count In Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to view invoice count in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Count In Virtual Terminal",This test case checks the validation for viewing invoice count in virtual terminal functionality of the PayNOW datadriver.,Validate View Invoice Count In Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Apply To Oldest functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to process payment by selecting apply to oldest functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Process Payment By Selecting Apply To Oldest
    [Documentation] Test case for validating that the merchant is able to process payment by selecting apply to oldest functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select Apply To Oldest
    Process Payment",This test case checks the validation for processing payment by selecting apply to oldest functionality of the PayNOW datadriver.,Validate Process Payment By Selecting Apply To Oldest
Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Non-Applied Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to process payment by selecting non-applied payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Process Payment By Selecting Non-Applied Payment
    [Documentation] Test case for validating that the merchant is able to process payment by selecting non-applied payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select Non-Applied Payment
    Process Payment",This test case checks the validation for processing payment by selecting non-applied payment functionality of the PayNOW datadriver.,Validate Process Payment By Selecting Non-Applied Payment
Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to process payment by selecting specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Process Payment By Selecting Specific Invoice
    [Documentation] Test case for validating that the merchant is able to process payment by selecting specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select Specific Invoice
    Process Payment",This test case checks the validation for processing payment by selecting specific invoice functionality of the PayNOW datadriver.,Validate Process Payment By Selecting Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details after Processing Form Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction details after processing form virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Details After Processing Form Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to view transaction details after processing form virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Details After Processing",This test case checks the validation for viewing transaction details after processing form virtual terminal functionality of the PayNOW datadriver.,Validate View Transaction Details After Processing Form Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To View Saved Credit Card Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view saved credit card details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Saved Credit Card Details
    [Documentation] Test case for validating that the merchant is able to view saved credit card details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Saved Credit Card Details",This test case checks the validation for viewing saved credit card details functionality of the PayNOW datadriver.,Validate View Saved Credit Card Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Saved ACH Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view saved ACH details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Saved ACH Details
    [Documentation] Test case for validating that the merchant is able to view saved ACH details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Saved ACH Details",This test case checks the validation for viewing saved ACH details functionality of the PayNOW datadriver.,Validate View Saved ACH Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment Through Saved Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to process payment through saved payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Process Payment Through Saved Payment Method
    [Documentation] Test case for validating that the merchant is able to process payment through saved payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Payment Through Saved Payment Method",This test case checks the validation for processing payment through saved payment method functionality of the PayNOW datadriver.,Validate Process Payment Through Saved Payment Method
Generate a robot framework test case for testing to Validate Merchant Is Able To Delete Saved Payment Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to delete saved payment details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Delete Saved Payment Details
    [Documentation] Test case for validating that the merchant is able to delete saved payment details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Delete Saved Payment Details",This test case checks the validation for deleting saved payment details functionality of the PayNOW datadriver.,Validate Delete Saved Payment Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoices Tab And View Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoices tab and view open invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoices Tab And View Open Invoices
    [Documentation] Test case for validating that the merchant is able to navigate to invoices tab and view open invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoices Tab
    View Open Invoices",This test case checks the validation for navigating to invoices tab and viewing open invoices functionality of the PayNOW datadriver.,Validate Navigate To Invoices Tab And View Open Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To View Only Past Due Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view only past due invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Only Past Due Invoices
    [Documentation] Test case for validating that the merchant is able to view only past due invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Only Past Due Invoices",This test case checks the validation for viewing only past due invoices functionality of the PayNOW datadriver.,Validate View Only Past Due Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Page From Invoice Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoice page from invoice tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoice Page From Invoice Tab
    [Documentation] Test case for validating that the merchant is able to navigate to invoice page from invoice tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Page From Invoice Tab",This test case checks the validation for navigating to invoice page from invoice tab functionality of the PayNOW datadriver.,Validate Navigate To Invoice Page From Invoice Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Delivery Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoice delivery tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoice Delivery Tab
    [Documentation] Test case for validating that the merchant is able to navigate to invoice delivery tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Delivery Tab",This test case checks the validation for navigating to invoice delivery tab functionality of the PayNOW datadriver.,Validate Navigate To Invoice Delivery Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To Change Data Range After Selecting All For Time Period Select Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to change data range after selecting all for time period select invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Change Data Range After Selecting All For Time Period Select Invoices
    [Documentation] Test case for validating that the merchant is able to change data range after selecting all for time period select invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Change Data Range After Selecting All For Time Period Select Invoices",This test case checks the validation for changing data range after selecting all for time period select invoices functionality of the PayNOW datadriver.,Validate Change Data Range After Selecting All For Time Period Select Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To Disable Send Email Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to disable send email receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Disable Send Email Receipt
    [Documentation] Test case for validating that the merchant is able to disable send email receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Disable Send Email Receipt",This test case checks the validation for disabling send email receipt functionality of the PayNOW datadriver.,Validate Disable Send Email Receipt
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email Receipt In Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send email receipt in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Send Email Receipt In Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to send email receipt in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send Email Receipt In Virtual Terminal",This test case checks the validation for sending email receipt in virtual terminal functionality of the PayNOW datadriver.,Validate Send Email Receipt In Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To get Error Message When Process Payment Without Selecting Country functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to get error message when process payment without selecting country functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Error Message When Process Payment Without Selecting Country
    [Documentation] Test case for validating that the merchant is able to get error message when process payment without selecting country functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Payment Without Selecting Country
    Validate Error Message",This test case checks the validation for getting an error message when processing payment without selecting country functionality of the PayNOW datadriver.,Validate Error Message When Process Payment Without Selecting Country
Generate a robot framework test case for testing to Validate Merchant Is Able To View Error Message When Process Payment Without Entering Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view error message when process payment without entering amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Error Message When Process Payment Without Entering Amount
    [Documentation] Test case for validating that the merchant is able to view error message when process payment without entering amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Payment Without Entering Amount
    Validate Error Message",This test case checks the validation for viewing an error message when processing payment without entering amount functionality of the PayNOW datadriver.,Validate Error Message When Process Payment Without Entering Amount
Generate a robot framework test case for testing to Validate Merchant Is Able To Resend Receipt With Valid Email id In virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to resend receipt with valid email id in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Resend Receipt With Valid Email id In virtual Terminal
    [Documentation] Test case for validating that the merchant is able to resend receipt with valid email id in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Resend Receipt With Valid Email id In virtual Terminal",This test case checks the validation for resending receipt with valid email id in virtual terminal functionality of the PayNOW datadriver.,Validate Resend Receipt With Valid Email id In virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Resend Receipt functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to cancel resend receipt functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Cancel Resend Receipt
    [Documentation] Test case for validating that the merchant is able to cancel resend receipt functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Cancel Resend Receipt",This test case checks the validation for cancelling resend receipt functionality of the PayNOW datadriver.,Validate Cancel Resend Receipt
Generate a robot framework test case for testing to Validate Merchant Is Able To Send A Copy Email Receipt In virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send a copy email receipt in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Send A Copy Email Receipt In virtual Terminal
    [Documentation] Test case for validating that the merchant is able to send a copy email receipt in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send A Copy Email Receipt In virtual Terminal",This test case checks the validation for sending a copy email receipt in virtual terminal functionality of the PayNOW datadriver.,Validate Send A Copy Email Receipt In virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able Close Transaction Confirmation Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to close transaction confirmation page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Close Transaction Confirmation Page
    [Documentation] Test case for validating that the merchant is able to close transaction confirmation page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Close Transaction Confirmation Page",This test case checks the validation for closing transaction confirmation page functionality of the PayNOW datadriver.,Validate Close Transaction Confirmation Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Resent Invoice Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to resent invoice tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Resent Invoice Tab
    [Documentation] Test case for validating that the merchant is able to navigate to resent invoice tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Resent Invoice Tab",This test case checks the validation for navigating to resent invoice tab functionality of the PayNOW datadriver.,Validate Navigate To Resent Invoice Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To Add Record functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to add record functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Add Record
    [Documentation] Test case for validating that the merchant is able to add record functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Add Record",This test case checks the validation for adding record functionality of the PayNOW datadriver.,Validate Add Record
Generate a robot framework test case for testing to Validate Merchant Is Able To Prevent Override functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to prevent override functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Prevent Override
    [Documentation] Test case for validating that the merchant is able to prevent override functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Prevent Override",This test case checks the validation for preventing override functionality of the PayNOW datadriver.,Validate Prevent Override
Generate a robot framework test case for testing to Validate Merchant Is Able To Edit Record functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to edit record functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Edit Record
    [Documentation] Test case for validating that the merchant is able to edit record functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Edit Record",This test case checks the validation for editing record functionality of the PayNOW datadriver.,Validate Edit Record
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Data With Date Filter In Virtual Terminal functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice data with date filter in virtual terminal functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Data With Date Filter In Virtual Terminal
    [Documentation] Test case for validating that the merchant is able to view invoice data with date filter in virtual terminal functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Data With Date Filter In Virtual Terminal",This test case checks the validation for viewing invoice data with date filter in virtual terminal functionality of the PayNOW datadriver.,Validate View Invoice Data With Date Filter In Virtual Terminal
Generate a robot framework test case for testing to Validate Merchant Is Able To Select All Invoices In Virtual Terminal Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to select all invoices in virtual terminal tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Select All Invoices In Virtual Terminal Tab
    [Documentation] Test case for validating that the merchant is able to select all invoices in virtual terminal tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Select All Invoices In Virtual Terminal Tab",This test case checks the validation for selecting all invoices in virtual terminal tab functionality of the PayNOW datadriver.,Validate Select All Invoices In Virtual Terminal Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To View Customer Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view customer information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Customer Information
    [Documentation] Test case for validating that the merchant is able to view customer information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Customer Information",This test case checks the validation for viewing customer information functionality of the PayNOW datadriver.,Validate View Customer Information
Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt In Customer Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view surcharge exempt in customer information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Exempt In Customer Information
    [Documentation] Test case for validating that the merchant is able to view surcharge exempt in customer information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Exempt In Customer Information",This test case checks the validation for viewing surcharge exempt in customer information functionality of the PayNOW datadriver.,Validate View Surcharge Exempt In Customer Information
Generate a robot framework test case for testing to Validate Merchant Is Able To View On Credit Hold Customers functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view on credit hold customers functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View On Credit Hold Customers
    [Documentation] Test case for validating that the merchant is able to view on credit hold customers functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View On Credit Hold Customers",This test case checks the validation for viewing on credit hold customers functionality of the PayNOW datadriver.,Validate View On Credit Hold Customers
Generate a robot framework test case for testing to Validate Merchant Is Unable To View Invoices In PayNOW When Disputed Is Enabled functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To View Invoices In PayNOW When Disputed Is Enabled
    [Documentation] Test case for validating that the merchant is unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Validate Unable To View Invoices In PayNOW When Disputed Is Enabled",This test case checks the validation for being unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver.,Validate Unable To View Invoices In PayNOW When Disputed Is Enabled
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In PayNOW When Disputed Is Disabled functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoices In PayNOW When Disputed Is Disabled
    [Documentation] Test case for validating that the merchant is able to view invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoices In PayNOW When Disputed Is Disabled",This test case checks the validation for viewing invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver.,Validate View Invoices In PayNOW When Disputed Is Disabled
Generate a robot framework test case for testing to Validate Merchant Is Able To View Average Invoice Age And Credit Limit In Customer Dashboard functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Average Invoice Age And Credit Limit In Customer Dashboard
    [Documentation] Test case for validating that the merchant is able to view average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Average Invoice Age And Credit Limit In Customer Dashboard",This test case checks the validation for viewing average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver.,Validate View Average Invoice Age And Credit Limit In Customer Dashboard
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Date And Due Date In Invoice Details Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice date and due date in invoice details page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Date And Due Date In Invoice Details Page
    [Documentation] Test case for validating that the merchant is able to view invoice date and due date in invoice details page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Date And Due Date In Invoice Details Page",This test case checks the validation for viewing invoice date and due date in invoice details page functionality of the PayNOW datadriver.,Validate View Invoice Date And Due Date In Invoice Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Days Overdue And Due Amount In Invoice Details Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view days overdue and due amount in invoice details page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Days Overdue And Due Amount In Invoice Details Page
    [Documentation] Test case for validating that the merchant is able to view days overdue and due amount in invoice details page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Days Overdue And Due Amount In Invoice Details Page",This test case checks the validation for viewing days overdue and due amount in invoice details page functionality of the PayNOW datadriver.,Validate View Days Overdue And Due Amount In Invoice Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Clicked Date And Count In Email Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view email clicked date and count in email details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Email Clicked Date And Count In Email Details
    [Documentation] Test case for validating that the merchant is able to view email clicked date and count in email details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Email Clicked Date And Count In Email Details",This test case checks the validation for viewing email clicked date and count in email details functionality of the PayNOW datadriver.,Validate View Email Clicked Date And Count In Email Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Credit Count And Credit Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view credit count and credit amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Credit Count And Credit Amount
    [Documentation] Test case for validating that the merchant is able to view credit count and credit amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Credit Count And Credit Amount",This test case checks the validation for viewing credit count and credit amount functionality of the PayNOW datadriver.,Validate View Credit Count And Credit Amount
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to cancel payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Cancel Payment Method
    [Documentation] Test case for validating that the merchant is able to cancel payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Cancel Payment Method",This test case checks the validation for canceling payment method functionality of the PayNOW datadriver.,Validate Cancel Payment Method
Generate a robot framework test case for testing to Validate Merchant Is Able To Add New Payment Method When One Exists functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to add new payment method when one exists functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Add New Payment Method When One Exists
    [Documentation] Test case for validating that the merchant is able to add new payment method when one exists functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Add New Payment Method When One Exists",This test case checks the validation for adding new payment method when one exists functionality of the PayNOW datadriver.,Validate Add New Payment Method When One Exists
Generate a robot framework test case for testing to Validate Merchant Is Able To Enable Multiple PDFs In Emails functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to enable multiple PDFs in emails functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Enable Multiple PDFs In Emails
    [Documentation] Test case for validating that the merchant is able to enable multiple PDFs in emails functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enable Multiple PDFs In Emails",This test case checks the validation for enabling multiple PDFs in emails functionality of the PayNOW datadriver.,Validate Enable Multiple PDFs In Emails
Generate a robot framework test case for testing to Validate All Invoices Due For 61-90 Days Are Selected When Customer Clicks On 61-90 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DUE_61_90_INVOICES}       due_61_90_invoices

*** Test Cases ***
Validate 61-90 Days Due Invoices Selected
    [Documentation] Test case for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click 61-90 Amount Link
    Validate All 61-90 Days Due Invoices Selected ${DUE_61_90_INVOICES}",This test case checks the validation for selecting all invoices due for 61-90 days when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate 61-90 Days Due Invoices Selected
Generate a robot framework test case for testing to Validate AutoPay functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the AutoPay functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate AutoPay
    [Documentation] Test case for validating the AutoPay functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Setup AutoPay ${AUTOPAY_DETAILS}
    Validate AutoPay Setup",This test case checks the validation for AutoPay functionality of the PayNOW datadriver.,Validate AutoPay
Generate a robot framework test case for testing to Validate Common API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the common API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${API_DETAILS}              api_details

*** Test Cases ***
Validate Common API
    [Documentation] Test case for validating the common API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter API Details ${API_DETAILS}
    Validate API Response",This test case checks the validation for common API functionality of the PayNOW datadriver.,Validate Common API
Generate a robot framework test case for testing to Validate Customer API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the customer API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_API_DETAILS}     customer_api_details

*** Test Cases ***
Validate Customer API
    [Documentation] Test case for validating the customer API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer API Details ${CUSTOMER_API_DETAILS}
    Validate API Response",This test case checks the validation for customer API functionality of the PayNOW datadriver.,Validate Customer API
Generate a robot framework test case for testing to Validate Invoice API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the invoice API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVOICE_API_DETAILS}      invoice_api_details

*** Test Cases ***
Validate Invoice API
    [Documentation] Test case for validating the invoice API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Invoice API Details ${INVOICE_API_DETAILS}
    Validate API Response",This test case checks the validation for invoice API functionality of the PayNOW datadriver.,Validate Invoice API
Generate a robot framework test case for testing to Validate Process Payment API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the process payment API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${PAYMENT_API_DETAILS}      payment_api_details

*** Test Cases ***
Validate Process Payment API
    [Documentation] Test case for validating the process payment API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Payment API Details ${PAYMENT_API_DETAILS}
    Validate API Response",This test case checks the validation for process payment API functionality of the PayNOW datadriver.,Validate Process Payment API
Generate a robot framework test case for testing to Validate Scheduled Payments API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the scheduled payments API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${SCHEDULED_API_DETAILS}    scheduled_api_details

*** Test Cases ***
Validate Scheduled Payments API
    [Documentation] Test case for validating the scheduled payments API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Scheduled API Details ${SCHEDULED_API_DETAILS}
    Validate API Response",This test case checks the validation for scheduled payments API functionality of the PayNOW datadriver.,Validate Scheduled Payments API
Generate a robot framework test case for testing to Validate Common Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the common open invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${COMMON_INVOICE_DETAILS}   common_invoice_details

*** Test Cases ***
Validate Common Open Invoices
    [Documentation] Test case for validating the common open invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Common Invoice Details ${COMMON_INVOICE_DETAILS}
    Validate Open Invoices Displayed",This test case checks the validation for common open invoices functionality of the PayNOW datadriver.,Validate Common Open Invoices
Generate a robot framework test case for testing to Validate Customer Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the customer payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_PAYMENT_DETAILS} customer_payment_details

*** Test Cases ***
Validate Customer Payment
    [Documentation] Test case for validating the customer payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Payment Details ${CUSTOMER_PAYMENT_DETAILS}
    Validate Payment Processed",This test case checks the validation for customer payment functionality of the PayNOW datadriver.,Validate Customer Payment
Generate a robot framework test case for testing to Validate Integrated Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the integrated open invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INTEGRATED_INVOICE_DETAILS} integrated_invoice_details

*** Test Cases ***
Validate Integrated Open Invoices
    [Documentation] Test case for validating the integrated open invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Integrated Invoice Details ${INTEGRATED_INVOICE_DETAILS}
    Validate Open Invoices Displayed",This test case checks the validation for integrated open invoices functionality of the PayNOW datadriver.,Validate Integrated Open Invoices
Generate a robot framework test case for testing to Validate Payment Status functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the payment status functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${PAYMENT_STATUS_DETAILS}   payment_status_details

*** Test Cases ***
Validate Payment Status
    [Documentation] Test case for validating the payment status functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Payment Status Details ${PAYMENT_STATUS_DETAILS}
    Validate Payment Status Displayed",This test case checks the validation for payment status functionality of the PayNOW datadriver.,Validate Payment Status
Generate a robot framework test case for testing to Validate Non-Integrated Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the non-integrated open invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${NONINTEGRATED_INVOICE_DETAILS} nonintegrated_invoice_details

*** Test Cases ***
Validate Non-Integrated Open Invoices
    [Documentation] Test case for validating the non-integrated open invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Non-Integrated Invoice Details ${NONINTEGRATED_INVOICE_DETAILS}
    Validate Open Invoices Displayed",This test case checks the validation for non-integrated open invoices functionality of the PayNOW datadriver.,Validate Non-Integrated Open Invoices
Generate a robot framework test case for testing to Validate User Login functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the user login functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${USER_LOGIN_DETAILS}       user_login_details

*** Test Cases ***
Validate User Login
    [Documentation] Test case for validating the user login functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter User Login Details ${USER_LOGIN_DETAILS}
    Validate Login Successful",This test case checks the validation for user login functionality of the PayNOW datadriver.,Validate User Login
Generate a robot framework test case for testing to Validate Omnicorp Autopay functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the omnicorp autopay functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${OMNICORP_AUTOPAY_DETAILS} omnicorp_autopay_details

*** Test Cases ***
Validate Omnicorp Autopay
    [Documentation] Test case for validating the omnicorp autopay functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Omnicorp Autopay Details ${OMNICORP_AUTOPAY_DETAILS}
    Validate Autopay Setup",This test case checks the validation for omnicorp autopay functionality of the PayNOW datadriver.,Validate Omnicorp Autopay
Generate a robot framework test case for testing to Validate Omnicorp Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the omnicorp open invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${OMNICORP_INVOICE_DETAILS} omnicorp_invoice_details

*** Test Cases ***
Validate Omnicorp Open Invoices
    [Documentation] Test case for validating the omnicorp open invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Omnicorp Invoice Details ${OMNICORP_INVOICE_DETAILS}
    Validate Open Invoices Displayed",This test case checks the validation for omnicorp open invoices functionality of the PayNOW datadriver.,Validate Omnicorp Open Invoices
Generate a robot framework test case for testing to Validate Omnicorp Scheduled Payments functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the omnicorp scheduled payments functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${OMNICORP_SCHEDULED_DETAILS} omnicorp_scheduled_details

*** Test Cases ***
Validate Omnicorp Scheduled Payments
    [Documentation] Test case for validating the omnicorp scheduled payments functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Omnicorp Scheduled Details ${OMNICORP_SCHEDULED_DETAILS}
    Validate Scheduled Payments",This test case checks the validation for omnicorp scheduled payments functionality of the PayNOW datadriver.,Validate Omnicorp Scheduled Payments
Generate a robot framework test case for testing to Validate Common API functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating the common API functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${API_DETAILS}              api_details

*** Test Cases ***
Validate Common API
    [Documentation] Test case for validating the common API functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter API Details ${API_DETAILS}
    Validate API Response",This test case checks the validation for common API functionality of the PayNOW datadriver.,Validate Common API
"Generate a robot framework test case for testing to Validate Merchant Is Able To View Number(#) And Amount($) Of Invoices, Credit Cards, And ACH Transactions In Transaction Summary functionality of the PayNOW datadriver.","*** Settings ***
Documentation          Test cases for validating that the merchant is able to view number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Transaction Summary View
    [Documentation] Test case for validating that the merchant is able to view number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Number And Amount Of Transactions Displayed","This test case checks the validation for viewing number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver.",Validate Transaction Summary View
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking On Customer Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Customer Details Page
    [Documentation] Test case for validating that the merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Customer Number
    Validate Navigation To Customer Details Page",This test case checks the validation for navigating to customer details page by clicking on customer number functionality of the PayNOW datadriver.,Validate Navigate To Customer Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Total Number(#) And Amount($) Of Transactions In The Transaction Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Total Transactions In Summary
    [Documentation] Test case for validating that the merchant is able to view the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Total Number And Amount Of Transactions Displayed",This test case checks the validation for viewing the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver.,Validate View Total Transactions In Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Transaction Amount($) And Count(#) After One Process Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Change In Transaction Summary
    [Documentation] Test case for validating that the merchant is able to view the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process A Transaction
    View Transaction Summary
    Validate Change In Number And Amount Of Transactions Displayed",This test case checks the validation for viewing the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver.,Validate View Change In Transaction Summary
Generate a robot framework test case for testing to Validate The Matrix Count(#) With The Transactions list Count functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the matrix count(#) matches with the transactions list count functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Matrix Count With Transactions List Count
    [Documentation] Test case for validating that the matrix count(#) matches with the transactions list count functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Matrix Count Matches Transactions List Count",This test case checks the validation for matching the matrix count(#) with the transactions list count functionality of the PayNOW datadriver.,Validate Matrix Count With Transactions List Count
Generate a robot framework test case for testing to Validate Merchant Is Able To View Auto Applied Checkbox Checked For Apply To Oldest Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Auto Applied Checkbox For Oldest Transaction
    [Documentation] Test case for validating that the merchant is able to view auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Auto Applied Checkbox Checked For Oldest Transaction",This test case checks the validation for viewing auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver.,Validate Auto Applied Checkbox For Oldest Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Auto Applied Checkbox Checked For Specific Invoice Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Auto Applied Checkbox For Specific Invoice Transaction
    [Documentation] Test case for validating that the merchant is able to view auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Auto Applied Checkbox Checked For Specific Invoice Transaction",This test case checks the validation for viewing auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver.,Validate Auto Applied Checkbox For Specific Invoice Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View ACHorcheck Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view ACHorcheck transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View ACHorcheck Transaction
    [Documentation] Test case for validating that the merchant is able to view ACHorcheck transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate ACHorcheck Transaction Displayed",This test case checks the validation for viewing ACHorcheck transaction functionality of the PayNOW datadriver.,Validate View ACHorcheck Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Credit Card Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view credit card transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Credit Card Transaction
    [Documentation] Test case for validating that the merchant is able to view credit card transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Credit Card Transaction Displayed",This test case checks the validation for viewing credit card transaction functionality of the PayNOW datadriver.,Validate View Credit Card Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transactions After Navigating To Next Page And Previous Page In Grid functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transactions After Page Navigation
    [Documentation] Test case for validating that the merchant is able to view transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Next Page
    Navigate To Previous Page
    Validate Transactions Displayed After Page Navigation",This test case checks the validation for viewing transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver.,Validate View Transactions After Page Navigation
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Paid ACH Count(#) And Amount($) After One Process Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Change In Paid ACH Count And Amount
    [Documentation] Test case for validating that the merchant is able to view the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process A Transaction
    View Transaction Summary
    Validate Change In Paid ACH Count And Amount",This test case checks the validation for viewing the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver.,Validate View Change In Paid ACH Count And Amount
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Paid Invoices Count(#) And Amount($) After One Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Change In Paid Invoices Count And Amount
    [Documentation] Test case for validating that the merchant is able to view the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process A Transaction
    View Transaction Summary
    Validate Change In Paid Invoices Count And Amount",This test case checks the validation for viewing the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver.,Validate View Change In Paid Invoices Count And Amount
Generate a robot framework test case for testing to Validate Merchant Is Able To Custom Date Range And View Transactions Summary And Payment Date In Grid functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Custom Date Range And View Transactions Summary
    [Documentation] Test case for validating that the merchant is able to custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Set Custom Date Range
    View Transaction Summary
    Validate Transactions Summary And Payment Date In Grid",This test case checks the validation for custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver.,Validate Custom Date Range And View Transactions Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Payment Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction payment date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Payment Date
    [Documentation] Test case for validating that the merchant is able to view transaction payment date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Transaction Payment Date",This test case checks the validation for viewing transaction payment date functionality of the PayNOW datadriver.,Validate View Transaction Payment Date
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count For Successful Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice count for successful transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Count For Successful Transaction
    [Documentation] Test case for validating that the merchant is able to view invoice count for successful transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Invoice Count For Successful Transaction",This test case checks the validation for viewing invoice count for successful transaction functionality of the PayNOW datadriver.,Validate View Invoice Count For Successful Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count For A Declined Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice count for a declined transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Count For Declined Transaction
    [Documentation] Test case for validating that the merchant is able to view invoice count for a declined transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Invoice Count For Declined Transaction",This test case checks the validation for viewing invoice count for a declined transaction functionality of the PayNOW datadriver.,Validate View Invoice Count For Declined Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count For Multiple Transactions functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoices count for multiple transactions functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoices Count For Multiple Transactions
    [Documentation] Test case for validating that the merchant is able to view invoices count for multiple transactions functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Invoices Count For Multiple Transactions",This test case checks the validation for viewing invoices count for multiple transactions functionality of the PayNOW datadriver.,Validate View Invoices Count For Multiple Transactions
Generate a robot framework test case for testing to Validate Merchant Is Able To View Partial Transactions Processed With ACHorEcheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Partial Transactions With ACHorEcheck
    [Documentation] Test case for validating that the merchant is able to view partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Partial Transactions With ACHorEcheck",This test case checks the validation for viewing partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver.,Validate View Partial Transactions With ACHorEcheck
Generate a robot framework test case for testing to Validate Merchant Is Able To View Partial Transactions Processed With Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view partial transactions processed with credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Partial Transactions With Credit Card
    [Documentation] Test case for validating that the merchant is able to view partial transactions processed with credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Partial Transactions With Credit Card",This test case checks the validation for viewing partial transactions processed with credit card functionality of the PayNOW datadriver.,Validate View Partial Transactions With Credit Card
Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Status In Grid functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view payment status in grid functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Payment Status In Grid
    [Documentation] Test case for validating that the merchant is able to view payment status in grid functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Payment Status In Grid",This test case checks the validation for viewing payment status in grid functionality of the PayNOW datadriver.,Validate View Payment Status In Grid
Generate a robot framework test case for testing to Validate Merchant Is Able To Send Receipt With Valid Email id functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to send receipt with valid email id functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${EMAIL}                    email@example.com

*** Test Cases ***
Validate Send Receipt With Valid Email id
    [Documentation] Test case for validating that the merchant is able to send receipt with valid email id functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Send Receipt ${EMAIL}
    Validate Receipt Sent",This test case checks the validation for sending receipt with valid email id functionality of the PayNOW datadriver.,Validate Send Receipt With Valid Email id
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to transaction details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Transaction Details
    [Documentation] Test case for validating that the merchant is able to navigate to transaction details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Transaction Details
    Validate Transaction Details Page",This test case checks the validation for navigating to transaction details functionality of the PayNOW datadriver.,Validate Navigate To Transaction Details
Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Type Details In Transaction Summary For ACH Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Payment Type Details For ACH Payment
    [Documentation] Test case for validating that the merchant is able to view payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Payment Type Details For ACH Payment",This test case checks the validation for viewing payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver.,Validate View Payment Type Details For ACH Payment
Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Type Details In Transaction Summary For Credit Card Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Payment Type Details For Credit Card Payment
    [Documentation] Test case for validating that the merchant is able to view payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Payment Type Details For Credit Card Payment",This test case checks the validation for viewing payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver.,Validate View Payment Type Details For Credit Card Payment
Generate a robot framework test case for testing to Validate Merchant Is Able To View Custom Fields And Billing Info In Transaction Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view custom fields and billing info in transaction summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Custom Fields And Billing Info In Transaction Summary
    [Documentation] Test case for validating that the merchant is able to view custom fields and billing info in transaction summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Custom Fields And Billing Info Displayed",This test case checks the validation for viewing custom fields and billing info in transaction summary functionality of the PayNOW datadriver.,Validate View Custom Fields And Billing Info In Transaction Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Approved Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction summary for approved transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Summary For Approved Transaction
    [Documentation] Test case for validating that the merchant is able to view transaction summary for approved transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Approved Transaction",This test case checks the validation for viewing transaction summary for approved transaction functionality of the PayNOW datadriver.,Validate View Transaction Summary For Approved Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Declined Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction summary for declined transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Summary For Declined Transaction
    [Documentation] Test case for validating that the merchant is able to view transaction summary for declined transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Declined Transaction",This test case checks the validation for viewing transaction summary for declined transaction functionality of the PayNOW datadriver.,Validate View Transaction Summary For Declined Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Filtered Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view filtered transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${FILTER_CRITERIA}          filter_criteria

*** Test Cases ***
Validate View Filtered Transaction
    [Documentation] Test case for validating that the merchant is able to view filtered transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Apply Filter ${FILTER_CRITERIA}
    View Filtered Transaction",This test case checks the validation for viewing filtered transaction functionality of the PayNOW datadriver.,Validate View Filtered Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To Sort Transactions By Type functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to sort transactions by type functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Sort Transactions By Type
    [Documentation] Test case for validating that the merchant is able to sort transactions by type functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Sort Transactions By Type
    Validate Sorted Transactions",This test case checks the validation for sorting transactions by type functionality of the PayNOW datadriver.,Validate Sort Transactions By Type
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Is Not Applied For ACH Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Amount Not Applied For ACH Transaction
    [Documentation] Test case for validating that the merchant is able to view the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate No Surcharge For ACH Transaction",This test case checks the validation for viewing the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver.,Validate View Surcharge Amount Not Applied For ACH Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Applied For Credit Card Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Surcharge Amount Applied For Credit Card Transaction
    [Documentation] Test case for validating that the merchant is able to view the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Surcharge Amount For Credit Card Transaction",This test case checks the validation for viewing the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver.,Validate View Surcharge Amount Applied For Credit Card Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View Items Per Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view items per page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Items Per Page
    [Documentation] Test case for validating that the merchant is able to view items per page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Items Per Page
    Validate Items Per Page Displayed",This test case checks the validation for viewing items per page functionality of the PayNOW datadriver.,Validate View Items Per Page
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Details In All Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice details in all transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Details In All Transaction
    [Documentation] Test case for validating that the merchant is able to view invoice details in all transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Details
    Validate Invoice Details Displayed",This test case checks the validation for viewing invoice details in all transaction functionality of the PayNOW datadriver.,Validate View Invoice Details In All Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To Collapse Invoice Details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to collapse invoice details functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Collapse Invoice Details
    [Documentation] Test case for validating that the merchant is able to collapse invoice details functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Collapse Invoice Details
    Validate Invoice Details Collapsed",This test case checks the validation for collapsing invoice details functionality of the PayNOW datadriver.,Validate Collapse Invoice Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page By Clicking On Invoice Number In All Transactions functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoice Details Page
    [Documentation] Test case for validating that the merchant is able to navigate to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Click Invoice Number
    Validate Navigation To Invoice Details Page",This test case checks the validation for navigating to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver.,Validate Navigate To Invoice Details Page
Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Receipt Popup functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to cancel send receipt popup functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Cancel Send Receipt Popup
    [Documentation] Test case for validating that the merchant is able to cancel send receipt popup functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Open Send Receipt Popup
    Cancel Send Receipt Popup
    Validate Popup Canceled",This test case checks the validation for canceling send receipt popup functionality of the PayNOW datadriver.,Validate Cancel Send Receipt Popup
Generate a robot framework test case for testing to Validate Merchant Is Able To View Alert Popup To Void Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view alert popup to void transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Alert Popup To Void Transaction
    [Documentation] Test case for validating that the merchant is able to view alert popup to void transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Void Transaction
    Validate Alert Popup Displayed",This test case checks the validation for viewing alert popup to void transaction functionality of the PayNOW datadriver.,Validate View Alert Popup To Void Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View AVS And CVV Response Code For Card Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view AVS and CVV response code for card payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View AVS And CVV Response Code For Card Payment
    [Documentation] Test case for validating that the merchant is able to view AVS and CVV response code for card payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Card Payment Details
    Validate AVS And CVV Response Code",This test case checks the validation for viewing AVS and CVV response code for card payment functionality of the PayNOW datadriver.,Validate View AVS And CVV Response Code For Card Payment
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Master Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction summary for Master credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Summary For Master Credit Card
    [Documentation] Test case for validating that the merchant is able to view transaction summary for Master credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Master Credit Card Transactions",This test case checks the validation for viewing transaction summary for Master credit card functionality of the PayNOW datadriver.,Validate View Transaction Summary For Master Credit Card
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Visa Debit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction summary for Visa debit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Transaction Summary For Visa Debit Card
    [Documentation] Test case for validating that the merchant is able to view transaction summary for Visa debit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Visa Debit Card Transactions",This test case checks the validation for viewing transaction summary for Visa debit card functionality of the PayNOW datadriver.,Validate View Transaction Summary For Visa Debit Card
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Amount Split up In Transaction Summary functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the amount split up in transaction summary functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Amount Split Up In Transaction Summary
    [Documentation] Test case for validating that the merchant is able to view the amount split up in transaction summary functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Amount Split Up Displayed",This test case checks the validation for viewing the amount split up in transaction summary functionality of the PayNOW datadriver.,Validate View Amount Split Up In Transaction Summary
Generate a robot framework test case for testing to Validate Merchant Is Able To View Settled Amount For Successful Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view settled amount for successful transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Settled Amount For Successful Transaction
    [Documentation] Test case for validating that the merchant is able to view settled amount for successful transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate Settled Amount Displayed",This test case checks the validation for viewing settled amount for successful transaction functionality of the PayNOW datadriver.,Validate View Settled Amount For Successful Transaction
Generate a robot framework test case for testing to Validate Merchant Is Unable To View Settled Amount For Declined Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to view settled amount for declined transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Settled Amount For Declined Transaction
    [Documentation] Test case for validating that the merchant is unable to view settled amount for declined transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate No Settled Amount For Declined Transaction",This test case checks the validation for not viewing settled amount for declined transaction functionality of the PayNOW datadriver.,Validate View Settled Amount For Declined Transaction
Generate a robot framework test case for testing to Validate Merchant Is Unable To View Settled Amount For Partial Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to view settled amount for partial transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Settled Amount For Partial Transaction
    [Documentation] Test case for validating that the merchant is unable to view settled amount for partial transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Transaction Summary
    Validate No Settled Amount For Partial Transaction",This test case checks the validation for not viewing settled amount for partial transaction functionality of the PayNOW datadriver.,Validate View Settled Amount For Partial Transaction
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Information (i) functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the surcharge amount information (i) functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View The Surcharge Amount Information (i)
    [Documentation] Test case for validating that the merchant is able to view the surcharge amount information (i) functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Surcharge Amount Information (i)
    Validate Surcharge Amount Information Displayed",This test case checks the validation for viewing the surcharge amount information (i) functionality of the PayNOW datadriver.,Validate View The Surcharge Amount Information (i)
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Due Amount After Processing Partial Payment Using ACH functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Change In Due Amount After Partial Payment Using ACH
    [Documentation] Test case for validating that the merchant is able to view the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Partial Payment Using ACH
    Validate Change In Due Amount Displayed",This test case checks the validation for viewing the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver.,Validate View Change In Due Amount After Partial Payment Using ACH
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Due Amount After Full Payment Using Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the change in due amount after full payment using credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Change In Due Amount After Full Payment Using Credit Card
    [Documentation] Test case for validating that the merchant is able to view the change in due amount after full payment using credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Full Payment Using Credit Card
    Validate Change In Due Amount Displayed",This test case checks the validation for viewing the change in due amount after full payment using credit card functionality of the PayNOW datadriver.,Validate View Change In Due Amount After Full Payment Using Credit Card
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Invoice Details After Processing Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the invoice details after processing multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Details After Processing Multiple Invoices
    [Documentation] Test case for validating that the merchant is able to view the invoice details after processing multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Multiple Invoices
    Validate Invoice Details Displayed",This test case checks the validation for viewing the invoice details after processing multiple invoices functionality of the PayNOW datadriver.,Validate View Invoice Details After Processing Multiple Invoices
Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Application Option When Processed Through Specific Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view payment application option when processed through specific invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Payment Application Option When Processed Through Specific Invoice
    [Documentation] Test case for validating that the merchant is able to view payment application option when processed through specific invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Payment Through Specific Invoice
    Validate Payment Application Option Displayed",This test case checks the validation for viewing payment application option when processed through specific invoice functionality of the PayNOW datadriver.,Validate View Payment Application Option When Processed Through Specific Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Application Option When Processed Through Lump Sum functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view payment application option when processed through lump sum functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Payment Application Option When Processed Through Lump Sum
    [Documentation] Test case for validating that the merchant is able to view payment application option when processed through lump sum functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Process Payment Through Lump Sum
    Validate Payment Application Option Displayed",This test case checks the validation for viewing payment application option when processed through lump sum functionality of the PayNOW datadriver.,Validate View Payment Application Option When Processed Through Lump Sum
Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Payment Details Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view invoice payment details tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Invoice Payment Details Tab
    [Documentation] Test case for validating that the merchant is able to view invoice payment details tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Invoice Payment Details Tab",This test case checks the validation for viewing invoice payment details tab functionality of the PayNOW datadriver.,Validate View Invoice Payment Details Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Invoice Payment Details Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to navigate to invoice details page from invoice payment details tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Navigate To Invoice Details Page From Invoice Payment Details Tab
    [Documentation] Test case for validating that the merchant is able to navigate to invoice details page from invoice payment details tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Invoice Details Page From Invoice Payment Details Tab",This test case checks the validation for navigating to invoice details page from invoice payment details tab functionality of the PayNOW datadriver.,Validate Navigate To Invoice Details Page From Invoice Payment Details Tab
Generate a robot framework test case for testing to Validate Merchant Is Able To View Approved Transactions functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view approved transactions functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Approved Transactions
    [Documentation] Test case for validating that the merchant is able to view approved transactions functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Approved Transactions",This test case checks the validation for viewing approved transactions functionality of the PayNOW datadriver.,Validate View Approved Transactions
Generate a robot framework test case for testing to Validate Merchant Is Able To View Not Approved Transactions functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view not approved transactions functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Not Approved Transactions
    [Documentation] Test case for validating that the merchant is able to view not approved transactions functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Not Approved Transactions",This test case checks the validation for viewing not approved transactions functionality of the PayNOW datadriver.,Validate View Not Approved Transactions
Generate a robot framework test case for testing to Validate Merchant Is Able To View The Refunded Amount After Void Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view the refunded amount after void transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Refunded Amount After Void Transaction
    [Documentation] Test case for validating that the merchant is able to view the refunded amount after void transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Void Transaction
    Validate Refunded Amount Displayed",This test case checks the validation for viewing the refunded amount after void transaction functionality of the PayNOW datadriver.,Validate View Refunded Amount After Void Transaction
Generate a robot framework test case for testing to Validate Merchant Is Unable To Void Payment Second Time For The Same Transaction functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to void payment second time for the same transaction functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Unable To Void Payment Second Time For Same Transaction
    [Documentation] Test case for validating that the merchant is unable to void payment second time for the same transaction functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Void Transaction
    Attempt To Void Same Transaction Again
    Validate Unable To Void Second Time",This test case checks the validation for not being able to void payment a second time for the same transaction functionality of the PayNOW datadriver.,Validate Unable To Void Payment Second Time For Same Transaction
Generate a Robot Framework test case for testing to validate account number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating account number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            ACH / eCheck
${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS
${ERROR_MESSAGE}             customer_details.Error_Message

*** Test Cases ***
Validate Account Number Functionality Of PayNOW
    [Documentation]    Test case for validating account number functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter ACH/ECheck Details    ${ACH_ECHECK_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the account number validation functionality for the PayNOW datadriver.,Validate Account Number Functionality Of PayNOW
Generate a Robot Framework test case for testing to validate invoice number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating invoice number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${SPECIFIC_INVOICE}          specific_invoice
${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS
${ERROR_MESSAGE}             specific invoice.Error_Message

*** Test Cases ***
Validate Invoice Number Functionality Of PayNOW
    [Documentation]    Test case for validating invoice number functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Click On Add Invoice    1
    Validate Invoice Details With Invalid Data    test_case_validation    ${SPECIFIC_INVOICE}
    Select Payment Method    ${ACH_ECHECK_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the invoice number validation functionality for the PayNOW datadriver.,Validate Invoice Number Functionality Of PayNOW
Generate a Robot Framework test case for testing to validate credit card number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating credit card number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            Credit Card
${CREDITCARD_DETAILS}        creditcard_details
${ERROR_MESSAGE}             creditcard_details.Error_Message

*** Test Cases ***
Validate Credit Card Number Functionality Of PayNOW
    [Documentation]    Test case for validating credit card number functionality of the PayNOW datadriver
    Generate Random Customer Details
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Values    ${CREDITCARD_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the credit card number validation functionality for the PayNOW datadriver.,Validate Credit Card Number Functionality Of PayNOW
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save All Account Type In ACHorEcheck Payment Method For Future Use functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Save All Account Types In ACHorEcheck Payment Method For Future Use
    [Documentation]    Test case for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    All Account Types
    Validate Payment Method Saved Successfully",This test case checks the validation for saving all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver.,Validate Save All Account Types In ACHorEcheck Payment Method For Future Use
Generate a Robot Framework test case for testing to validate routing number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating routing number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            ACH / eCheck
${ACH_ECHECK_DETAILS}        echeck_details
${ERROR_MESSAGE}             Ach.Error_Message

*** Test Cases ***
Validate Routing Number Functionality Of PayNOW
    [Documentation]    Test case for validating routing number functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter ACH/ECheck Values    ${ACH_ECHECK_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the routing number validation functionality for the PayNOW datadriver.,Validate Routing Number Functionality Of PayNOW
Generate a Robot Framework test case for testing to validate process payment with Visa Debit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating process payment with Visa Debit card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            Credit Card
${CREDITCARD_DETAILS}        creditcard_details
${ERROR_MESSAGE}             creditcard_details.Error_Message

*** Test Cases ***
Validate Process Payment With Visa Debit Card Functionality Of PayNOW
    [Documentation]    Test case for validating process payment with Visa Debit card functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Values    ${CREDITCARD_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the process payment functionality with Visa Debit card for the PayNOW datadriver.,Validate Process Payment With Visa Debit Card Functionality Of PayNOW
Generate a Robot Framework test case for testing to validate customer is unable to login into Paynow with invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to log in to PayNOW with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${ACCOUNT_NUMBER}            login_details.Account_Number
${INVOICE_NUMBER}            login_details.Invoice_Number
${ERROR_MESSAGE}             login_details.Error_Message
${ACCOUNT_NO}                login_details.Account_No
${CUSTOMER_NAME}             login_details.Customer_Name

*** Test Cases ***
Validate Customer Is Unable To Login With Invalid Account Number And Valid Or Invalid Invoice Number
    [Documentation]    Test case for validating that the customer is unable to log in to PayNOW with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Validate Error Message Is Displayed    ${ERROR_MESSAGE}
    Validate Account Number Is Displayed    ${ACCOUNT_NO}    ${CUSTOMER_NAME}",This test case checks the validation for customer login with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver.,Validate Customer Is Unable To Login With Invalid Account Number And Valid Or Invalid Invoice Number
Generate a Robot Framework test case for testing to validate customer is unable to login without invoice number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to log in without an invoice number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${ACCOUNT_NUMBER}            login_details.Account_Number
${ERROR_MESSAGE}             login_details.Error_Message1

*** Test Cases ***
Validate Customer Is Unable To Login Without Invoice Number
    [Documentation]    Test case for validating that the customer is unable to log in without an invoice number functionality of the PayNOW datadriver
    Launch PayNow Application    ${OMNICORP_MERCHANT}
    Enter Account Number And Invoice Number    ${ACCOUNT_NUMBER}
    Validate Error Message For Empty Details    ${ACCOUNT_NUMBER}
    Validate Error Message Is Displayed    ${ERROR_MESSAGE}",This test case checks the validation for customer login without an invoice number functionality of the PayNOW datadriver.,Validate Customer Is Unable To Login Without Invoice Number
Generate a Robot Framework test case for testing to validate merchant is able to schedule payment with master credit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to schedule payment with Master Credit Card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${ACCOUNT_NUMBER}            account_number
${INVOICE_NUMBER}            invoice_number
${CUSTOMER_DETAILS}          customer_details
${CREDIT_CARD_NUMBER}        Scheduled_Payments.Creditcard_Number
${EXPIRY_DATE}               Scheduled_Payments.Expiry_Date
${CVV}                       Scheduled_Payments.CVV
${SCHEDULED_STATUS}          Scheduled_Payments.Status

*** Test Cases ***
Validate Merchant Is Able To Schedule Payment With Master Credit Card
    [Documentation]    Test case for validating that the merchant is able to schedule payment with Master Credit Card functionality of the PayNOW datadriver
    Launch PayNow Application    ${OMNICORP_MERCHANT}
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${OMNICORP_MERCHANT}
    Select Payment Method    Credit Card
    Enter Credit Card Details    ${CREDIT_CARD_NUMBER}    ${EXPIRY_DATE}    ${CVV}
    Select Payment Date    today+1
    Create Schedule Payment
    Send Event To Process Schedule Payment    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Validate Scheduled Payment Status    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${SCHEDULED_STATUS}",This test case checks the validation for scheduling payment with Master Credit Card functionality of the PayNOW datadriver.,Validate Merchant Is Able To Schedule Payment With Master Credit Card
Generate a Robot Framework test case for testing to validate customer is able to process payment for CONNETICUT State (CT) with Credit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to process payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${STERLING_COOPER_MERCHANT}  STERLING_COOPER_MERCHANT
${ACCOUNT_NUMBER}            account_number
${INVOICE_NUMBER}            invoice_number
${STATES}                    states
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            Credit Card
${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS
${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage

*** Test Cases ***
Validate Customer Is Able To Process Payment For Connecticut State With Credit Card
    [Documentation]    Test case for validating that the customer is able to process payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver
    Send Request To Create Customer    ${STERLING_COOPER_MERCHANT}
    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${STERLING_COOPER_MERCHANT}
    Launch PayNow Application    ${STERLING_COOPER_MERCHANT}
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Enter Customer Details    ${STATES}    ${STERLING_COOPER_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}
    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}",This test case checks the validation for processing payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver.,Validate Customer Is Able To Process Payment For Connecticut State With Credit Card
Generate a Robot Framework test case for testing to validate customer is able to process payment for MAINE State (ME) with Credit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to process payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${ACCOUNT_NUMBER}            account_number
${INVOICE_NUMBER}            invoice_number
${STATES}                    states
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            97.99
${PAYMENT_METHOD}            Credit Card
${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS
${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage

*** Test Cases ***
Validate Customer Is Able To Process Payment For Maine State With Credit Card
    [Documentation]    Test case for validating that the customer is able to process payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver
    Send Request To Create Customer    ${OMNICORP_MERCHANT}
    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}
    Launch PayNow Application    ${OMNICORP_MERCHANT}
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Enter Customer Details    ${STATES}    ${OMNICORP_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}
    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the validation for processing payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver.,Validate Customer Is Able To Process Payment For Maine State With Credit Card
Generate a Robot Framework test case for testing to validate customer is able to process payment for MAINE State (ME) 2 with Credit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to process payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${ACCOUNT_NUMBER}            account_number
${INVOICE_NUMBER}            invoice_number
${STATES}                    states
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            97.99
${PAYMENT_METHOD}            Credit Card
${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS
${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage

*** Test Cases ***
Validate Customer Is Able To Process Payment For Maine State 2 With Credit Card
    [Documentation]    Test case for validating that the customer is able to process payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver
    Send Request To Create Customer    ${OMNICORP_MERCHANT}
    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}
    Launch PayNow Application    ${OMNICORP_MERCHANT}
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Enter Customer Details    ${STATES}    ${OMNICORP_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}
    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the validation for processing payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver.,Validate Customer Is Able To Process Payment For Maine State 2 With Credit Card
Generate a Robot Framework test case for testing to validate customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${ACCOUNT_NUMBER}            account_number
${INVOICE_NUMBER}            invoice_number
${PAYMENT_DETAILS_DAY}       Payment_details.Day
${CARD_NUMBER}               4111111111111111

*** Test Cases ***
Validate Customer Is Able To Schedule AutoPay Payments On A Sunday Of The Week
    [Documentation]    Test case for validating that the customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver
    Send Request To Create Customer    ${OMNICORP_MERCHANT}
    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}
    Login To PayNOW And Navigate To Autopay    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Select Specific Day Of The Week    ${PAYMENT_DETAILS_DAY}
    Select Invoices Due For The Payment
    Enter Customer And Credit Card Details For Autopay    ${CARD_NUMBER}
    Validate Created AutoPay Details For Specific Day    Days of Week    ${PAYMENT_DETAILS_DAY}
    Send Request To Create AutoPay For Specific Day    ${ACCOUNT_NUMBER}    ${CARD_NUMBER}    ${PAYMENT_DETAILS_DAY}
    Validate Created AutoPay Details For Specific Day    All Invoices Due    ${PAYMENT_DETAILS_DAY}
    Validate AutoPay Origin In Scheduled Payments    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    AutoPay",This test case checks the validation for scheduling autopay payments on a Sunday of the week functionality of the PayNOW datadriver.,Validate Customer Is Able To Schedule AutoPay Payments On A Sunday Of The Week
Generate a Robot Framework test case for testing to validate customer is unable to process payment by a decline card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to process payment by a declined card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            Credit Card
${CARD_DETAILS}              card_details
${ERROR_MESSAGE}             card_details.Error_Message

*** Test Cases ***
Validate Customer Is Unable To Process Payment By A Declined Card
    [Documentation]    Test case for validating that the customer is unable to process payment by a declined card functionality of the PayNOW datadriver
    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Values    ${CARD_DETAILS}
    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}",This test case checks the validation for processing payment by a declined card functionality of the PayNOW datadriver.,Validate Customer Is Unable To Process Payment By A Declined Card
Generate a Robot Framework test case for testing to validate non integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that a non-integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT
${CUSTOMER_DETAILS}          customer_details
${PAYMENT_TYPE}              Lump Sum
${LUMPSUM_AMOUNT}            1
${PAYMENT_METHOD}            Credit Card
${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS
${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS

*** Test Cases ***
Validate Non Integrated Customer Is Able To Process The Last Statement Payment Using Credit Card
    [Documentation]    Test case for validating that a non-integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver
    Generate Random Customer Details
    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}
    Select Payment Type    ${PAYMENT_TYPE}
    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}
    Select Payment Method    ${PAYMENT_METHOD}
    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}
    Validate Total Charges Under Summary Of Payment    $1.03
    Process Invoice Payment
    Validate Payment Receipt Is Generated
    Select Payment Method    ACH / eCheck
    Enter ACH/ECheck Details    ${ACH_ECHECK_DETAILS}
    Process Invoice Payment
    Validate Payment Receipt Is Generated",This test case checks the validation for processing the last statement payment using credit card functionality of the PayNOW datadriver by a non-integrated customer.,Validate Non Integrated Customer Is Able To Process The Last Statement Payment Using Credit Card
Generate a robot framework test case for testing to Validate That Customer Is Able To Expand And Collapse Line Items With '+ & -' Icons In invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to expand and collapse line items with '+ & -' icons in invoice page functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate Expand And Collapse Line Items In Invoice Page
    [Documentation]    Test case for validating that the customer is able to expand and collapse line items with '+ & -' icons in invoice page functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Validate Expand Line Item    ${INVOICE_DETAILS}
    Validate Collapse Line Item    ${INVOICE_DETAILS}",This test case checks the validation for expanding and collapsing line items with '+ & -' icons in the invoice page functionality of the PayNOW datadriver.,Validate Expand And Collapse Line Items In Invoice Page
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Add Two Or More ACHoreCheck Payment Method Of Same Account Type For Future Use functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to add two or more ACHoreCheck payment method of same account type for future use functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Add Multiple ACHoreCheck Payment Methods For Future Use
    [Documentation]    Test case for validating that integrated customer is able to add two or more ACHoreCheck payment method of same account type for future use functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHoreCheck Payment Method    ${ACH_DETAILS}
    Validate Payment Method Added Successfully
    Add Another ACHoreCheck Payment Method    ${ACH_DETAILS}
    Validate Both Payment Methods Are Saved",This test case checks the validation for adding two or more ACHoreCheck payment methods of the same account type for future use functionality of the PayNOW datadriver.,Validate Add Multiple ACHoreCheck Payment Methods For Future Use
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck For Future Use With Account Type - Business Savings functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Save ACHorEcheck For Future Use With Business Savings
    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Business Savings
    Validate Payment Method Saved Successfully",This test case checks the validation for saving ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver.,Validate Save ACHorEcheck For Future Use With Business Savings
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck for future Use With Account Type - Personal Checking functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Save ACHorEcheck For Future Use With Personal Checking
    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Personal Checking
    Validate Payment Method Saved Successfully",This test case checks the validation for saving ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver.,Validate Save ACHorEcheck For Future Use With Personal Checking
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck for future Use With Account Type - Personal Savings functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Save ACHorEcheck For Future Use With Personal Savings
    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Personal Savings
    Validate Payment Method Saved Successfully",This test case checks the validation for saving ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver.,Validate Save ACHorEcheck For Future Use With Personal Savings
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save All Account Type In ACHorEcheck Payment Method For Future Use functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${ACH_DETAILS}               ach_details

*** Test Cases ***
Validate Save All Account Types In ACHorEcheck Payment Method For Future Use
    [Documentation]    Test case for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    All Account Types
    Validate Payment Method Saved Successfully",This test case checks the validation for saving all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver.,Validate Save All Account Types In ACHorEcheck Payment Method For Future Use
Generate a robot framework test case for testing to Validate Customer Is Not Able To Process Partial Payment For More Than Two Invoices Without Giving Notes For All functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is not able to process partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate Not Able To Process Partial Payment For More Than Two Invoices Without Notes
    [Documentation]    Test case for validating that the customer is not able to process partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select More Than Two Invoices
    Enter Partial Payment Amounts
    Attempt To Process Payment Without Notes
    Validate Error Message Displayed    ${INVOICE_DETAILS}",This test case checks the validation for processing partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver.,Validate Not Able To Process Partial Payment For More Than Two Invoices Without Notes
Generate a robot framework test case for testing to Validate Customer Is Unable To Change Amount To Pay To A Negative Value Or Value More Than Amount Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to change amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate Unable To Change Amount To Pay To Negative Or More Than Amount Due
    [Documentation]    Test case for validating that the customer is unable to change amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select Invoice
    Attempt To Change Amount To Negative Value
    Validate Error Message Displayed    ${INVOICE_DETAILS}
    Attempt To Change Amount To More Than Amount Due
    Validate Error Message Displayed    ${INVOICE_DETAILS}",This test case checks the validation for changing amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver.,Validate Unable To Change Amount To Pay To Negative Or More Than Amount Due
Generate a robot framework test case for testing to Validate Checkbox For An Invoice Gets Unchecked When Zero Amount To Pay Is Entered For That Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the checkbox for an invoice gets unchecked when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate Checkbox Unchecked When Zero Amount To Pay Entered
    [Documentation]    Test case for validating that the checkbox for an invoice gets unchecked when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select Invoice
    Enter Zero Amount To Pay
    Validate Checkbox Gets Unchecked    ${INVOICE_DETAILS}",This test case checks the validation for checkbox getting unchecked for an invoice when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver.,Validate Checkbox Unchecked When Zero Amount To Pay Entered
Generate a robot framework test case for testing to Validate Checkbox For An Invoice Gets Checkedorticked When A Non-zero Amount Is Entered In 'Amount To Pay' For That Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the checkbox for an invoice gets checked/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate Checkbox Checked When Non-zero Amount Entered
    [Documentation]    Test case for validating that the checkbox for an invoice gets checked/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select Invoice
    Enter Non-zero Amount To Pay
    Validate Checkbox Gets Checked    ${INVOICE_DETAILS}",This test case checks the validation for the checkbox getting checked/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver.,Validate Checkbox Checked When Non-zero Amount Entered
Generate a robot framework test case for testing to Validate Customers Is Able To View All Invoices Associated With The Account Number In Open Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customers are able to view all invoices associated with the account number in open invoices functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${ACCOUNT_NUMBER}            account_number
${INVOICE_DETAILS}           invoice_details

*** Test Cases ***
Validate View All Invoices Associated With Account Number
    [Documentation]    Test case for validating that the customers are able to view all invoices associated with the account number in open invoices functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Account Number    ${ACCOUNT_NUMBER}
    Navigate To Open Invoices Page
    Validate All Invoices Displayed    ${INVOICE_DETAILS}",This test case checks the validation for viewing all invoices associated with the account number in open invoices functionality of the PayNOW datadriver.,Validate View All Invoices Associated With Account Number
Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable To Login With invoice Without Entering Valid Invoice Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVALID_INVOICE_NUMBER}    invalid_invoice_number

*** Test Cases ***
Validate Enter PayNOW Without Invoice Number And Unable To Login With Invalid Invoice
    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Attempt To Login Without Invoice Number
    Validate Unable To Login    ${INVALID_INVOICE_NUMBER}
    Attempt To Login With Invalid Invoice Number
    Validate Unable To Login    ${INVALID_INVOICE_NUMBER}",This test case checks the validation for entering PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver.,Validate Enter PayNOW Without Invoice Number And Unable To Login With Invalid Invoice
Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable To Process Payment For Invalid Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVALID_INVOICE_NUMBER}    invalid_invoice_number

*** Test Cases ***
Validate Enter PayNOW Without Invoice Number And Unable To Process Invalid Invoices
    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Attempt To Process Payment Without Invoice Number
    Validate Unable To Process Payment    ${INVALID_INVOICE_NUMBER}
    Attempt To Process Payment For Invalid Invoice
    Validate Unable To Process Payment    ${INVALID_INVOICE_NUMBER}",This test case checks the validation for entering PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver.,Validate Enter PayNOW Without Invoice Number And Unable To Process Invalid Invoices
Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable to Process Payment By Loading Invalid Account Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${INVALID_ACCOUNT_NUMBER}    invalid_account_number

*** Test Cases ***
Validate Enter PayNOW Without Invoice Number And Unable To Process Payment With Invalid Account Number
    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Attempt To Process Payment Without Invoice Number
    Validate Unable To Process Payment    ${INVALID_ACCOUNT_NUMBER}
    Attempt To Process Payment With Invalid Account Number
    Validate Unable To Process Payment    ${INVALID_ACCOUNT_NUMBER}",This test case checks the validation for entering PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver.,Validate Enter PayNOW Without Invoice Number And Unable To Process Payment With Invalid Account Number
Generate a robot framework test case for testing to Validate Customer Is Able To Enter Into Paynow With Valid Credentials After Three Previous Failed Login Attempts functionality of the PayNOW datadriver.,"*** Settings *** 
Documentation   Test cases for validating that the customer is able to enter into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver
Library         SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${VALID_CREDENTIALS}        valid_credentials
${INVALID_CREDENTIALS}      invalid_credentials

*** Test Cases ***
Validate Enter Paynow With Valid Credentials After Three Failed Login Attempts
    [Documentation]             Test case for validating that the customer is able to enter into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver
    Launch PayNow Application   ${URL}
    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}
    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}
    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}
    Attempt Login With Valid Credentials ${VALID_CREDENTIALS}
    Validate Successful Login",This test case checks the validation for entering into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver.,Validate Enter Paynow With Valid Credentials After Three Failed Login Attempts
Generate a robot framework test case for testing to Validate Surcharge Cache Is Cleared When Customer Switches Payment Methods From Saved Credit Card To ACHorECheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the surcharge cache is cleared when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CREDIT_CARD_DETAILS}      credit_card_details
${ACH_DETAILS}              ach_details

*** Test Cases ***
Validate Surcharge Cache Cleared When Switching Payment Methods
    [Documentation] Test case for validating that the surcharge cache is cleared when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Payment Method ${CREDIT_CARD_DETAILS}
    Validate Surcharge Applied
    Switch To ACHorECheck Payment Method ${ACH_DETAILS}
    Validate Surcharge Cache Cleared",This test case checks the validation for clearing the surcharge cache when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver.,Validate Surcharge Cache Cleared When Switching Payment Methods
Generate a robot framework test case for testing to Validate Customer Discount Amount Is Applied On Total Due Amount If Payment Is Made Before The Terms Discount Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer discount amount is applied on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DISCOUNT_DETAILS}         discount_details

*** Test Cases ***
Validate Discount Applied Before Terms Discount Date
    [Documentation] Test case for validating that the customer discount amount is applied on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Validate Total Due Amount ${DISCOUNT_DETAILS}
    Make Payment Before Discount Date
    Validate Discount Applied",This test case checks the validation for applying customer discount amount on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver.,Validate Discount Applied Before Terms Discount Date
Generate a robot framework test case for testing to Validate Surcharge Is Applied As Per The State And This Is Added With Payment Amount To Get The Total Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the surcharge is applied as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${STATE_SURCHARGE_DETAILS}  state_surcharge_details

*** Test Cases ***
Validate Surcharge Applied As Per State
    [Documentation] Test case for validating that the surcharge is applied as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select State ${STATE_SURCHARGE_DETAILS}
    Validate Surcharge Applied
    Validate Total Amount Including Surcharge",This test case checks the validation for applying surcharge as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver.,Validate Surcharge Applied As Per State
Generate a robot framework test case for testing to Validate All Current Due Amount Invoice Are Selected When Customer Click On Current Due Amount Link In Outstanding Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all current due amount invoices are selected when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CURRENT_DUE_INVOICES}     current_due_invoices

*** Test Cases ***
Validate Current Due Amount Invoices Selected
    [Documentation] Test case for validating that all current due amount invoices are selected when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click Current Due Amount Link
    Validate All Current Due Invoices Selected ${CURRENT_DUE_INVOICES}",This test case checks the validation for selecting all current due amount invoices when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver.,Validate Current Due Amount Invoices Selected
Generate a robot framework test case for testing to Validate All Invoices Due for 1-30 Days Are Selected When Customer Clicks On 1-30 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices due for 1-30 days are selected when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DUE_1_30_INVOICES}        due_1_30_invoices

*** Test Cases ***
Validate 1-30 Days Due Invoices Selected
    [Documentation] Test case for validating that all invoices due for 1-30 days are selected when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click 1-30 Amount Link
    Validate All 1-30 Days Due Invoices Selected ${DUE_1_30_INVOICES}",This test case checks the validation for selecting all invoices due for 1-30 days when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate 1-30 Days Due Invoices Selected
Generate a robot framework test case for testing to Validate All Invoices Due For 31-60 Days Are Selected When Customer Clicks On 31-60 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices due for 31-60 days are selected when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DUE_31_60_INVOICES}       due_31_60_invoices

*** Test Cases ***
Validate 31-60 Days Due Invoices Selected
    [Documentation] Test case for validating that all invoices due for 31-60 days are selected when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click 31-60 Amount Link
    Validate All 31-60 Days Due Invoices Selected ${DUE_31_60_INVOICES}",This test case checks the validation for selecting all invoices due for 31-60 days when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate 31-60 Days Due Invoices Selected
Generate a robot framework test case for testing to Validate All Invoices Due For 61-90 Days Are Selected When Customer Clicks On 61-90 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DUE_61_90_INVOICES}       due_61_90_invoices

*** Test Cases ***
Validate 61-90 Days Due Invoices Selected
    [Documentation] Test case for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click 61-90 Amount Link
    Validate All 61-90 Days Due Invoices Selected ${DUE_61_90_INVOICES}",This test case checks the validation for selecting all invoices due for 61-90 days when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate 61-90 Days Due Invoices Selected
Generate a robot framework test case for testing to Validate All Invoices Due For Over 90 Days Are Selected When Customer Clicks On Over 90 Amount Link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices due for over 90 days are selected when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DUE_OVER_90_INVOICES}     due_over_90_invoices

*** Test Cases ***
Validate Over 90 Days Due Invoices Selected
    [Documentation] Test case for validating that all invoices due for over 90 days are selected when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click Over 90 Amount Link
    Validate All Over 90 Days Due Invoices Selected ${DUE_OVER_90_INVOICES}",This test case checks the validation for selecting all invoices due for over 90 days when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate Over 90 Days Due Invoices Selected
Generate a robot framework test case for testing to Validate All Invoice Are Selected When Customer Clicks On Total Amount Link In Summary of Outstanding Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that all invoices are selected when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${TOTAL_INVOICES}           total_invoices

*** Test Cases ***
Validate Total Amount Invoices Selected
    [Documentation] Test case for validating that all invoices are selected when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click Total Amount Link
    Validate All Invoices Selected ${TOTAL_INVOICES}",This test case checks the validation for selecting all invoices when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver.,Validate Total Amount Invoices Selected
Generate a robot framework test case for testing to Validate That Customer Is Able To Expand And Collapse Line Items In Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to expand and collapse line items in invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Expand And Collapse Line Items
    [Documentation] Test case for validating that the customer is able to expand and collapse line items in invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Expand Line Items ${INVOICE_DETAILS}
    Collapse Line Items ${INVOICE_DETAILS}
    Validate Expand And Collapse Functionality",This test case checks the validation for expanding and collapsing line items in invoice page functionality of the PayNOW datadriver.,Validate Expand And Collapse Line Items
Generate a robot framework test case for testing to Validate Customer Is Unable To Login Into Paynow With Empty Account Number And Invoice Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to login into Paynow with empty account number and invoice number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${EMPTY_CREDENTIALS}        empty_credentials

*** Test Cases ***
Validate Unable To Login With Empty Credentials
    [Documentation] Test case for validating that the customer is unable to login into Paynow with empty account number and invoice number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Attempt Login With Empty Credentials ${EMPTY_CREDENTIALS}
    Validate Login Failure",This test case checks the validation for login failure with empty account number and invoice number functionality of the PayNOW datadriver.,Validate Unable To Login With Empty Credentials
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Click on Payment Secured Link And Close It functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to click on payment secured link and close it functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_SECURED_LINK}     payment_secured_link

*** Test Cases ***
Validate Click And Close Payment Secured Link
    [Documentation] Test case for validating that the integrated customer is able to click on payment secured link and close it functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click Payment Secured Link ${PAYMENT_SECURED_LINK}
    Close Payment Secured Link
    Validate Link Closure",This test case checks the validation for clicking and closing the payment secured link functionality of the PayNOW datadriver.,Validate Click And Close Payment Secured Link
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save Credit Card Payment Method For Future Use functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to save credit card payment method for future use functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CREDIT_CARD_DETAILS}      credit_card_details

*** Test Cases ***
Validate Save Credit Card For Future Use
    [Documentation] Test case for validating that the integrated customer is able to save credit card payment method for future use functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Credit Card Details ${CREDIT_CARD_DETAILS}
    Save Credit Card For Future Use
    Validate Credit Card Saved",This test case checks the validation for saving credit card payment method for future use functionality of the PayNOW datadriver.,Validate Save Credit Card For Future Use
Generate a robot framework test case for testing to Validate Integrated Customer Able To Add Two or More Credit Cards For Future Use functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to add two or more credit cards for future use functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CREDIT_CARD_1_DETAILS}    credit_card_1_details
${CREDIT_CARD_2_DETAILS}    credit_card_2_details

*** Test Cases ***
Validate Add Multiple Credit Cards For Future Use
    [Documentation] Test case for validating that the integrated customer is able to add two or more credit cards for future use functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter First Credit Card Details ${CREDIT_CARD_1_DETAILS}
    Save First Credit Card For Future Use
    Enter Second Credit Card Details ${CREDIT_CARD_2_DETAILS}
    Save Second Credit Card For Future Use
    Validate Multiple Credit Cards Saved",This test case checks the validation for adding two or more credit cards for future use functionality of the PayNOW datadriver.,Validate Add Multiple Credit Cards For Future Use
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Click On 'Find Routing Number' In ACHorEcheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to click on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${FIND_ROUTING_NUMBER_LINK} find_routing_number_link

*** Test Cases ***
Validate Click On 'Find Routing Number' Link
    [Documentation] Test case for validating that the integrated customer is able to click on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Click On 'Find Routing Number' Link ${FIND_ROUTING_NUMBER_LINK}
    Validate Routing Number Link Clicked",This test case checks the validation for clicking on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver.,Validate Click On 'Find Routing Number' Link
Generate a robot framework test case for testing to Validate That The Customer Is Able To View Paid Payment Status On Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view paid payment status on invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate View Paid Payment Status On Invoice Page
    [Documentation] Test case for validating that the customer is able to view paid payment status on invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    View Paid Payment Status ${INVOICE_DETAILS}
    Validate Paid Payment Status Viewed",This test case checks the validation for viewing paid payment status on invoice page functionality of the PayNOW datadriver.,Validate View Paid Payment Status On Invoice Page
Generate a robot framework test case for testing to Validate Customer Is Able Resume The Process Payment After Resolving Errors functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to resume the process payment after resolving errors functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Resume Process Payment After Resolving Errors
    [Documentation] Test case for validating that the customer is able to resume the process payment after resolving errors functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Attempt Process Payment ${INVOICE_DETAILS}
    Resolve Errors
    Resume Process Payment
    Validate Process Payment Resumed",This test case checks the validation for resuming the process payment after resolving errors functionality of the PayNOW datadriver.,Validate Resume Process Payment After Resolving Errors
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Gounified Website From PayNOW Application functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to Gounified website from PayNOW application functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${GOUNIFIED_URL}            gounified_url

*** Test Cases ***
Validate Navigate To Gounified Website
    [Documentation] Test case for validating that the customer is able to navigate to Gounified website from PayNOW application functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Gounified Website ${GOUNIFIED_URL}
    Validate Navigation Successful",This test case checks the validation for navigating to Gounified website from PayNOW application functionality of the PayNOW datadriver.,Validate Navigate To Gounified Website
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To PayNOW Application From Payment Receipt Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to PayNOW application from payment receipt page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${RECEIPT_PAGE}             receipt_page

*** Test Cases ***
Validate Navigate To PayNOW From Receipt Page
    [Documentation] Test case for validating that the customer is able to navigate to PayNOW application from payment receipt page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Receipt Page ${RECEIPT_PAGE}
    Navigate To PayNOW Application
    Validate Navigation Successful",This test case checks the validation for navigating to PayNOW application from payment receipt page functionality of the PayNOW datadriver.,Validate Navigate To PayNOW From Receipt Page
Generate a robot framework test case for testing to Validate Customer Is Able To View Paid Invoices Depending On Selected Start Date And End Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view paid invoices depending on selected start date and end date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View Paid Invoices By Date Range
    [Documentation] Test case for validating that the customer is able to view paid invoices depending on selected start date and end date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Paid Invoices
    Validate Paid Invoices Displayed",This test case checks the validation for viewing paid invoices depending on selected start date and end date functionality of the PayNOW datadriver.,Validate View Paid Invoices By Date Range
Generate a robot framework test case for testing to Validate Customer Is Able To Process Payment By Using Saved Credit Card Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to process payment by using saved credit card payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SAVED_CREDIT_CARD}        saved_credit_card

*** Test Cases ***
Validate Process Payment Using Saved Credit Card
    [Documentation] Test case for validating that the customer is able to process payment by using saved credit card payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Saved Credit Card ${SAVED_CREDIT_CARD}
    Process Payment
    Validate Payment Processed",This test case checks the validation for processing payment by using saved credit card payment method functionality of the PayNOW datadriver.,Validate Process Payment Using Saved Credit Card
Generate a robot framework test case for testing to Validate Customer Is Able To Edit Only The Nickname Of The Customer In The Saved Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to edit only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SAVED_PAYMENT_METHOD}     saved_payment_method
${NEW_NICKNAME}             new_nickname

*** Test Cases ***
Validate Edit Nickname In Saved Payment Method
    [Documentation] Test case for validating that the customer is able to edit only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Saved Payment Method ${SAVED_PAYMENT_METHOD}
    Edit Nickname ${NEW_NICKNAME}
    Validate Nickname Edited",This test case checks the validation for editing only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver.,Validate Edit Nickname In Saved Payment Method
Generate a robot framework test case for testing to Validate Customer Is Able To Close(X) The Delete Payment Method Confirmation Pop-Up Window functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to close(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DELETE_CONFIRM_POPUP}     delete_confirm_popup

*** Test Cases ***
Validate Close Delete Payment Method Popup
    [Documentation] Test case for validating that the customer is able to close(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Trigger Delete Payment Method Popup ${DELETE_CONFIRM_POPUP}
    Close Delete Payment Method Popup
    Validate Popup Closed",This test case checks the validation for closing(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver.,Validate Close Delete Payment Method Popup
Generate a robot framework test case for testing to Validate Customer Is Able To Process Payment By Using Saved ACHorECheck Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to process payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SAVED_ACH_METHOD}         saved_ach_method

*** Test Cases ***
Validate Process Payment Using Saved ACH Method
    [Documentation] Test case for validating that the customer is able to process payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Saved ACHorECheck Method ${SAVED_ACH_METHOD}
    Process Payment
    Validate Payment Processed",This test case checks the validation for processing payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver.,Validate Process Payment Using Saved ACH Method
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment For Multiple Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to process payment for multiple invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Process Payment For Multiple Invoices
    [Documentation] Test case for validating that the integrated customer is able to process payment for multiple invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Access Multiple Invoices ${INVOICE_DETAILS}
    Process Payment
    Validate Payment Successfully Processed",This test case checks the validation for processing payment for multiple invoices functionality of the PayNOW datadriver.,Validate Process Payment For Multiple Invoices
Generate a robot framework test case for testing to Validate That Invoice Number Gets Checked After Clicking Pay Invoice Button On Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the invoice number gets checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Invoice Number Checked After Clicking Pay Invoice Button
    [Documentation] Test case for validating that the invoice number gets checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Click Pay Invoice Button ${INVOICE_DETAILS}
    Validate Invoice Number Checked",This test case checks the validation for invoice number getting checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver.,Validate Invoice Number Checked After Clicking Pay Invoice Button
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment Through Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to process payment through credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CREDIT_CARD_DETAILS}      credit_card_details

*** Test Cases ***
Validate Process Payment Through Credit Card
    [Documentation] Test case for validating that the integrated customer is able to process payment through credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Credit Card Payment Method ${CREDIT_CARD_DETAILS}
    Process Payment
    Validate Payment Processed",This test case checks the validation for processing payment through credit card functionality of the PayNOW datadriver.,Validate Process Payment Through Credit Card
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment Through ACHorECheck functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to process payment through ACHorECheck functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${ACH_DETAILS}              ach_details

*** Test Cases ***
Validate Process Payment Through ACHorECheck
    [Documentation] Test case for validating that the integrated customer is able to process payment through ACHorECheck functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select ACHorECheck Payment Method ${ACH_DETAILS}
    Process Payment
    Validate Payment Processed",This test case checks the validation for processing payment through ACHorECheck functionality of the PayNOW datadriver.,Validate Process Payment Through ACHorECheck
Generate a robot framework test case for testing to Validate Integrated Customer Unable To Process Payment More Than Due Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is unable to process payment more than due amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Unable To Process Payment More Than Due Amount
    [Documentation] Test case for validating that the integrated customer is unable to process payment more than due amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Attempt Process Payment More Than Due Amount ${INVOICE_DETAILS}
    Validate Payment Failure",This test case checks the validation for being unable to process payment more than due amount functionality of the PayNOW datadriver.,Validate Unable To Process Payment More Than Due Amount
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details

*** Test Cases ***
Validate Process The Lump Sum Payment
    [Documentation] Test case for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}
    Validate Payment Processed",This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.,Validate Process The Lump Sum Payment
Generate a robot framework test case for testing to Validate Customer Is Able To Load Unpaid Invoice When Entered Into Paynow Without Invoice Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to load unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${UNPAID_INVOICE_DETAILS}   unpaid_invoice_details

*** Test Cases ***
Validate Load Unpaid Invoice Without Invoice Number
    [Documentation] Test case for validating that the customer is able to load unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Load Unpaid Invoice ${UNPAID_INVOICE_DETAILS}
    Validate Unpaid Invoice Loaded",This test case checks the validation for loading unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver.,Validate Load Unpaid Invoice Without Invoice Number
Generate a robot framework test case for testing to Validate Total Amount Is Updated As Per The Changes In Invoices Due Amount functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Total Amount Updated As Per Changes In Invoices Due Amount
    [Documentation] Test case for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Update Invoices Due Amount ${INVOICE_DETAILS}
    Validate Total Amount Updated",This test case checks the validation for total amount updating as per the changes in invoices due amount functionality of the PayNOW datadriver.,Validate Total Amount Updated As Per Changes In Invoices Due Amount
Generate a robot framework test case for testing to Validate Only Filtered Invoices Are Displayed As Per The Filter Conditions functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that only filtered invoices are displayed as per the filter conditions functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${FILTER_CONDITIONS}        filter_conditions

*** Test Cases ***
Validate Only Filtered Invoices Displayed As Per Filter Conditions
    [Documentation] Test case for validating that only filtered invoices are displayed as per the filter conditions functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Apply Filter Conditions ${FILTER_CONDITIONS}
    Validate Filtered Invoices Displayed",This test case checks the validation for only filtered invoices being displayed as per the filter conditions functionality of the PayNOW datadriver.,Validate Only Filtered Invoices Displayed As Per Filter Conditions
Generate a robot framework test case for testing to Validate Customer Is Able To Select Pages From Dropdown In Specific Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to select pages from dropdown in specific invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DROPDOWN_OPTIONS}         dropdown_options

*** Test Cases ***
Validate Select Pages From Dropdown In Specific Invoices
    [Documentation] Test case for validating that the customer is able to select pages from dropdown in specific invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Pages From Dropdown ${DROPDOWN_OPTIONS}
    Validate Pages Selected",This test case checks the validation for selecting pages from dropdown in specific invoices functionality of the PayNOW datadriver.,Validate Select Pages From Dropdown In Specific Invoices
Generate a robot framework test case for testing to Validate Invoice Check Box Should Be Checked By Default When It Passed Due Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the invoice check box should be checked by default when it passed due date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Invoice Check Box Checked By Default When Passed Due Date
    [Documentation] Test case for validating that the invoice check box should be checked by default when it passed due date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Validate Invoice Check Box Checked",This test case checks the validation for invoice check box being checked by default when it passed due date functionality of the PayNOW datadriver.,Validate Invoice Check Box Checked By Default When Passed Due Date
Generate a robot framework test case for testing to Validate Customer Is Able To View Payment History Depending On Selected Start Date And End Date functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view payment history depending on selected start date and end date functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View Payment History By Date Range
    [Documentation] Test case for validating that the customer is able to view payment history depending on selected start date and end date functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Payment History
    Validate Payment History Displayed",This test case checks the validation for viewing payment history depending on selected start date and end date functionality of the PayNOW datadriver.,Validate View Payment History By Date Range
Generate a robot framework test case for testing to Validate Customer Is Able To Download PDF From Invoice Page And Verify The Data functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to download PDF from invoice page and verify the data functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details
${PDF_DATA}                 pdf_data

*** Test Cases ***
Validate Download PDF And Verify Data
    [Documentation] Test case for validating that the customer is able to download PDF from invoice page and verify the data functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Download PDF ${INVOICE_DETAILS}
    Verify PDF Data ${PDF_DATA}
    Validate PDF Data Correctly Matched",This test case checks the validation for downloading PDF from invoice page and verifying the data functionality of the PayNOW datadriver.,Validate Download PDF And Verify Data
Generate a robot framework test case for testing to Validate That Customer Is Able To Navigate To Invoice Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to invoice page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate To Invoice Page
    [Documentation] Test case for validating that the customer is able to navigate to invoice page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Validate Navigation Successful",This test case checks the validation for navigating to invoice page functionality of the PayNOW datadriver.,Validate Navigate To Invoice Page
Generate a robot framework test case for testing to Validate Customer Is Able To Login Into Paynow With Empty Invoice Number functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to login into Paynow with empty invoice number functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Login With Empty Invoice Number
    [Documentation] Test case for validating that the customer is able to login into Paynow with empty invoice number functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Leave Invoice Number Empty
    Attempt Login
    Validate Login Successful",This test case checks the validation for logging into Paynow with empty invoice number functionality of the PayNOW datadriver.,Validate Login With Empty Invoice Number
Generate a robot framework test case for testing to Validate Customer Is Able To Verify Paid Invoices After Processing Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to verify paid invoices after processing payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Verify Paid Invoices After Processing Payment
    [Documentation] Test case for validating that the customer is able to verify paid invoices after processing payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Process Payment ${INVOICE_DETAILS}
    Verify Paid Invoices
    Validate Paid Invoices Verified",This test case checks the validation for verifying paid invoices after processing payment functionality of the PayNOW datadriver.,Validate Verify Paid Invoices After Processing Payment
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With Negative Amount Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process payment with negative amount due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEGATIVE_AMOUNT}          negative_amount

*** Test Cases ***
Validate Unable To Process Payment With Negative Amount Due
    [Documentation] Test case for validating that the customer is unable to process payment with negative amount due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Negative Amount ${NEGATIVE_AMOUNT}
    Attempt Process Payment
    Validate Payment Failure",This test case checks the validation for being unable to process payment with negative amount due functionality of the PayNOW datadriver.,Validate Unable To Process Payment With Negative Amount Due
Generate a robot framework test case for testing to Validate Customer Is Able To Select One Of The Saved Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to select one of the saved payment methods functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${SAVED_PAYMENT_METHOD}     saved_payment_method

*** Test Cases ***
Validate Select One Of The Saved Payment Method
    [Documentation] Test case for validating that the customer is able to select one of the saved payment methods functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Saved Payment Method ${SAVED_PAYMENT_METHOD}
    Validate Payment Method Selected",This test case checks the validation for selecting one of the saved payment methods functionality of the PayNOW datadriver.,Validate Select One Of The Saved Payment Method
Generate a robot framework test case for testing to Validate Customer Is Able To View Last 30 Days Payment History functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view last 30 days payment history functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View Last 30 Days Payment History
    [Documentation] Test case for validating that the customer is able to view last 30 days payment history functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Payment History
    Validate Payment History Displayed",This test case checks the validation for viewing last 30 days payment history functionality of the PayNOW datadriver.,Validate View Last 30 Days Payment History
Generate a robot framework test case for testing to Validate Customer Is Able To View This Month Payment History functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view this month's payment history functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View This Month Payment History
    [Documentation] Test case for validating that the customer is able to view this month's payment history functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Payment History
    Validate Payment History Displayed",This test case checks the validation for viewing this month's payment history functionality of the PayNOW datadriver.,Validate View This Month Payment History
Generate a robot framework test case for testing to Validate Customer Is Able To View Last Month Payment History functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view last month's payment history functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View Last Month Payment History
    [Documentation] Test case for validating that the customer is able to view last month's payment history functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Payment History
    Validate Payment History Displayed",This test case checks the validation for viewing last month's payment history functionality of the PayNOW datadriver.,Validate View Last Month Payment History
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to select all invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Select All Invoices
    [Documentation] Test case for validating that the integrated customer is able to select all invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select All Invoices
    Validate All Invoices Selected",This test case checks the validation for selecting all invoices functionality of the PayNOW datadriver.,Validate Select All Invoices
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Due Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to select all due invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Select All Due Invoices
    [Documentation] Test case for validating that the integrated customer is able to select all due invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select All Due Invoices
    Validate All Due Invoices Selected",This test case checks the validation for selecting all due invoices functionality of the PayNOW datadriver.,Validate Select All Due Invoices
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Invoice On Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to select all invoice on page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Select All Invoice On Page
    [Documentation] Test case for validating that the integrated customer is able to select all invoice on page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select All Invoice On Page
    Validate All Invoice On Page Selected",This test case checks the validation for selecting all invoice on page functionality of the PayNOW datadriver.,Validate Select All Invoice On Page
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Unselect All Invoices On Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to unselect all invoices on page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unselect All Invoices On Page
    [Documentation] Test case for validating that the integrated customer is able to unselect all invoices on page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Unselect All Invoices On Page
    Validate All Invoices On Page Unselected",This test case checks the validation for unselecting all invoices on page functionality of the PayNOW datadriver.,Validate Unselect All Invoices On Page
Generate a robot framework test case for testing to Validate Specific Invoice Details In The Open Invoices Table functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating specific invoice details in the open invoices table functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Specific Invoice Details In Open Invoices Table
    [Documentation] Test case for validating specific invoice details in the open invoices table functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Open Invoices Table
    Validate Specific Invoice Details ${INVOICE_DETAILS}",This test case checks the validation for specific invoice details in the open invoices table functionality of the PayNOW datadriver.,Validate Specific Invoice Details In Open Invoices Table
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Payment History Tab functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to payment history tab functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate To Payment History Tab
    [Documentation] Test case for validating that the customer is able to navigate to payment history tab functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment History Tab
    Validate Navigation Successful",This test case checks the validation for navigating to payment history tab functionality of the PayNOW datadriver.,Validate Navigate To Payment History Tab
Generate a robot framework test case for testing to Validate Customer Is Able To Select Today Date From Date Range functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to select today's date from date range functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${TODAY_DATE}               today_date

*** Test Cases ***
Validate Select Today Date From Date Range
    [Documentation] Test case for validating that the customer is able to select today's date from date range functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Today's Date ${TODAY_DATE}
    Validate Date Selected",This test case checks the validation for selecting today's date from date range functionality of the PayNOW datadriver.,Validate Select Today Date From Date Range
Generate a robot framework test case for testing to Validate Customer Is Able To Select Yesterday's Date From Date Range functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to select yesterday's date from date range functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${YESTERDAY_DATE}           yesterday_date

*** Test Cases ***
Validate Select Yesterday's Date From Date Range
    [Documentation] Test case for validating that the customer is able to select yesterday's date from date range functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Yesterday's Date ${YESTERDAY_DATE}
    Validate Date Selected",This test case checks the validation for selecting yesterday's date from date range functionality of the PayNOW datadriver.,Validate Select Yesterday's Date From Date Range
Generate a robot framework test case for testing to Validate Customer Is Able To See Selected Invoices Count functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to see selected invoices count functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate See Selected Invoices Count
    [Documentation] Test case for validating that the customer is able to see selected invoices count functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Invoices
    Validate Selected Invoices Count Displayed",This test case checks the validation for seeing selected invoices count functionality of the PayNOW datadriver.,Validate See Selected Invoices Count
Generate a robot framework test case for testing to Validate Customer Is Able To Cancel Login With Invoice Pop-Up functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to cancel login with invoice pop-up functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Cancel Login With Invoice Pop-Up
    [Documentation] Test case for validating that the customer is able to cancel login with invoice pop-up functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Trigger Login With Invoice Pop-Up
    Cancel Pop-Up
    Validate Pop-Up Cancelled",This test case checks the validation for canceling login with invoice pop-up functionality of the PayNOW datadriver.,Validate Cancel Login With Invoice Pop-Up
Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details

*** Test Cases ***
Validate Process The Lump Sum Payment
    [Documentation] Test case for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}
    Validate Payment Processed",This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.,Validate Process The Lump Sum Payment
Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In Current Days Past Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the amount due is appropriately updated in current days past due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CURRENT_DAYS_PAST_DUE}    current_days_past_due

*** Test Cases ***
Validate Amount Due Updated In Current Days Past Due
    [Documentation] Test case for validating that the amount due is appropriately updated in current days past due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Past Due Invoices
    Validate Amount Due Updated ${CURRENT_DAYS_PAST_DUE}",This test case checks the validation for amount due being appropriately updated in current days past due functionality of the PayNOW datadriver.,Validate Amount Due Updated In Current Days Past Due
Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 1-31 Days Past Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the amount due is appropriately updated in 1-31 days past due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DAYS_PAST_DUE}            days_past_due

*** Test Cases ***
Validate Amount Due Updated In 1-31 Days Past Due
    [Documentation] Test case for validating that the amount due is appropriately updated in 1-31 days past due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Past Due Invoices
    Validate Amount Due Updated ${DAYS_PAST_DUE}",This test case checks the validation for amount due being appropriately updated in 1-31 days past due functionality of the PayNOW datadriver.,Validate Amount Due Updated In 1-31 Days Past Due
Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 31-60 Days Past Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the amount due is appropriately updated in 31-60 days past due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DAYS_PAST_DUE}            days_past_due

*** Test Cases ***
Validate Amount Due Updated In 31-60 Days Past Due
    [Documentation] Test case for validating that the amount due is appropriately updated in 31-60 days past due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Past Due Invoices
    Validate Amount Due Updated ${DAYS_PAST_DUE}",This test case checks the validation for amount due being appropriately updated in 31-60 days past due functionality of the PayNOW datadriver.,Validate Amount Due Updated In 31-60 Days Past Due
Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 61-90 Days Past Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the amount due is appropriately updated in 61-90 days past due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DAYS_PAST_DUE}            days_past_due

*** Test Cases ***
Validate Amount Due Updated In 61-90 Days Past Due
    [Documentation] Test case for validating that the amount due is appropriately updated in 61-90 days past due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Past Due Invoices
    Validate Amount Due Updated ${DAYS_PAST_DUE}",This test case checks the validation for amount due being appropriately updated in 61-90 days past due functionality of the PayNOW datadriver.,Validate Amount Due Updated In 61-90 Days Past Due
Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In Over 90 Days Past Due functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the amount due is appropriately updated in over 90 days past due functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DAYS_PAST_DUE}            days_past_due

*** Test Cases ***
Validate Amount Due Updated In Over 90 Days Past Due
    [Documentation] Test case for validating that the amount due is appropriately updated in over 90 days past due functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Past Due Invoices
    Validate Amount Due Updated ${DAYS_PAST_DUE}",This test case checks the validation for amount due being appropriately updated in over 90 days past due functionality of the PayNOW datadriver.,Validate Amount Due Updated In Over 90 Days Past Due
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Fully Paid Invoices functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process fully paid invoices functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Unable To Process Fully Paid Invoices
    [Documentation] Test case for validating that the customer is unable to process fully paid invoices functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Fully Paid Invoices ${INVOICE_DETAILS}
    Validate Unable To Process",This test case checks the validation for being unable to process fully paid invoices functionality of the PayNOW datadriver.,Validate Unable To Process Fully Paid Invoices
Generate a robot framework test case for testing to Validate Customer Is Able To View Last 7 Days Payment History functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view last 7 days payment history functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate View Last 7 Days Payment History
    [Documentation] Test case for validating that the customer is able to view last 7 days payment history functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    View Payment History
    Validate Payment History Displayed",This test case checks the validation for viewing last 7 days payment history functionality of the PayNOW datadriver.,Validate View Last 7 Days Payment History
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With Decline Check functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process payment with decline check functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CHECK_DETAILS}            check_details

*** Test Cases ***
Validate Unable To Process Payment With Decline Check
    [Documentation] Test case for validating that the customer is unable to process payment with decline check functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Process Payment With Decline Check ${CHECK_DETAILS}
    Validate Payment Declined",This test case checks the validation for being unable to process payment with decline check functionality of the PayNOW datadriver.,Validate Unable To Process Payment With Decline Check
Generate a robot framework test case for testing to Validate Payment History Is Updated As Soon As Payment Receipt Generated functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the payment history is updated as soon as payment receipt generated functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_RECEIPT_DETAILS}  payment_receipt_details

*** Test Cases ***
Validate Payment History Updated As Soon As Receipt Generated
    [Documentation] Test case for validating that the payment history is updated as soon as payment receipt generated functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Generate Payment Receipt ${PAYMENT_RECEIPT_DETAILS}
    Validate Payment History Updated",This test case checks the validation for payment history being updated as soon as payment receipt generated functionality of the PayNOW datadriver.,Validate Payment History Updated As Soon As Receipt Generated
Generate a robot framework test case for testing to Validate Customer Is Able To Delete Saved Payment Method functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to delete saved payment method functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_METHOD_DETAILS}   payment_method_details

*** Test Cases ***
Validate Delete Saved Payment Method
    [Documentation] Test case for validating that the customer is able to delete saved payment method functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Saved Payment Methods
    Delete Saved Payment Method ${PAYMENT_METHOD_DETAILS}
    Validate Payment Method Deleted",This test case checks the validation for deleting saved payment method functionality of the PayNOW datadriver.,Validate Delete Saved Payment Method
Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Next Page functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to navigate to the next page functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Navigate To Next Page
    [Documentation] Test case for validating that the customer is able to navigate to the next page functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Next Page
    Validate Navigation Successful",This test case checks the validation for navigating to the next page functionality of the PayNOW datadriver.,Validate Navigate To Next Page
Generate a Robot Framework test case for common merchants functionality.,"*** Settings ***
Documentation    Test cases for common merchants functionality
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/merchants
${BROWSER}       chrome
${EXCEL_PATH}    path/to/testdata.xlsx
${TC_ID}         TC_01
${SHEET_NAME}    Sheet1
${LOADING_TIMEOUT}    30
${LOCATOR}       element_locator

*** Test Cases ***
Test Common Merchants Functionality
    [Documentation]    Test case for common merchants functionality
    Launch Browser    ${BROWSER}    ${URL}
    Launch Web Application    ${BROWSER}    ${URL}
    Read TestData From Excel    ${EXCEL_PATH}    ${TC_ID}    ${SHEET_NAME}
    Wait Until Element Is Clickable And Click    ${LOCATOR}    ${LOADING_TIMEOUT}
    Scroll Till Element Is Visible    ${LOCATOR}
    Validate String Should Be Equal    expected_value    actual_value
    Validate Error Message Is Displayed    error_message
    Validate String Should Contain    expected_value    actual_value
    Validate String Should Not Contain    unexpected_value    actual_value
    Validate String Should Not Be Equal    unexpected_value    actual_value
    Click Until Element Is Invisible    ${LOCATOR}
    Scroll To Element    ${LOCATOR}
    Wait Till Loading Icon Is Invisible    ${LOCATOR}    ${LOADING_TIMEOUT}
    Fail And Take Screenshot    message
    # Add more test steps as needed
    Close Browser",This test case checks the common functionalities of merchants in a web application.,Test Common Merchants Functionality
Generate a Robot Framework test case for testing the homepage of all merchants.,"*** Settings ***
Documentation    Test cases for testing the homepage of all merchants
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/merchants
${BROWSER}       chrome
${MODULE}        homepage_module
${MERCHANT}      sample_merchant

*** Test Cases ***
Test Homepage Of All Merchants
    [Documentation]    Test case for the homepage of all merchants
    Launch Browser    ${BROWSER}    ${URL}
    Select Module    ${MODULE}
    Select Merchant    ${MERCHANT}
    # Add more test steps to verify homepage elements
    Logout From Application
    Close Browser",This test case checks the homepage functionalities for all merchants in a web application.,Test Homepage Of All Merchants
Generate a Robot Framework test case for testing the tokens functionality of all merchants.,"*** Settings ***
Documentation    Test cases for testing the tokens functionality of all merchants
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/merchants
${BROWSER}       chrome
${ACCOUNT_NUMBER} 123456
${INVOICE_TOKEN}  abcdef
${SESSION_ID}    session123
${INVOICE_NUMBER} inv123

*** Test Cases ***
Test Tokens Functionality Of All Merchants
    [Documentation]    Test case for the tokens functionality of all merchants
    Launch Browser    ${BROWSER}    ${URL}
    Navigate To Open Invoices Page From Email
    Navigate To Open Invoices Page With Invoice Token    ${ACCOUNT_NUMBER}    ${INVOICE_TOKEN}
    Navigate To Open Invoices Page With Session Token    ${ACCOUNT_NUMBER}    ${SESSION_ID}
    Validate PayNOW Open Invoices Page Is Displayed    ${INVOICE_NUMBER}
    Validate Open Invoices Page Is Displayed    ${INVOICE_NUMBER}
    # Add more test steps to verify token functionalities
    Close Browser",This test case checks the tokens functionalities for all merchants in a web application.,Test Tokens Functionality Of All Merchants
Generate a Robot Framework test case for testing the autopay service functionality of Omnicorp customers.,"*** Settings ***
Documentation    Test cases for testing the autopay service functionality of Omnicorp customers
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/autopay
${BROWSER}       chrome
${CUSTOMER_NUMBER} 123456
${ACCOUNT_NUMBER}  account123
${INVOICE_NUMBER}  inv123
${PAYMENT_METHOD}  credit_card
${ALL_TRANSACTIONS_COUNT}  10
${EXPECTED_STATUS}  active
${EXPECTED_CUSTOMER_NUMBER}  123456
${EXPECTED_PAYMENT_TYPE}  credit_card
${EXPECTED_STATUS_ACTIVE}  active
${EXPECTED_STATUS_INACTIVE}  inactive

*** Test Cases ***
Test Autopay Service Functionality Of Omnicorp Customers
    [Documentation]    Test case for the autopay service functionality of Omnicorp customers
    Launch Browser    ${BROWSER}    ${URL}
    Select Status    active
    Navigate To AutoPay
    Validate AutoPay Details Are Displayed    ${EXPECTED_CUSTOMER_NUMBER}    ${EXPECTED_PAYMENT_TYPE}    ${EXPECTED_STATUS}
    Validate AutoPay Is Cancelled    ${ACCOUNT_NUMBER}
    Select Invoices Due For The Payment
    Filter Customer In AutoPay    ${CUSTOMER_NUMBER}
    Navigate To Customer Details Page From AutoPay    ${INVOICE_NUMBER}
    Get Total Number Of Transactions In AutoPay
    Cancel AutoPay
    Create AutoPay    ${CUSTOMER_NUMBER}    ${PAYMENT_METHOD}
    Select Saved Payment Method In Autopay    ${PAYMENT_METHOD}
    Validate Active Payment Details After Displayed    ${ALL_TRANSACTIONS_COUNT}    ${EXPECTED_STATUS_ACTIVE}
    Validate Inactive Payment Details Are Displayed    ${ALL_TRANSACTIONS_COUNT}    ${EXPECTED_STATUS_INACTIVE}
    Select Each Day As Payment Option
    Close Browser",This test case checks the autopay service functionalities for Omnicorp customers in a web application.,Test Autopay Service Functionality Of Omnicorp Customers
Generate a Robot Framework test case for testing the scheduled payment service functionality of Omnicorp customers.,"*** Settings ***
Documentation    Test cases for testing the scheduled payment service functionality of Omnicorp customers
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/scheduled_payments
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${EXPECTED_STATUS}  scheduled
${EXPECTED_PAYMENT_DATE}  2024-06-15
${EXPECTED_PAYMENT_TYPE}  credit_card
${DAY}  7
${DATE}  2024-06-14

*** Test Cases ***
Test Scheduled Payment Service Functionality Of Omnicorp Customers
    [Documentation]    Test case for the scheduled payment service functionality of Omnicorp customers
    Launch Browser    ${BROWSER}    ${URL}
    Validate Last 7 Days And 30 Days Scheduled Payments    ${DAY}
    Validate Today And Yesterday Scheduled Payments    ${DATE}
    Create Scheduled Payment    ${ACCOUNT_NUMBER}
    Select Payment Date    ${DATE}
    Validate Last Month And This Month Date Scheduled Payments    ${DAY}
    Validate Status In Scheduled Payments    ${EXPECTED_STATUS}
    Validate Scheduled Payment Details Are Displayed    ${EXPECTED_PAYMENT_DATE}    ${EXPECTED_STATUS}    ${EXPECTED_PAYMENT_TYPE}
    Cancel Scheduled Payment
    Close Browser",This test case checks the scheduled payment service functionalities for Omnicorp customers in a web application.,Test Scheduled Payment Service Functionality Of Omnicorp Customers
Generate a Robot Framework test case for testing the customer service functionality of Sterlincooper customers.,"*** Settings ***
Documentation    Test cases for testing the customer service functionality of Sterlincooper customers
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/customer_service
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${INVOICE_NUMBER}  inv123
${EXPECTED_MESSAGE}  success
${NOTES}  ""Customer requested an update""

*** Test Cases ***
Test Customer Service Functionality Of Sterlincooper Customers
    [Documentation]    Test case for the customer service functionality of Sterlincooper customers
    Launch Browser    ${BROWSER}    ${URL}
    Validate Open Invoice Is Displayed    ${INVOICE_NUMBER}
    Filter Details    ${ACCOUNT_NUMBER}
    Validate Prevent Override Is Displayed
    Navigate To Resend Receipt Page
    Cancel Send Invoice Receipt
    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Enter Text In Notes    ${NOTES}
    Validate Payment Method Is Cancelled
    Validate Provider Response Message Is Displayed    ${EXPECTED_MESSAGE}
    Enter ACH/Echeck Details    checking    123456789    987654321    John Doe
    Close Browser",This test case checks the customer service functionalities for Sterlincooper customers in a web application.,Test Customer Service Functionality Of Sterlincooper Customers
Generate a Robot Framework test case for testing the failed login attempts functionality of Sterlincooper customers.,"*** Settings ***
Documentation    Test cases for testing the failed login attempts functionality of Sterlincooper customers
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/login
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${EXPECTED_RECENT_ATTEMPTS}  3
${EXPECTED_TOTAL_ATTEMPTS}  10
${EXPECTED_FIRST_ATTEMPT}  2024-06-01
${EXPECTED_LAST_ATTEMPT}  2024-06-14
${INVOICE_NUMBER}  inv123

*** Test Cases ***
Test Failed Login Attempts Functionality Of Sterlincooper Customers
    [Documentation]    Test case for the failed login attempts functionality of Sterlincooper customers
    Launch Browser    ${BROWSER}    ${URL}
    Login To PayNOW With Invalid Credentials    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Validate Number Of Recent Login Failed Attempts    ${ACCOUNT_NUMBER}    ${EXPECTED_RECENT_ATTEMPTS}
    Validate Total Number Of Login Failed Attempts    ${ACCOUNT_NUMBER}    ${EXPECTED_TOTAL_ATTEMPTS}
    Validate First Login Failed Attempt Is Displayed    ${ACCOUNT_NUMBER}    ${EXPECTED_FIRST_ATTEMPT}
    Validate Last Login Failed Attempt Is Displayed    ${ACCOUNT_NUMBER}    ${EXPECTED_LAST_ATTEMPT}
    Filter With Customer Number In Failed PayNOW Login    ${ACCOUNT_NUMBER}
    Validate Filterd Customer Number Is Displayed    ${ACCOUNT_NUMBER}
    Expand Customer Failed Login Details
    Validate Customer Failed Login Details Are Expanded    sterlincooper
    Collapse Customer Failed Login Details
    Validate Customer Failed Login Details Are Collapsed    sterlincooper
    Close Browser",This test case checks the failed login attempts functionalities for Sterlincooper customers in a web application.,Test Failed Login Attempts Functionality Of Sterlincooper Customers
Generate a Robot Framework test case for testing the dashboard functionality of Sterlincooper dashboards.,"*** Settings ***
Documentation    Test cases for testing the dashboard functionality of Sterlincooper dashboards web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/dashboard
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${EXPECTED_EMAIL}  email@example.com
${EXPECTED_DATE}  2024-06-14
${EXPECTED_SUBJECT}  Invoice Summary
${EXPECTED_EMAILFORMAT}  valid@example.com
${EXPECTED_PDFSTATUS}  attached
${CUSTOMER}  customer123
${FILTER_WITH}  filter123
${EXPECTED_COUNT}  5
${PAGE}  next
${DAY}  7

*** Test Cases ***
Test Dashboard Functionality Of Sterlincooper Dashboards
    [Documentation]    Test case for the dashboard functionality of Sterlincooper dashboards
    Launch Browser    ${BROWSER}    ${URL}
    Validate Details Are Displayed In Last Page
    Validate Details Are Displayed In First Page
    Send Invoice Email And Navigate To Email Summary    ${ACCOUNT_NUMBER}
    Expand Details In Email Summary
    Validate Email Summary Page Is Displayed    ${EXPECTED_DATE}
    Filter With Customer Number In Email Details    ${FILTER_WITH}    ${ACCOUNT_NUMBER}
    Validate Details Are Displayed In Next And Previous Pages    ${EXPECTED_COUNT}
    Validate Email Format In Email Details    ${EXPECTED_EMAILFORMAT}
    Navigate To Customer Details Page From Email Details    ${CUSTOMER}
    Validate Email Details Are Displayed    ${EXPECTED_EMAIL}    ${EXPECTED_DATE}    ${EXPECTED_SUBJECT}
    Reset Filter
    Validate Email Details Are Expanded In Email Summary
    Navigate To Customer Details Page From Email Summary
    Collapse Details In Email Summary
    Validate Email Details Are Collapsed In Email Summary
    Navigate To Pages    ${PAGE}
    Validate Reset Filter Details Are Displayed
    Validate Email Sent Date And Subject    ${EXPECTED_SUBJECT}    ${EXPECTED_EMAIL}
    Validate Email PDF Attachment Status    ${EXPECTED_PDFSTATUS}
    Navigate To Email Summary Page    ${DAY}
    Close Browser",This test case checks the dashboard functionalities for Sterlincooper dashboards in a web application.,Test Dashboard Functionality Of Sterlincooper Dashboards
Generate a Robot Framework test case for testing the invoices functionality of Sterlincooper service.,"*** Settings ***
Documentation    Test cases for testing the invoices functionality of Sterlincooper service web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/invoices
${BROWSER}       chrome
${INVOICE_NUMBER}  inv123
${CUSTOMER_NUMBER}  customer123
${EXPECTED_DATE}  2024-06-14
${EXPECTED_STATUS}  success
${EXPECTED_EMAIL}  email@example.com

*** Test Cases ***
Test Invoices Functionality Of Sterlincooper Service
    [Documentation]    Test case for the invoices functionality of Sterlincooper service
    Launch Browser    ${BROWSER}    ${URL}
    Validate Transaction Source After Transaction Is Displayed
    Expand Email Details
    Validate Today And Yesterday Invoice Are Displayed    ${EXPECTED_DATE}
    Validate Filtered Cusomer Number In Displayed Invoice    ${CUSTOMER_NUMBER}
    Validate Financial Payment Details Are Displayed
    Select Tab In Invoice Details Page
    Send Email Invoice
    Validate Sent Date And Provider Response Message Is Displayed    ${EXPECTED_STATUS}
    Validate PayNOW Invoice Details Page Is Displayed
    Enable Toggle Button
    Validate Email Details Are Expanded
    Validate Toggle Button Is Enabled
    Validate Email Format Type Is Displayed
    Validate Email Details Are Collapsed
    Navigate To Details Page From Invoices
    Collapse Email Details
    Validate Email Address Is Displayed    ${EXPECTED_EMAIL}
    Validate Filtered Invoice Number In Displayed Invoice    ${INVOICE_NUMBER}
    Filter Invoice In Grid
    Validate Filtered Invoice Is Displayed    ${INVOICE_NUMBER}
    Filter Invoice Details With Invoice And Customer Number    ${INVOICE_NUMBER}    ${CUSTOMER_NUMBER}
    Validate PDF Attachment Status Is Displayed
    Validate Terms Amount Are Displayed In Financial Details
    Validate Invoices Date For Last 7 Days And 30 Days    ${EXPECTED_DATE}
    Validate Line Items Details Are Displayed
    Navigate To Transaction Details From Pending Payments
    Validate Invoice Details Are Displayed
    Validate Invoice
    Close Browser",This test case checks the invoices functionalities for Sterlincooper service in a web application.,Test Invoices Functionality Of Sterlincooper Service
Generate a Robot Framework test case for testing the settings functionality of Sterlincooper service.,"*** Settings ***
Documentation    Test cases for testing the settings functionality of Sterlincooper service web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/settings
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${INVOICE_NUMBER}  inv123
${EXPECTED_FILENAME}  document.pdf
${EXPECTED_MESSAGE}  success
${FILE_NAME}  upload.pdf
${ACTUAL_FILENAME}  uploaded.pdf
${EXPECTED_DOCUMENT_TYPE}  pdf

*** Test Cases ***
Test Settings Functionality Of Sterlincooper Service
    [Documentation]    Test case for the settings functionality of Sterlincooper service
    Launch Browser    ${BROWSER}    ${URL}
    Navigate To PayNOW    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}
    Validate PDF Document Is Displayed In PayNOW    ${EXPECTED_FILENAME}
    Validate PDF Is Deleted In Settings    ${EXPECTED_MESSAGE}
    Validate Message In Settings    ${EXPECTED_MESSAGE}
    Select Document Type In Settings
    Upload File In Settings Tab    ${FILE_NAME}
    Validate PDF Is Closed
    Close PDF Document
    Validate File Is Uploaded    ${ACTUAL_FILENAME}    ${EXPECTED_DOCUMENT_TYPE}
    Delete PDF Attachment
    Close Browser",This test case checks the settings functionalities for Sterlincooper service in a web application.,Test Settings Functionality Of Sterlincooper Service
Generate a Robot Framework test case for testing all transactions functionality of Sterlincooper service.,"*** Settings ***
Documentation    Test cases for testing all transactions functionality of Sterlincooper service web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/transactions
${BROWSER}       chrome
${TRANSACTION_TAB}  details
${COUNT}  10
${AMOUNT}  1000
${TRANSACTION_TYPE}  ACH
${INVOICES_LIST}  [inv123, inv124]
${MONTH}  June
${EXPECTED_OPTION}  apply

*** Test Cases ***
Test All Transactions Functionality Of Sterlincooper Service
    [Documentation]    Test case for the transactions functionality of Sterlincooper service
    Launch Browser    ${BROWSER}    ${URL}
    Select Tab In Transaction Details Page    ${TRANSACTION_TAB}
    Validate Total Count And Amount Of ACH Transactions    ${COUNT}    ${AMOUNT}
    Select Transaction Type    ${TRANSACTION_TYPE}
    Select Confirm In Void Transaction Popup
    Validate Invoices Displayed On Invoice Detail Page    ${INVOICES_LIST}
    Validate Transactions Count In Previous Page
    Validate Sorted Transactions
    Validate Current And Previous Month Is Displayed    ${MONTH}
    Validate Payment Application Option    ${EXPECTED_OPTION}
    Login And Navigate To Transaction Details Page
    Close Browser",This test case checks the transactions functionalities for Sterlincooper service in a web application.,Test All Transactions Functionality Of Sterlincooper Service
Generate a Robot Framework test case for testing the payment status functionality of Sterlincooper service.,"*** Settings ***
Documentation    Test cases for testing the payment status functionality of Sterlincooper service web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/payment_status
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${DATE}  2024-06-14
${EXPECTED_STATUS}  scheduled
${EXPECTED_PAYMENT_DATE}  2024-06-15
${EXPECTED_PAYMENT_TYPE}  credit_card
${DAY}  7

*** Test Cases ***
Test Payment Status Functionality Of Sterlincooper Service
    [Documentation]    Test case for the payment status functionality of Sterlincooper service
    Launch Browser    ${BROWSER}    ${URL}
    Validate Last 7 Days And 30 Days Scheduled Payments    ${DAY}
    Validate Today And Yesterday Scheduled Payments    ${DATE}
    Create Scheduled Payment    ${ACCOUNT_NUMBER}
    Select Payment Date    ${DATE}
    Validate Last Month And This Month Date Scheduled Payments    ${DAY}
    Validate Status In Scheduled Payments    ${EXPECTED_STATUS}
    Validate Scheduled Payment Details Are Displayed    ${EXPECTED_PAYMENT_DATE}    ${EXPECTED_STATUS}    ${EXPECTED_PAYMENT_TYPE}
    Cancel Scheduled Payment
    Close Browser",This test case checks the payment status functionalities for Sterlincooper service in a web application.,Test Payment Status Functionality Of Sterlincooper Service
Generate a Robot Framework test case for testing the virtual terminal functionality of Sterlincooper service.,"*** Settings ***
Documentation    Test cases for testing the virtual terminal functionality of Sterlincooper service web application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/virtual_terminal
${BROWSER}       chrome
${ACCOUNT_NUMBER}  account123
${CUSTOMER_NUMBER}  customer123
${SAVED_PAYMENT_METHOD}  credit_card
${EXPECTED_SURCHARGE}  10
${STATE}  NY
${EXPECTED_SURCHARGE_ZERO}  0
${OPTION}  confirm

*** Test Cases ***
Test Virtual Terminal Functionality Of Sterlincooper Service
    [Documentation]    Test case for the virtual terminal functionality of Sterlincooper service
    Launch Browser    ${BROWSER}    ${URL}
    Search Customer In Virtual Terminal    ${ACCOUNT_NUMBER}
    Validate Searched Customer Number Is Displayed    ${CUSTOMER_NUMBER}
    Process Transacton With Saved Payment Method    ${ACCOUNT_NUMBER}    ${SAVED_PAYMENT_METHOD}
    Validate Surcharge    ${EXPECTED_SURCHARGE}
    Select Multiple Invoices
    Validate Surchage Exempt Is Applied
    Select State In PayNOW    ${STATE}
    Select State In Virtual Terminal    ${STATE}
    Validate Surcharge Is Not Applied For Zero Surcharge    ${EXPECTED_SURCHARGE_ZERO}
    Select Over Payment Confirmation    ${OPTION}
    Navigate To PayNOW And Select State    ${STATE}
    Close Browser",This test case checks the virtual terminal functionalities for Sterlincooper service in a web application.,Test Virtual Terminal Functionality Of Sterlincooper Service
Generate a Robot Framework test case for testing the general common API functionality of clients.,"*** Settings ***
Documentation    Test cases for testing the general common API functionality of clients
Library          RequestsLibrary

*** Variables ***
${BASE_URL}      https://api.example.com
${MERCHANT}      merchant123
${BODY}          {""key"": ""value""}

*** Test Cases ***
Test General Common API Functionality Of Clients
    [Documentation]    Test case for the general common API functionality of clients
    Create Session    api_session    ${BASE_URL}
    ${headers}=    Get JSON Headers    ${MERCHANT}
    ${json_body}=    Convert To JSON    ${BODY}
    ${response}=    Post Request    api_session    /endpoint    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}",This test case checks the general common API functionalities for clients.,Test General Common API Functionality Of Clients
Generate a Robot Framework test case for testing the general customer functionality of an API.,"*** Settings ***
Documentation    Test cases for testing the general customer functionality of an API
Library          RequestsLibrary

*** Variables ***
${BASE_URL}        https://api.example.com
${MERCHANT_ID}     merchant123
${MERCHANT_KEY}    key123
${UNIQUE_VALUE}    unique456

*** Test Cases ***
Test General Customer Functionality Of An API
    [Documentation]    Test case for the general customer functionality of an API
    Create Session    api_session    ${BASE_URL}
    ${billing_address}=    Create Billing Address Body    ${UNIQUE_VALUE}    ${MERCHANT_ID}
    ${json_body}=    Create Customer Body    ${UNIQUE_VALUE}    ${MERCHANT_KEY}    ${MERCHANT_ID}
    ${unique_value}=    Send Request To Create On Credit Hold Customer    ${MERCHANT_ID}
    ${shipping_address}=    Create Shipping Address Body    ${UNIQUE_VALUE}    ${MERCHANT_ID}
    ${unique_value}=    Send Request To Create Customer    ${MERCHANT_KEY}    ${MERCHANT_ID}
    ${json_body}=    Create On Credit Hold Customer Body    ${UNIQUE_VALUE}    ${MERCHANT_KEY}    ${MERCHANT_ID}
    ${response}=    Post Request    api_session    /customers    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}",This test case checks the general customer functionalities for an API.,Test General Customer Functionality Of An API
Generate a Robot Framework test case for testing the invoice services functionality of an API.,"*** Settings ***
Documentation    Test cases for testing the invoice services functionality of an API
Library          RequestsLibrary

*** Variables ***
${BASE_URL}          https://api.example.com
${MERCHANT}          merchant123
${UNIQUE_VALUE}      unique456
${INVOICE_NUMBER}    inv789
${DUE_AMOUNT}        1000
${INVOICE_DUE_DATE}  2024-06-15

*** Test Cases ***
Test Invoice Services Functionality Of An API
    [Documentation]    Test case for the invoice services functionality of an API
    Create Session    api_session    ${BASE_URL}
    ${json_body}=    Create Invoice Body    ${UNIQUE_VALUE}    ${INVOICE_NUMBER}    ${DUE_AMOUNT}    ${INVOICE_DUE_DATE}
    ${response}=    Post Request    api_session    /invoices    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}
    ${json_body}=    Create Disputed Invoice Body    ${UNIQUE_VALUE}    ${INVOICE_NUMBER}    ${DUE_AMOUNT}    ${INVOICE_DUE_DATE}
    ${response}=    Post Request    api_session    /disputed_invoices    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}
    ${company_details}=    Create Company Details Body
    ${product_details}=    Create Product Details Body
    ${ship_to_address}=    Create Ship To Address Body
    ${bill_to_address}=    Create Bill To Address Body
    ${response}=    Post Request    api_session    /invoices    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}
    @{invoices_list}=    Create Multiple Invoices Through API    ${MERCHANT}    ${UNIQUE_VALUE}    ${INVOICE_DUE_DATE}
    FOR    ${invoice}    IN    @{invoices_list}
        Log    ${invoice}
    END",This test case checks the invoice services functionalities for an API.,Test Invoice Services Functionality Of An API
Generate a Robot Framework test case for testing the process payment services functionality of an API.,"*** Settings ***
Documentation    Test cases for testing the process payment services functionality of an API
Library          RequestsLibrary

*** Variables ***
${BASE_URL}          https://api.example.com
${MERCHANT}          merchant123
${ACCOUNT_NUMBER}    account456
${INVOICE_NUMBER}    inv789
${CARD_NUMBER}       4111111111111111
${AMOUNT}            1000
${ROUTING_NUMBER}    123456789
${REASON}            ""Payment for invoice""

*** Test Cases ***
Test Process Payment Services Functionality Of An API
    [Documentation]    Test case for the process payment services functionality of an API
    Create Session    api_session    ${BASE_URL}
    ${json_body}=    Create Process Invoice Payment Body For Credit Card    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}
    ${response}=    Post Request    api_session    /process_payment    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}
    ${response_details}=    Get Response Details    ${response}
    ${gateway_id}=    Get Gatewayid    ${response}
    ${billing_address}=    Get Billing Information    ${response}
    ${response}=    Send Request To Process Transaction For Multiple Invoices    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}
    Should Be Equal As Strings    ${response.status_code}    200
    ${response}=    Send Request To Process Payment Through ACH/Echeck    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}
    Should Be Equal As Strings    ${response.status_code}    200
    ${response}=    Send Request To Process Payment For Credit Card    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}
    Should Be Equal As Strings    ${response.status_code}    200
    ${headers}=    Get JSON Header For Credit Card Token
    ${card_details}=    Get Card Details    ${CARD_NUMBER}
    ${json_body}=    Create Process Invoice Payment Body For ACH/Echeck    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}
    ${response}=    Post Request    api_session    /process_payment    headers=${headers}    data=${json_body}
    Should Be Equal As Strings    ${response.status_code}    200
    ${amount}=    Get Amount    ${response}
    ${json_body}=    Create Request For Credit Card Token    ${card_details}
    ${invoice_body}=    Create Invoice For Processing Payment    ${INVOICE_NUMBER}    ${REASON}
    ${transaction_id}=    Get Id After Processing Transaction    ${response}
    ${json_body}=    Create Process Invoice Body For Multiple Transactions    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}
    ${response}=    Send Request To Get Credit Card Token    ${CARD_NUMBER}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}",This test case checks the process payment services functionalities for an API.,Test Process Payment Services Functionality Of An API
Generate a Robot Framework test case for testing the token service functionality of an API.,"*** Settings ***
Documentation    Test cases for testing the token service functionality of an API
Library          RequestsLibrary

*** Variables ***
${BASE_URL}          https://api.example.com
${INVOICE_LOCATION}  invoice_location
${CUSTOMER_NUMBER}   customer_number

*** Test Cases ***
Test Token Service Functionality Of An API
    [Documentation]    Test case for the token service functionality of an API
    Create Session    api_session    ${BASE_URL}
    ${invoice_token}=    Send Request To Get Invoice Token    ${INVOICE_LOCATION}
    ${headers}=    Get Token Header
    ${json_body}=    Create Body To Get PayNowSession Id    ${CUSTOMER_NUMBER}
    ${header_value}=    Get Invoice Location    ${response}
    ${response}=    Send Request To Get PayNowSession Id    ${CUSTOMER_NUMBER}
    Should Be Equal As Strings    ${response.status_code}    200
    Log    ${response.json()}
    ${headers}=    Get Headers For PayNowSession Id
    ${session_id}=    Get PayNowSession Id From Request Body    ${response}",This test case checks the token service functionalities for an API.,Test Token Service Functionality Of An API
Generate a robot framework test case for testing the ability to Validate Customer Is Able To Receive Payment Reminders functionality of the BillPro system.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to receive payment reminders functionality of the BillPro system
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billpro
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_REMINDER_DETAILS} payment_reminder_details

*** Test Cases ***
Validate Customer Is Able To Receive Payment Reminders
    [Documentation]    Test case for validating that the customer is able to receive payment reminders functionality of the BillPro system
    Launch BillPro Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Setup Payment Reminder ${PAYMENT_REMINDER_DETAILS}
    Trigger Payment Reminder Notification
    Validate Payment Reminder Received",This test case checks the validation for the ability of a customer to receive payment reminders functionality of the BillPro system.,Validate Customer Receives Payment Reminders
Generate a robot framework test case for testing to Validate Customer Is Able to Update Billing Information functionality of the BillNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing information functionality of the BillNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billnow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_INFO}         new_billing_info

*** Test Cases ***
Validate Update Billing Information
    [Documentation]         Test case for validating that the customer is able to update billing information functionality of the BillNOW datadriver
    Launch BillNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Information Section
    Update Billing Information ${NEW_BILLING_INFO}
    Save Updated Billing Information
    Validate Billing Information Updated",This test case checks the validation for updating billing information functionality of the BillNOW datadriver.,Validate Update Billing Information
Generate a robot framework test case for testing the validation to ensure that the maximum allowable payment amount is enforced by the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the maximum allowable payment amount is enforced by the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_AMOUNT}           payment_amount
${MAX_PAYMENT_AMOUNT}       10000

*** Test Cases ***
Validate Maximum Allowable Payment Amount Enforcement
    [Documentation] Test case for validating that the maximum allowable payment amount is enforced by the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Payment Amount ${PAYMENT_AMOUNT}
    Submit Payment
    Validate Maximum Payment Amount Enforced ${MAX_PAYMENT_AMOUNT}",This test case checks the validation to ensure the system properly restricts payments to the defined maximum allowable limit functionality of the PayNOW datadriver.,Validate Maximum Allowable Payment Amount Restriction
Generate a robot framework test case for testing to Validate User is Unable to Access Locked Features with Basic Subscription functionality of the MyService platform.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to access locked features with a basic subscription functionality of the MyService platform
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/myservice
${USER_DETAILS}         user_details_basic_subscription

*** Test Cases ***
Validate User Unable To Access Locked Features With Basic Subscription
    [Documentation]    Test case for validating that the user is unable to access locked features with a basic subscription functionality of the MyService platform
    Launch MyService Application    ${URL}
    Enter User Details    ${USER_DETAILS}
    Attempt Access To Locked Features
    Validate Access Denied",This test case checks the validation for restricting access to premium features when the user has a basic subscription on the MyService platform.,Validate Restriction of Premium Features for Basic Subscription
Generate a robot framework test case for testing to Validate Customer Is Able To Update Personal Information functionality of the MyAccount datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update personal information functionality of the MyAccount datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${CUSTOMER_DETAILS}         customer_details
${NEW_PERSONAL_INFO}        new_personal_info

*** Test Cases ***
Validate Customer Is Able To Update Personal Information
    [Documentation] Test case for validating that the customer is able to update personal information functionality of the MyAccount datadriver
    Launch MyAccount Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Personal Information Page
    Update Personal Information ${NEW_PERSONAL_INFO}
    Save Updated Personal Information
    Validate Updated Information Is Saved",This test case checks the validation for updating personal information functionality of the MyAccount datadriver.,Validate Update Personal Information
Generate a robot framework test case for testing to Validate Customer Unable To Add Duplicate Email Addresses functionality of the MyPay system.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to add duplicate email addresses functionality of the MyPay system
Library          SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/mypay
${CUSTOMER_DETAILS}     customer_details
${EMAIL}                email

*** Test Cases ***
Validate Customer Unable To Add Duplicate Email Addresses
    [Documentation]    Test case for validating that the customer is unable to add duplicate email addresses functionality of the MyPay system
    Launch MyPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Add Email Address ${EMAIL}
    Attempt To Add Duplicate Email Address ${EMAIL}
    Validate Duplicate Email Error Message",This test case checks the validation for being unable to add duplicate email addresses in the customer profile of the MyPay system.,Validate Unable To Add Duplicate Email Addresses
Generate a robot framework test case for testing the functionality to Validate Customer Is Able To Update Billing Address in the PremiumPay service.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the PremiumPay service
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/premiumpay
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Is Able To Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PremiumPay service
    Launch PremiumPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Page
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case ensures that a customer is able to successfully update their billing address details within the PremiumPay service.,Validate Customer Updates Billing Address Successfully
Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update payment method information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_METHOD_INFO}      payment_method_info

*** Test Cases ***
Validate Update Payment Method Information
    [Documentation] Test case for validating that the customer is able to update payment method information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Methods Section
    Update Payment Method Information ${PAYMENT_METHOD_INFO}
    Validate Payment Method Information Updated",This test case checks the validation for updating payment method information functionality of the PayNOW datadriver.,Validate Update Payment Method Information
Generate a robot framework test case for testing to validate customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paylater
${INVALID_EMAIL}            invalid_email

*** Test Cases ***
Validate Customer Unsuccessful Password Reset With Invalid Email
    [Documentation] Test case for validating that the customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver
    Launch PayLater Application ${URL}
    Navigate To Reset Password Page
    Enter Email Address ${INVALID_EMAIL}
    Submit Reset Password Request
    Validate Error Message Displayed",This test case checks the validation for being unable to reset the password with an invalid email address functionality of the PayLATER datadriver.,Validate Unable To Reset Password With Invalid Email Address
Generate a robot framework test case for testing to Validate Customer Is Unable To Download Receipt Without Providing Email functionality of the BillPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to download receipt without providing email functionality of the BillPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billpay
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable To Download Receipt Without Providing Email
    [Documentation] Test case for validating that the customer is unable to download receipt without providing email functionality of the BillPay datadriver
    Launch BillPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Download Receipt Without Providing Email
    Validate Download Receipt Failed Due To Missing Email",This test case checks the validation for being unable to download receipt without providing an email functionality of the BillPay datadriver.,Validate Unable To Download Receipt Without Providing Email
Generate a robot framework test case for testing to Validate Customer Unable To Create Weekly AutoPay Schedule For Invalid Account functionality of the PayAuto service.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to create a weekly autopay schedule for invalid account functionality of the PayAuto service
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payauto
${CUSTOMER_DETAILS}         customer_details_invalid_account

*** Test Cases ***
Validate Unable To Create Weekly AutoPay Schedule For Invalid Account
    [Documentation] Test case for validating that the customer is unable to create a weekly autopay schedule for invalid account functionality of the PayAuto service
    Launch PayAuto Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Try To Set Up Weekly AutoPay Schedule
    Validate AutoPay Schedule Creation Failure",This test case checks the validation for being unable to create a weekly AutoPay schedule for an invalid account functionality of the PayAuto service.,Validate Unable To Create Weekly AutoPay Schedule For Invalid Account
Generate a robot framework test case for testing to Validate User Is Able To Update Billing Address Functionality in the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to update billing address functionality in the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Update Billing Address
    [Documentation] Test case for validating that the user is able to update billing address functionality in the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Section
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Save Updated Billing Address
    Validate Billing Address Updated",This test case checks the validation for updating the billing address functionality of the PayNOW datadriver.,Validate Update Billing Address Functionality
Generate a robot framework test case for testing to Validate Customer Is Able To Set Up Recurring Payments On A Weekly Basis functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to set up recurring payments on a weekly basis functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Recurring Payments Setup On Weekly Basis
    [Documentation] Test case for validating that the customer is able to set up recurring payments on a weekly basis functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Recurring Payments Section
    Set Up Weekly Recurring Payment
    Confirm Recurring Payment Setup
    Validate Recurring Payment Setup Success",This test case checks the validation for setting up recurring payments on a weekly basis functionality of the PayNOW datadriver.,Validate Set Up Recurring Payments On A Weekly Basis
Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method Details functionality of the PayMATE datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update payment method details functionality of the PayMATE datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymate
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_METHOD_DETAILS}   payment_method_details

*** Test Cases ***
Validate Update Payment Method Details
    [Documentation] Test case for validating that the customer is able to update payment method details functionality of the PayMATE datadriver
    Launch PayMATE Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Method Section
    Update Payment Method Details ${PAYMENT_METHOD_DETAILS}
    Validate Payment Method Updated Successfully",This test case checks the validation for updating payment method details functionality of the PayMATE datadriver.,Validate Update Payment Method Details
Generate a Robot Framework test case for testing to Validate Customer Is Able To Receive Payment Confirmation Email functionality of the EZCheckout driver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to receive payment confirmation email functionality of the EZCheckout driver
Library                SeleniumLibrary
Library                BuiltIn

*** Variables ***
${URL}                      https://example.com/ezcheckout
${CUSTOMER_EMAIL}           customer_email@example.com

*** Test Cases ***
Validate Customer Receives Payment Confirmation Email
    [Documentation] Test case for validating that the customer is able to receive payment confirmation email functionality of the EZCheckout driver
    Launch EZCheckout Application ${URL}
    Complete Purchase As Customer
    Validate Payment Confirmation Email Sent To ${CUSTOMER_EMAIL}

*** Keywords ***
Launch EZCheckout Application
    [Arguments]    ${url}
    Open Browser    ${url}    Chrome
    Maximize Browser Window

Complete Purchase As Customer
    [Arguments]       ${customer_email}
    Input Text        id=email_input        ${customer_email}
    # Additional steps to fill in necessary purchase information (e.g., add items to cart, provide payment details)
    Click Button      id=complete_purchase_button
    Wait Until Page Contains Element      id=confirmation_message     timeout=10s

Validate Payment Confirmation Email Sent To
    [Arguments]         ${customer_email}
    # Implement checking of email inbox. This can depend on the specific setup e.g., using an email library or integration.
    # Placeholder for actual email validation step.
    Log                 Payment confirmation email was sent to ${customer_email}",This test case checks the validation for ensuring customers receive a payment confirmation email after completing a transaction using the EZCheckout driver.,Validate Customer Receives Payment Confirmation Email
Generate a robot framework test case for testing to validate user navigation to the contact support page functionality of the AppNOW application.,"*** Settings ***
Documentation          Test cases for validating user navigation to the contact support page functionality of the AppNOW application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/appnow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate User Navigation To Contact Support Page
    [Documentation] Test case for validating user navigation to the contact support page functionality of the AppNOW application
    Launch AppNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Contact Support Page
    Validate Contact Support Page Displayed",This test case checks the validation for user navigation to the contact support page functionality of the AppNOW application.,Validate User Navigation To Contact Support Page
Generate a robot framework test case for testing to Validate Customer CAN Add New Address On Checkout functionality of the ShopNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can add new address on checkout functionality of the ShopNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopnow
${CUSTOMER_DETAILS}         customer_details
${NEW_ADDRESS_DETAILS}      new_address_details

*** Test Cases ***
Validate Add New Address On Checkout
    [Documentation] Test case for validating that the customer can add new address on checkout functionality of the ShopNOW datadriver
    Launch ShopNOW Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Proceed To Checkout
    Add New Address ${NEW_ADDRESS_DETAILS}
    Validate New Address Added",This test case checks the validation for adding a new address during the checkout process functionality of the ShopNOW datadriver.,Validate Customer Can Add New Address On Checkout
Generate a robot framework test case for testing to Validate the User Registration functionality of the ShopEZ datadriver.,"*** Settings ***
Documentation          Test cases for validating the user registration functionality of the ShopEZ datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopez
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Registration
    [Documentation] Test case for validating the user registration functionality of the ShopEZ datadriver
    Launch ShopEZ Application ${URL}
    Enter User Registration Details ${USER_DETAILS}
    Submit Registration Form
    Validate Successful Registration Message",This test case checks the validation for the user registration functionality of the ShopEZ datadriver.,Validate User Registration Functionality
Generate a robot framework test case for testing to Validate Customer Is Able To Download and Print Invoice functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to download and print invoice functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Download And Print Invoice
    [Documentation] Test case for validating that the customer is able to download and print invoice functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Download Invoice ${INVOICE_DETAILS}
    Print Invoice ${INVOICE_DETAILS}
    Validate Invoice Downloaded And Printed",This test case checks the validation for downloading and printing invoices functionality of the PayNOW datadriver.,Validate Download and Print Invoice Functionality
Generate a robot framework test case for testing the functionality of viewing account balance immediately after login in the BankApp app.,"*** Settings ***
Documentation    Test cases for validating the functionality of viewing account balance immediately after login in the BankApp app.
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/bankapp
${USERNAME}                  test_user
${PASSWORD}                  secret_password
${ACCOUNT_BALANCE_LOCATOR}   balance_element

*** Test Cases ***
Validate Viewing Account Balance After Login
    [Documentation]    Test case for validating that the user can view their account balance immediately after logging in to the BankApp app.
    Launch BankApp Application    ${URL}
    Login To BankApp    ${USERNAME}    ${PASSWORD}
    Wait Until Page Contains Element    ${ACCOUNT_BALANCE_LOCATOR}
    Validate Account Balance Is Visible    ${ACCOUNT_BALANCE_LOCATOR}",This test case checks the validation for viewing the customer's account balance immediately after the user logs into the BankApp app.,Validate View Account Balance After Login
Generate a robot framework test case for testing to Validate Customer Is Unable To Apply Discount Code After Expiration functionality of the ShopEasy datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to apply discount code after expiration functionality of the ShopEasy datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopeasy
${CUSTOMER_DETAILS}         customer_details
${DISCOUNT_CODE}            expired_code
${ERROR_MESSAGE}            ""This discount code has expired""

*** Test Cases ***
Validate Customer Unable To Apply Expired Discount Code
    [Documentation] Test case for validating that the customer is unable to apply discount code after expiration functionality of the ShopEasy datadriver
    Launch ShopEasy Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Add Items To Cart
    Navigate To Checkout Page
    Apply Discount Code ${DISCOUNT_CODE}
    Validate Error Message Displayed ${ERROR_MESSAGE}",This test case checks the validation for being unable to apply a discount code once it has expired functionality of the ShopEasy datadriver.,Validate Unable To Apply Expired Discount Code
Generate a robot framework test case for testing to Validate Admin Can Generate Monthly Reporting functionality of the CommerceX datadriver.,"*** Settings ***
Documentation          Test cases for validating that the admin can generate monthly reporting functionality of the CommerceX datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/commercex
${ADMIN_CREDENTIALS}        admin_credentials
${START_DATE}               start_date
${END_DATE}                 end_date

*** Test Cases ***
Validate Admin Can Generate Monthly Reporting
    [Documentation] Test case for validating that the admin can generate monthly reporting functionality of the CommerceX datadriver
    Launch CommerceX Application ${URL}
    Enter Admin Credentials ${ADMIN_CREDENTIALS}
    Navigate To Reports Section
    Select Start Date ${START_DATE}
    Select End Date ${END_DATE}
    Generate Monthly Report
    Validate Monthly Report Generated",This test case checks the validation for the admin's ability to generate monthly reporting functionality of the CommerceX datadriver.,Validate Admin Can Generate Monthly Reporting
Generate a robot framework test case for testing to Validate Customer Is Able To Opt-In For Monthly Email Invoices feature of the InvoicePortal datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to opt-in for monthly email invoices feature of the InvoicePortal datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/invoiceportal
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Is Able To Opt-In For Monthly Email Invoices
    [Documentation] Test case for validating that the customer is able to opt-in for monthly email invoices feature of the InvoicePortal datadriver
    Launch InvoicePortal Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Opt-In For Monthly Email Invoices
    Validate Opt-In Confirmation",This test case checks the validation for opting in for monthly email invoices feature of the InvoicePortal datadriver.,Validate Customer Can Opt-In For Monthly Email Invoices
Generate a robot framework test case for testing to Validate User Cannot Exceed Maximum Login Attempts After Multiple Invalid Password Inputs functionality of the OnlineBank Module.,"*** Settings ***
Documentation          Test case for validating that the user cannot exceed maximum login attempts after multiple invalid password inputs functionality of the OnlineBank Module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/onlinebank
${USER_CREDENTIALS}         user_credentials
${INVALID_PASSWORD}         incorrect_password

*** Test Cases ***
Validate Maximum Login Attempts
    [Documentation] Test case for validating that the user cannot exceed maximum login attempts after multiple invalid password inputs functionality of the OnlineBank Module
    Launch OnlineBank Application ${URL}
    Enter User Credentials ${USER_CREDENTIALS} with ${INVALID_PASSWORD} multiple times
    Validate Login Attempts Exceeded Message
",This test case ensures that a user is unable to exceed the maximum number of login attempts after entering multiple invalid passwords in the OnlineBank module.,Validate User Cannot Exceed Maximum Login Attempts With Invalid Passwords
Generate a robot framework test case for testing to validate adding a new item to the customer's wishlist on the eCommerce site.,"*** Settings ***
Documentation          Test cases for validating the addition of a new item to the customer's wishlist on the eCommerce site
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com
${CUSTOMER_LOGIN_CREDENTIALS}    login_credentials
${PRODUCT_DETAILS}               product_details

*** Test Cases ***
Validate Adding New Item To Wishlist
    [Documentation] Test case for validating the addition of a new item to the customer's wishlist on the eCommerce site
    Launch eCommerce Application ${URL}
    Login To Customer Account ${CUSTOMER_LOGIN_CREDENTIALS}
    Search For Product ${PRODUCT_DETAILS}
    Add Product To Wishlist
    Validate Product Added To Wishlist",This test case checks the validation for adding a new item to the customer's wishlist functionality on the eCommerce site.,Validate Add New Item To Wishlist
Generate a robot framework test case for testing to Validate User Can Successfully Register With Valid Credentials functionality of the QuickPay platform.,"*** Settings ***
Documentation    Test cases for validating that the user can successfully register with valid credentials functionality of the QuickPay platform
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${USERNAME}                valid_username
${EMAIL}                   valid_email@example.com
${PASSWORD}                valid_password

*** Test Cases ***
Validate User Can Successfully Register With Valid Credentials
    [Documentation] Test case for validating that the user can successfully register with valid credentials functionality of the QuickPay platform
    Launch Browser    chrome    ${URL}
    Navigate To Registration Page
    Enter Registration Details    ${USERNAME}    ${EMAIL}    ${PASSWORD}
    Submit Registration Form
    Validate Registration Success
    Close Browser",This test case checks the validation for successfully registering a user with valid credentials functionality of the QuickPay platform.,Validate User Registration With Valid Credentials
Generate a robot framework test case for testing to validate the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                   https://example.com/mybank
${CUSTOMER_DETAILS}      customer_details
${NEGATIVE_BALANCE_ACC}  negative_balance_acc
${TARGET_ACC}            target_acc

*** Test Cases ***
Validate Unable To Transfer Funds With Negative Balance
    [Documentation] Test case for validating that the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver
    Launch MyBank Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Source Account With Negative Balance ${NEGATIVE_BALANCE_ACC}
    Select Target Account ${TARGET_ACC}
    Attempt Funds Transfer
    Validate Transfer Failure",This test case checks the validation for being unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver.,Validate Unable To Transfer Funds With Negative Account Balance
Generate a robot framework test case for testing to Validate Customer Is Able To Update Bank Account Details functionality of the Financial App platform.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update bank account details functionality of the Financial App platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/financialapp
${CUSTOMER_LOGIN}           customer_login
${BANK_ACCOUNT_DETAILS}     bank_account_details

*** Test Cases ***
Validate Update Bank Account Details
    [Documentation] Test case for validating that the customer is able to update bank account details functionality of the Financial App platform
    Launch Financial App ${URL}
    Login As Customer ${CUSTOMER_LOGIN}
    Navigate To Bank Account Section
    Update Bank Account Details ${BANK_ACCOUNT_DETAILS}
    Validate Bank Account Updated",This test case checks the validation for updating bank account details functionality of the Financial App platform.,Validate Update Bank Account Details
Generate a robot framework test case for testing to Validate Customer Is Unable To Register With Invalid Email Address in the registration functionality of the DefSecure application.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to register with an invalid email address in the registration functionality of the DefSecure application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/defsecure
${INVALID_EMAIL}            invalid_email@example
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Unable To Register With Invalid Email Address
    [Documentation] Test case for validating that the customer is unable to register with an invalid email address in the registration functionality of the DefSecure application
    Launch DefSecure Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Invalid Email Address ${INVALID_EMAIL}
    Submit Registration Form
    Validate Error Message Displayed",This test case checks the validation for being unable to register with an invalid email address in the registration functionality of the DefSecure application.,Validate Unable To Register With Invalid Email Address
Generate a robot framework test case for testing to Validate User Is Able To Retrieve Forgotten Password functionality of the ResetPassword datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to retrieve forgotten password functionality of the ResetPassword datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/resetpassword
${USER_DETAILS}             user_details
${NOTIFICATION_DETAILS}     notification_details

*** Test Cases ***
Validate User Able To Retrieve Forgotten Password
    [Documentation] Test case for validating that the user is able to retrieve forgotten password functionality of the ResetPassword datadriver
    Launch ResetPassword Application ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Forgot Password Request
    Check Notification For Password Reset ${NOTIFICATION_DETAILS}
    Validate Password Reset Successful",This test case checks the validation for retrieving a forgotten password functionality of the ResetPassword datadriver.,Validate Retrieve Forgotten Password
Generate a robot framework test case for testing to Validate Customer Is Unable To Update Personal Details Without Confirmation functionality of the UserProfileManager.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to update personal details without confirmation functionality of the UserProfileManager
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/userprofilemananger
${CUSTOMER_DETAILS}         customer_details
${UPDATE_DETAILS}           update_details

*** Test Cases ***
Validate Unable To Update Personal Details Without Confirmation
    [Documentation] Test case for validating that the customer is unable to update personal details without confirmation functionality of the UserProfileManager
    Launch UserProfileManager Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Update Personal Details Without Confirmation ${UPDATE_DETAILS}
    Validate Unable To Update Personal Details",This test case checks the validation for being unable to update personal details without confirmation functionality of the UserProfileManager.,Validate Unable To Update Personal Details Without Confirmation
Generate a robot framework test case for validating the successful logout functionality of the BillingNow data application.,"*** Settings ***
Documentation    Test cases for validating the successful logout functionality of the BillingNow data application
Library          SeleniumLibrary

*** Variables ***
${URL}                https://example.com/billingnow
${USER_CREDENTIALS}   user_credentials

*** Test Cases ***
Validate Successful Logout Functionality
    [Documentation]    Test case for validating the successful logout functionality of the BillingNow data application
    Launch BillingNow Application    ${URL}
    Login To Application             ${USER_CREDENTIALS}
    Perform Logout
    Validate Successful Logout",This test case checks the validation for successfully logging out from the BillingNow data application.,Validate Successful Logout Functionality
Generate a robot framework test case for testing to Validate Incorrect Username/Password Behavior functionality of the SecurePay datadriver.,"*** Settings ***
Documentation          Test cases for validating the incorrect username/password behavior functionality of the SecurePay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securepay
${INVALID_CREDENTIALS}      invalid_credentials

*** Test Cases ***
Validate Incorrect Username Password Behavior
    [Documentation] Test case for validating the incorrect username/password behavior functionality of the SecurePay datadriver
    Launch SecurePay Application ${URL}
    Enter Invalid Credentials ${INVALID_CREDENTIALS}
    Attempt Login
    Validate Incorrect Login Behavior",This test case checks the validation for incorrect username/password behavior functionality of the SecurePay datadriver.,Validate Incorrect Username/Password Behavior
Generate a robot framework test case for testing the login functionality with an expired password for the MyPay app.,"*** Settings ***
Documentation          Test cases for testing the login functionality with an expired password for the MyPay app
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mypay
${EXPIRED_PASSWORD_DETAILS} expired_password_details

*** Test Cases ***
Validate Login With Expired Password
    [Documentation] Test case for testing the login functionality with an expired password for the MyPay app
    Launch MyPay Application ${URL}
    Enter Expired Password Details ${EXPIRED_PASSWORD_DETAILS}
    Attempt Login
    Validate Expired Password Message",This test case validates the login functionality when a user tries to log in with an expired password on the MyPay application.,Validate Login With Expired Password On MyPay
Generate a robot framework test case for testing the user ability to generate a monthly report of all transactions on the platform.,"*** Settings ***
Documentation    Test cases for validating the user ability to generate a monthly report of all transactions on the platform
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/transactions
${USER_DETAILS}              user_details

*** Test Cases ***
Validate Generate Monthly Report of All Transactions
    [Documentation]    Test case for validating the user ability to generate a monthly report of all transactions on the platform
    Launch Transactions Application    ${URL}
    Enter User Details    ${USER_DETAILS}
    Navigate To Reports Section
    Select Monthly Report Option
    Generate Report
    Validate Report Generated Successfully",This test case validates the functionality of generating a monthly report that consolidates all transactions performed by the user in that month on the platform.,Validate User Can Generate Monthly Transaction Report
Generate a robot framework test case for testing to validate that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ordernow
${ORDER_DETAILS}            order_details
${TRACKING_INFO}            tracking_info

*** Test Cases ***
Validate Shipping Tracking Information Updated For FedEx Orders
    [Documentation] Test case for validating that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver
    Launch OrderNow Application ${URL}
    Enter Order Details ${ORDER_DETAILS}
    Ship Order Through FedEx ${TRACKING_INFO}
    Validate Tracking Information Updated",This test case checks the validation for ensuring shipping tracking information is accurately updated for orders shipped through FedEx functionality of the OrderNow datadriver.,Validate Shipping Tracking Update For FedEx Orders
Generate a robot framework test case for testing to Validate Customer Unable To View Payment History functionality of the InvoiceNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to view payment history functionality of the InvoiceNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/invoicenow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable To View Payment History
    [Documentation] Test case for validating that the customer is unable to view payment history functionality of the InvoiceNOW datadriver
    Launch InvoiceNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Navigate To Payment History Page
    Validate Payment History Not Accessible",This test case checks the validation for being unable to view payment history functionality of the InvoiceNOW datadriver.,Validate Unable To View Payment History
Generate a robot framework test case to validate if the user can view detailed transaction history on the Transactions page of the BillingNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user can view detailed transaction history on the Transactions page of the BillingNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billingnow
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Can View Detailed Transaction History
    [Documentation] Test case for validating that the user can view detailed transaction history on the Transactions page of the BillingNow datadriver
    Launch BillingNow Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Transactions Page
    Open Detailed Transaction History
    Validate Transaction History Displayed","This test case validates the functionality allowing users to view detailed transaction history on the Transactions page, ensuring all elements are correctly displayed and can be interacted with.",Validate Viewing Detailed Transaction History On Transactions Page
Generate a Robot Framework test case for testing to Validate User Account Lockout After Multiple Failed Login Attempts functionality of the SecureBanking datadriver.,"*** Settings ***
Documentation          Test cases for validating the user account lockout after multiple failed login attempts functionality of the SecureBanking datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securebanking
${USER_CREDENTIALS}         user_credentials

*** Test Cases ***
Validate User Account Lockout After Multiple Failed Login Attempts
    [Documentation] Test case for validating the user account lockout after multiple failed login attempts functionality of the SecureBanking datadriver
    Launch SecureBanking Application ${URL}
    Enter User Credentials ${USER_CREDENTIALS[""username""]} incorrect_password_1
    Validate Login Failed
    Enter User Credentials ${USER_CREDENTIALS[""username""]} incorrect_password_2
    Validate Login Failed
    Enter User Credentials ${USER_CREDENTIALS[""username""]} incorrect_password_3
    Validate Account Lockout Message Displayed",This test case verifies that the user account gets locked after multiple failed login attempts as part of the SecureBanking datadriver functionality.,Validate User Account Lockout After Multiple Failed Login Attempts
Generate a robot framework test case for testing to Validate User Unable To Sign In With Incorrect Password functionality of the LoginService.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to sign in with incorrect password functionality of the LoginService
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/login
${USER_DETAILS}             user_details
${INCORRECT_PASSWORD}       incorrect_password

*** Test Cases ***
Validate User Unable To Sign In With Incorrect Password
    [Documentation] Test case for validating that the user is unable to sign in with incorrect password functionality of the LoginService
    Launch Login Application ${URL}
    Enter User Details ${USER_DETAILS}
    Enter Incorrect Password ${INCORRECT_PASSWORD}
    Click Sign In Button
    Validate Sign In Failed",This test case checks the validation for being unable to sign in with an incorrect password functionality of the LoginService.,Validate Unable To Sign In With Incorrect Password
Generate a Robot Framework test case for testing to Validate User Registration With Email Verification functionality of the SignUp module.,"*** Settings ***
Documentation          Test cases for validating that the user registration with email verification functionality of the SignUp module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/signup
${USER_DETAILS}             user_details
${EMAIL_VERIFICATION_LINK}  email_verification_link

*** Test Cases ***
Validate User Registration With Email Verification
    [Documentation] Test case for validating that the user registration with email verification functionality of the SignUp module
    Launch SignUp Application ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Registration Form
    Check Email For Verification Link ${EMAIL_VERIFICATION_LINK}
    Click On Email Verification Link ${EMAIL_VERIFICATION_LINK}
    Validate Registration Completed",This test case checks the validation for user registration with email verification functionality of the SignUp module.,Validate User Registration With Email Verification
Generate a Robot Framework test case for testing to Validate User Is Able To Reset Password Through Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password through email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${USER_EMAIL}               user_email
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate User Is Able To Reset Password Through Email
    [Documentation] Test case for validating that the user is able to reset password through email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Navigate To Password Reset Page
    Enter User Email ${USER_EMAIL}
    Submit Password Reset Request
    Open Password Reset Email ${USER_EMAIL}
    Click Password Reset Link From Email
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit New Password
    Validate Password Reset Successfully",This test case checks the validation for being able to reset password through email functionality of the PayNOW datadriver.,Validate User Can Reset Password Through Email
Generate a robot framework test case for testing to Validate the Update Personal Information functionality of the UserProfile datadriver.,"*** Settings ***
Documentation          Test cases for validating the update personal information functionality of the UserProfile datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/userprofile
${USER_DETAILS}             user_details

*** Test Cases ***
Validate Update Personal Information
    [Documentation] Test case for validating the update personal information functionality of the UserProfile datadriver
    Launch UserProfile Application ${URL}
    Enter User Details ${USER_DETAILS}
    Update Personal Information ${USER_DETAILS}
    Validate Personal Information Updated",This test case checks the validation for updating personal information functionality of the UserProfile datadriver.,Validate Update Personal Information
Generate a robot framework test case for testing to Validate Customer Can Successfully Update Their Personal Profile Information Through The MightyPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can successfully update their personal profile information through the MightyPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mightypay
${CUSTOMER_PROFILE_DETAILS} customer_profile_details

*** Test Cases ***
Validate Update Customer Personal Profile Information
    [Documentation] Test case for validating that the customer can successfully update their personal profile information through the MightyPay datadriver
    Launch MightyPay Application ${URL}
    Enter Customer Login Details ${CUSTOMER_PROFILE_DETAILS}
    Navigate To Personal Profile Page
    Update Personal Profile Information ${CUSTOMER_PROFILE_DETAILS}
    Save Updated Information
    Validate Profile Information Updated","This test case ensures that a customer is able to successfully update their personal profile information, including name, address, email, and phone number, through the MightyPay datadriver.",Validate Customer Can Update Personal Profile Information
Generate a robot framework test case for testing to validate user can update personal information from the profile page functionality of the NewApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user can update personal information from the profile page functionality of the NewApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/newapp
${USER_LOGIN_DETAILS}       user_login_details
${PERSONAL_INFORMATION}     personal_information

*** Test Cases ***
Validate User Can Update Personal Information From Profile Page
    [Documentation] Test case for validating that the user can update personal information from the profile page functionality of the NewApp datadriver
    Launch NewApp Application ${URL}
    Enter User Login Details ${USER_LOGIN_DETAILS}
    Navigate To Profile Page
    Update Personal Information ${PERSONAL_INFORMATION}
    Validate Personal Information Updated",This test case checks the validation for updating personal information from the profile page functionality of the NewApp datadriver.,Validate Update Personal Information From Profile Page
Generate a robot framework test case to validate waiver of transaction fees for government-issued debit cards functionality of the ServiceX system.,"*** Settings ***
Documentation    Test cases for validating the waiver of transaction fees for government-issued debit cards functionality of the ServiceX system
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/servicex
${CUSTOMER_DETAILS}         customer_details
${DEBIT_CARD_DETAILS}       debit_card_details
${EXPECTED_FEES}            0

*** Test Cases ***
Validate Waiver of Transaction Fees for Government-Issued Debit Cards
    [Documentation] Test case for validating the waiver of transaction fees for government-issued debit cards functionality of the ServiceX system
    Launch ServiceX Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Debit Card Details ${DEBIT_CARD_DETAILS}
    Process Payment
    Validate Transaction Fees Waived ${EXPECTED_FEES}",This test case checks the validation for waiving transaction fees when using government-issued debit cards in the ServiceX system.,Validate Waiver Of Transaction Fees For Government-Issued Debit Cards
Generate a robot framework test case for testing to Validate Customer Ability to Update Personal Information functionality of the MyAccount manager.,"*** Settings ***
Documentation          Test cases for validating the customer's ability to update personal information functionality of the MyAccount manager
Library                SeleniumLibrary

*** Variables ***
${URL}                          https://example.com/myaccount
${CUSTOMER_LOGIN_DETAILS}       customer_login_details
${PERSONAL_INFORMATION}         personal_information

*** Test Cases ***
Validate Customer Ability To Update Personal Information
    [Documentation] Test case for validating the customer's ability to update personal information functionality of the MyAccount manager
    Launch MyAccount Manager ${URL}
    Enter Customer Login Details ${CUSTOMER_LOGIN_DETAILS}
    Navigate To Personal Information Section
    Update Personal Information ${PERSONAL_INFORMATION}
    Validate Personal Information Updated",This test case checks the validation for being able to update personal information functionality of the MyAccount manager.,Validate Update Personal Information
Generate a robot framework test case for testing to Validate Customer Is Able To Apply Promotional Code During Checkout functionality of the PayNow datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to apply promotional code during checkout functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PROMOTIONAL_CODE}         promotional_code

*** Test Cases ***
Validate Apply Promotional Code During Checkout
    [Documentation]    Test case for validating that the customer is able to apply promotional code during checkout functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Proceed To Checkout
    Enter Promotional Code    ${PROMOTIONAL_CODE}
    Apply Promotional Code
    Validate Discount Applied",This test case checks the validation for allowing the customer to apply a promotional code during the checkout process via the PayNow datadriver.,Validate Promotional Code Application During Checkout
Generate a robot framework test case for testing to Validate User Unable To Reset Password With Invalid Email functionality of the SecureNOW application.,"*** Settings ***
Documentation    Test cases for validating that the user is unable to reset password with invalid email functionality of the SecureNOW application
Library          SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/securenow
${INVALID_EMAIL}       invalid_email@example.com

*** Test Cases ***
Validate User Unable To Reset Password With Invalid Email
    [Documentation]    Test case for validating that the user is unable to reset password with invalid email functionality of the SecureNOW application
    Launch SecureNOW Application    ${URL}
    Navigate To Reset Password Page
    Enter Invalid Email Address    ${INVALID_EMAIL}
    Submit Reset Password Request
    Validate Error Message Is Displayed",This test case checks the validation for being unable to reset password using an invalid email in the SecureNOW application.,Validate Unable To Reset Password With Invalid Email
Generate a robot framework test case for testing to Validate Customer Unable to Subscribe to Monthly Plan Without Credit Card functionality of the PremiumSubscription system.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to subscribe to a monthly plan without a credit card functionality of the PremiumSubscription system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/premiumsubscription
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Unable to Subscribe to Monthly Plan Without Credit Card
    [Documentation] Test case for validating that the customer is unable to subscribe to a monthly plan without a credit card functionality of the PremiumSubscription system
    Launch PremiumSubscription System ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Subscribe Without Credit Card
    Validate Error Message",This test case checks the validation for being unable to subscribe to the monthly plan without providing a credit card functionality of the PremiumSubscription system.,Validate Unable To Subscribe To Monthly Plan Without Credit Card
Generate a robot framework test case for testing to Validate User Registration With Email Verification functionality of the SignUp system.,"*** Settings ***
Documentation          Test cases for validating that the user registration with email verification functionality of the SignUp system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/signup
${USER_DETAILS}             user_details
${EMAIL_VERIFICATION_LINK}  email_verification_link

*** Test Cases ***
Validate User Registration With Email Verification
    [Documentation] Test case for validating that the user registration with email verification functionality of the SignUp system
    Launch SignUp Application ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Registration Form
    Check Email For Verification Link ${EMAIL_VERIFICATION_LINK}
    Click Verification Link ${EMAIL_VERIFICATION_LINK}
    Validate Email Verified",This test case checks the validation for user registration with email verification functionality of the SignUp system.,Validate User Registration With Email Verification
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Information For Existing Account functionality of the BillFast system.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing information for an existing account functionality of the BillFast system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billfast
${CUSTOMER_ACCOUNT_DETAILS} customer_account_details
${UPDATED_BILLING_INFO}     updated_billing_info

*** Test Cases ***
Validate Customer Is Able To Update Billing Information For Existing Account
    [Documentation] Test case for validating that the customer is able to update billing information for an existing account functionality of the BillFast system
    Launch BillFast Application ${URL}
    Login Customer Account ${CUSTOMER_ACCOUNT_DETAILS}
    Navigate To Update Billing Information Section
    Enter New Billing Information ${UPDATED_BILLING_INFO}
    Save Updated Billing Information
    Validate Billing Information Updated",This test case checks the validation for updating billing information for an existing account functionality of the BillFast system.,Validate Update Billing Information For Existing Account
Generate a robot framework test case for testing to Validate User is unable to Register a New Account with an already Registered Email functionality of the UserAccount datadriver.,"*** Settings ***
Documentation    Test cases for validating that the user is unable to register a new account with an already registered email functionality of the UserAccount datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                https://example.com/register
${REGISTERED_EMAIL}   registered_email@example.com
${PASSWORD}           Password123!
${EXPECTED_ERROR}     This email is already registered.

*** Test Cases ***
Validate User Is Unable To Register With Registered Email
    [Documentation] Test case for validating that the user is unable to register a new account with an already registered email functionality of the UserAccount datadriver
    Launch Browser    ${BROWSER}    ${URL}
    Input Registration Details    ${REGISTERED_EMAIL}    ${PASSWORD}
    Submit Registration Form
    Validate Error Message Displayed    ${EXPECTED_ERROR}
    Close Browser",This test case checks the validation for user being unable to register a new account using an already registered email functionality of the UserAccount datadriver.,Validate Unable To Register Account With Already Registered Email
Generate a robot framework test case for testing to Validate Customer Is Able To Update Saved Credit Card Details functionality of the PayLater datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update saved credit card details functionality of the PayLater datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paylater
${CUSTOMER_DETAILS}         customer_details
${NEW_CREDIT_CARD_DETAILS}  new_credit_card_details

*** Test Cases ***
Validate Update Saved Credit Card Details
    [Documentation] Test case for validating that the customer is able to update saved credit card details functionality of the PayLater datadriver
    Launch PayLater Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Saved Credit Card Section
    Update Credit Card Details ${NEW_CREDIT_CARD_DETAILS}
    Validate Credit Card Details Updated",This test case checks the validation for updating saved credit card details functionality of the PayLater datadriver.,Validate Update Saved Credit Card Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Offer Discount For Early Payment functionality of the PayFIRST datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to offer a discount for early payment functionality of the PayFIRST datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payfirst
${MERCHANT_DETAILS}         merchant_details
${DISCOUNT_DETAILS}         discount_details

*** Test Cases ***
Validate Offer Discount For Early Payment
    [Documentation] Test case for validating that the merchant is able to offer a discount for early payment functionality of the PayFIRST datadriver
    Launch PayFirst Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Enter Discount Details ${DISCOUNT_DETAILS}
    Apply Discount For Early Payment
    Validate Discount Applied",This test case checks the validation for offering a discount for early payments functionality of the PayFIRST datadriver.,Validate Offering Discount For Early Payments
Generate a robot framework test case for testing the functionality to validate that customers can update their profile information in the MyAccount datadriver.,"*** Settings ***
Documentation          Test cases for validating that customers can update their profile information in the MyAccount datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${CUSTOMER_DETAILS}         customer_details
${PROFILE_INFO}             profile_info

*** Test Cases ***
Validate Customer Can Update Profile Information
    [Documentation] Test case for validating that customers can update their profile information in the MyAccount datadriver
    Launch MyAccount Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Profile Information ${PROFILE_INFO}
    Validate Profile Update Successful","This test case verifies the function that allows customers to update their profile information including email, password, and contact details in the MyAccount datadriver.",Validate Customer Can Update Profile Information
Generate a robot framework test case for testing the functionality that validates customer is unable to cancel a confirmed payment in the MyAccount datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to cancel a confirmed payment in the MyAccount datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Customer Unable To Cancel Confirmed Payment
    [Documentation] Test case for validating that the customer is unable to cancel a confirmed payment in the MyAccount datadriver
    Launch MyAccount Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Confirm Payment ${PAYMENT_DETAILS}
    Attempt To Cancel Payment
    Validate Unable To Cancel Confirmed Payment",This test case checks the validation for being unable to cancel a confirmed payment functionality of the MyAccount datadriver.,Validate Unable To Cancel Confirmed Payment
Generate a robot framework test case for testing to Validate User Registration With Valid Email functionality of the MyApp datadriver.,"*** Settings ***
Documentation    Test case for validating that the user registration with a valid email functionality of the MyApp datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/myapp
${USER_DETAILS}        user_details
${VALID_EMAIL}         user@example.com
${PASSWORD}            user_password

*** Test Cases ***
Validate User Registration With Valid Email
    [Documentation]  Test case for validating that the user registration with a valid email functionality of the MyApp datadriver
    Launch Application    ${URL}
    Click Register Link
    Enter User Details    ${USER_DETAILS}
    Enter Email    ${VALID_EMAIL}
    Enter Password    ${PASSWORD}
    Submit Registration Form
    Validate Registration Success Message Displayed",This test case checks the validation for user registration using a valid email address in the MyApp datadriver.,Validate User Registration With Valid Email
Generate a robot framework test case for testing to Validate User Is Unable To Access Premium Features Without Subscription on the MyService platform.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to access premium features without a subscription on the MyService platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myservice
${USER_DETAILS}             user_details
${PREMIUM_FEATURE}          premium_feature

*** Test Cases ***
Validate User Unable To Access Premium Features Without Subscription
    [Documentation] Test case for validating that the user is unable to access premium features without a subscription on the MyService platform
    Launch MyService Application ${URL}
    Enter User Details ${USER_DETAILS}
    Attempt To Access Premium Feature ${PREMIUM_FEATURE}
    Validate Access Denied Without Subscription",This test case checks the validation for ensuring that users cannot access premium features without an active subscription on the MyService platform.,Validate Premium Features Access Without Subscription
Generate a robot framework test case for testing to Validate Customer Is Able To Add New Payment Method functionality of the QuickPay application.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to add a new payment method functionality of the QuickPay application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${CUSTOMER_DETAILS}         customer_details
${NEW_PAYMENT_METHOD}       new_payment_method_details

*** Test Cases ***
Validate Customer Is Able To Add New Payment Method
    [Documentation] Test case for validating that the customer is able to add a new payment method functionality of the QuickPay application
    Launch QuickPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Methods Page
    Add New Payment Method ${NEW_PAYMENT_METHOD}
    Validate New Payment Method Added",This test case checks the validation for adding a new payment method functionality of the QuickPay application.,Validate Add New Payment Method
Generate a robot framework test case for testing to Validate User Is Able To Update Profile Information functionality of the MyBankApp datadriver.,"*** Settings ***
Documentation          Test cases for validating the user is able to update profile information functionality of the MyBankApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mybankapp
${USER_DETAILS}             user_details
${NEW_PROFILE_INFO}         new_profile_info

*** Test Cases ***
Validate User Is Able To Update Profile Information
    [Documentation] Test case for validating the user is able to update profile information functionality of the MyBankApp datadriver
    Launch MyBankApp Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Profile Section
    Update Profile Information ${NEW_PROFILE_INFO}
    Validate Profile Information Updated",This test case checks the validation for updating user profile information functionality of the MyBankApp datadriver.,Validate User Is Able To Update Profile Information
Generate a robot framework test case for testing to Validate User's Ability to Reset Password Through an Email Verification Code functionality of the GoUnified system.,"*** Settings ***
Documentation          Test cases for validating the user's ability to reset password through an email verification code functionality of the GoUnified system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/gounified
${USER_EMAIL}               user_email
${NEW_PASSWORD}             new_password
${VERIFICATION_CODE}        verification_code

*** Test Cases ***
Validate User's Ability to Reset Password Through an Email Verification Code
    [Documentation] Test case for validating the user's ability to reset password through an email verification code functionality of the GoUnified system
    Launch GoUnified Application ${URL}
    Click Forgot Password Link
    Enter User Email ${USER_EMAIL}
    Click Send Verification Code
    Retrieve Verification Code ${USER_EMAIL}
    Enter Verification Code ${VERIFICATION_CODE}
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit Password Reset
    Validate Password Reset Success",This test case checks the validation for the user's ability to reset their password by receiving and confirming an email verification code in the GoUnified system.,Validate Password Reset Through Email Verification Code
Generate a robot framework test case for testing to Validate Customer Receives Notification For Upcoming Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer receives notification for upcoming payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Receives Notification For Upcoming Payment
    [Documentation] Test case for validating that the customer receives notification for upcoming payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Schedule Upcoming Payment
    Validate Notification Received For Upcoming Payment",This test case checks the validation for notifying customers about upcoming payments functionality of the PayNOW datadriver.,Validate Notification For Upcoming Payment
Generate a robot framework test case for testing to validate user registration with valid and invalid Email Address on the MyCompany platform.,"*** Settings ***
Documentation          Test cases for validating user registration with valid and invalid email address on the MyCompany platform
Library                SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/register
${VALID_EMAIL}         valid.email@example.com
${INVALID_EMAIL}       invalidemail.com
${USER_DETAILS}        user_details

*** Test Cases ***
Validate User Registration With Valid And Invalid Email Address
    [Documentation]    Test case for validating user registration with valid and invalid email address on the MyCompany platform
    Launch Browser     chrome    ${URL}
    Validate Registration With Valid Email Address
    Validate Registration With Invalid Email Address

Validate Registration With Valid Email Address
    [Documentation]    Test case for validating user registration with a valid email address on the MyCompany platform
    Input User Details ${USER_DETAILS}    ${VALID_EMAIL}
    Click Register Button
    Validate Successful Registration Message

Validate Registration With Invalid Email Address
    [Documentation]    Test case for validating user registration with an invalid email address on the MyCompany platform
    Input User Details ${USER_DETAILS}    ${INVALID_EMAIL}
    Click Register Button
    Validate Error Message For Invalid Email",This test case checks the validation for user registration with both valid and invalid Email Address functionality of the MyCompany platform.,Validate User Registration With Valid And Invalid Email Address
Generate a robot framework test case for testing to Validate User Unable To Reset Password With Invalid Email Address functionality of the SecureLogin system.,"*** Settings ***
Documentation    Test cases for validating that the user is unable to reset password with an invalid email address functionality of the SecureLogin system
Library          SeleniumLibrary

*** Variables ***
${URL}                         https://example.com/securelogin
${INVALID_EMAIL_ADDRESS}       invalid_email@example.com
${ERROR_MESSAGE}               Invalid email address

*** Test Cases ***
Validate User Unable To Reset Password With Invalid Email Address
    [Documentation]    Test case for validating that the user is unable to reset password with an invalid email address functionality of the SecureLogin system
    Launch SecureLogin Application    ${URL}
    Click On Forgot Password Link
    Enter Invalid Email Address    ${INVALID_EMAIL_ADDRESS}
    Click On Reset Password Button
    Validate Error Message Should Be Displayed    ${ERROR_MESSAGE}",This test case checks the validation for user being unable to reset password with an invalid email address functionality of the SecureLogin system.,Validate Unable To Reset Password With Invalid Email Address
Generate a robot framework test case for testing to Validate User Is Unable To Place Order With Expired Credit Card functionality of the Checkout process.,"*** Settings ***
Documentation           Test cases for validating that the user is unable to place order with expired credit card functionality of the Checkout process
Library                 SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/checkout
${USER_DETAILS}         user_details
${EXPIRED_CARD}         expired_card

*** Test Cases ***
Validate Unable To Place Order With Expired Credit Card
    [Documentation]     Test case for validating that the user is unable to place order with expired credit card functionality of the Checkout process
    Launch Checkout Application ${URL}
    Enter User Details ${USER_DETAILS}
    Enter Credit Card Details ${EXPIRED_CARD}
    Attempt To Place Order
    Validate Order Placement Denied",This test case checks the validation for being unable to place an order with an expired credit card functionality of the Checkout process.,Validate Unable To Place Order With Expired Credit Card
Generate a robot framework test case for testing to Validate Customer Is Able To Pay Multiple Invoices With Different Payment Methods functionality of the SuperPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to pay multiple invoices with different payment methods functionality of the SuperPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/superpay
${CUSTOMER_DETAILS}         customer_details
${INVOICES}                 invoices
${PAYMENT_METHODS}          payment_methods

*** Test Cases ***
Validate Pay Multiple Invoices With Different Payment Methods
    [Documentation] Test case for validating that the customer is able to pay multiple invoices with different payment methods functionality of the SuperPay datadriver
    Launch SuperPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Multiple Invoices ${INVOICES}
    Choose Different Payment Methods ${PAYMENT_METHODS}
    Confirm And Validate Payments",This test case checks the validation for paying multiple invoices using different payment methods functionality of the SuperPay datadriver.,Validate Pay Multiple Invoices With Different Payment Methods
Generate a robot framework test case for testing to Validate Customer Is Able To Download Transaction Report in CSV format on the Payment Portal.,"*** Settings ***
Documentation          Test case for validating that the customer is able to download the transaction report in CSV format on the Payment Portal
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentportal
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Download Transaction Report In CSV Format
    [Documentation] Test case for validating that the customer is able to download the transaction report in CSV format on the Payment Portal
    Launch Payment Portal ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Transaction Report Page
    Download Transaction Report In CSV Format
    Validate CSV Report Downloaded Successfully",This test case checks the validation for downloading the transaction report in CSV format on the payment portal functionality.,Validate Download Transaction Report In CSV Format
Generate a robot framework test case for testing to Validate User Login with Incorrect Password functionality of the CompanyPortal system.,"*** Settings ***
Documentation          Test cases for validating user login with incorrect password functionality of the CompanyPortal system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/companyportal
${USERNAME}                 user_name
${INCORRECT_PASSWORD}       incorrect_password

*** Test Cases ***
Validate User Login with Incorrect Password
    [Documentation] Test case for validating user login with incorrect password functionality of the CompanyPortal system
    Launch CompanyPortal Application ${URL}
    Enter Username ${USERNAME}
    Enter Incorrect Password ${INCORRECT_PASSWORD}
    Attempt Login
    Validate Login Failed Message",This test case checks the validation for user login with an incorrect password functionality of the CompanyPortal system.,Validate User Login With Incorrect Password
Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule Same-Day Payment Transfer In The BANKPAY system.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to schedule same-day payment transfer functionality in the BANKPAY system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/bankpay
${CUSTOMER_DETAILS}         customer_details
${TRANSFER_DETAILS}         transfer_details

*** Test Cases ***
Validate Unable To Schedule Same-Day Payment Transfer
    [Documentation] Test case for validating that the customer is unable to schedule same-day payment transfer functionality in the BANKPAY system
    Launch BankPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Try To Schedule Same Day Transfer ${TRANSFER_DETAILS}
    Validate Error Message Displayed",This test case checks the validation for being unable to schedule a same-day payment transfer functionality of the BANKPAY system.,Validate Unable To Schedule Same-Day Payment Transfer
Generate a robot framework test case for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shoponline
${CUSTOMER_EMAIL}           customer@example.com
${RESET_LINK}               reset_link
${NEW_PASSWORD}             new_password
${CONFIRMATION_MESSAGE}     Your password has been successfully reset

*** Test Cases ***
Validate Customer Is Able To Reset Their Password Using Forgot Password Functionality
    [Documentation]    Test case for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform
    Launch ShopOnline Application    ${URL}
    Click On Forgot Password Link
    Enter Customer Email For Resetting Password    ${CUSTOMER_EMAIL}
    Submit Forgot Password Request
    Retrieve Password Reset Link From Email    ${CUSTOMER_EMAIL}    ${RESET_LINK}
    Navigate To Password Reset Link    ${RESET_LINK}
    Enter New Password    ${NEW_PASSWORD}
    Confirm New Password    ${NEW_PASSWORD}
    Submit New Password
    Validate Password Reset Confirmation Message Appears    ${CONFIRMATION_MESSAGE}",This test case verifies if the customer can successfully reset their password by using the 'Forgot Password' link and following the provided steps on the ShopOnline platform.,Validate Customer Can Reset Password Using Forgot Password Functionality
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the SuperPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the SuperPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/superpay
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Is Able To Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the SuperPay datadriver
    Launch SuperPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Section
    Enter New Billing Address ${NEW_BILLING_ADDRESS}
    Submit Billing Address Update
    Validate Billing Address Updated Successfully",This test case checks the validation for updating the billing address functionality of the SuperPay datadriver.,Validate Customer Is Able To Update Billing Address
Generate a robot framework test case for testing to Validate Customer Can Edit Payment Details After Scheduling Payment functionality of the PayBuddy system.,"*** Settings ***
Documentation    Test cases for validating that customer can edit payment details after scheduling payment functionality of the PayBuddy system
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paybuddy
${CUSTOMER_DETAILS}         customer_details
${INITIAL_PAYMENT_DETAILS}  initial_payment_details
${EDITED_PAYMENT_DETAILS}   edited_payment_details

*** Test Cases ***
Validate Customer Can Edit Payment Details After Scheduling Payment
    [Documentation]    Test case for validating that customer can edit payment details after scheduling payment functionality of the PayBuddy system
    Launch PayBuddy Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Schedule Payment    ${INITIAL_PAYMENT_DETAILS}
    Edit Scheduled Payment Details    ${EDITED_PAYMENT_DETAILS}
    Validate Payment Details Edited Successfully",This test case checks the validation for editing payment details after scheduling a payment functionality of the PayBuddy system.,Validate Edit Payment Details After Scheduling Payment
Generate a robot framework test case for testing to validate customer is able to update saved credit card details functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that customer is able to update saved credit card details functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                   https://example.com/paynow
${CUSTOMER_DETAILS}      customer_details
${CREDIT_CARD_DETAILS}   new_credit_card_details

*** Test Cases ***
Validate Customer Can Update Saved Credit Card Details
    [Documentation]    Test case for validating that customer is able to update saved credit card details functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Saved Payment Methods
    Select Credit Card To Update
    Update Credit Card Details    ${CREDIT_CARD_DETAILS}
    Validate Credit Card Details Updated Successfully",This test case checks the validation for updating saved credit card details functionality of the PayNOW datadriver.,Validate Update Saved Credit Card Details
Generate a robot framework test case for testing to Validate Merchant Is Able To Change Invoice Due Date functionality of the MerchEasy payment system.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to change the invoice due date functionality of the MerchEasy payment system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mercheasy
${MERCHANT_CREDENTIALS}     merchant_credentials
${INVOICE_ID}               invoice123
${NEW_DUE_DATE}             2023-12-31

*** Test Cases ***
Validate Merchant Is Able To Change Invoice Due Date
    [Documentation] Test case for validating that the merchant is able to change the invoice due date functionality of the MerchEasy payment system
    Launch MerchEasy Application ${URL}
    Enter Merchant Credentials ${MERCHANT_CREDENTIALS}
    Navigate To Invoice Page ${INVOICE_ID}
    Update Invoice Due Date ${NEW_DUE_DATE}
    Validate Due Date Updated",This test case checks the validation for changing the invoice due date functionality of the MerchEasy payment system.,Validate Merchant Can Change Invoice Due Date
Generate a robot framework test case for testing to Validate Customer Can Modify Shipping Address Before Order Confirmation on the ShopNow platform.,"*** Settings ***
Documentation          Test case for validating that the customer can modify shipping address before order confirmation on the ShopNow platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopnow
${CUSTOMER_DETAILS}         customer_details
${SHIPPING_ADDRESS}         new_shipping_address
${ORDER_DETAILS}            order_details

*** Test Cases ***
Validate Modify Shipping Address Before Order Confirmation
    [Documentation] Test case for validating that the customer can modify shipping address before order confirmation on the ShopNow platform
    Launch ShopNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Order Details ${ORDER_DETAILS}
    Modify Shipping Address ${SHIPPING_ADDRESS}
    Confirm Modified Address Before Order Confirmation
    Validate Order Confirmation With Modified Shipping Address",This test case verifies the ability of a customer to modify their shipping address before confirming an order on the ShopNow platform.,Validate Modify Shipping Address Before Order Confirmation
Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Registered Email functionality of the MyBankNow application.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to reset password using registered email functionality of the MyBankNow application
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mybanknow
${CUSTOMER_EMAIL}           customer_email

*** Test Cases ***
Validate Customer Is Able To Reset Password Using Registered Email
    [Documentation]    Test case for validating that the customer is able to reset password using registered email functionality of the MyBankNow application
    Launch MyBankNow Application ${URL}
    Navigate To Forgot Password Page
    Enter Registered Email ${CUSTOMER_EMAIL}
    Click Submit
    Validate Password Reset Email Sent",This test case checks the validation for resetting the password using a registered email functionality of the MyBankNow application.,Validate Password Reset Using Registered Email
Generate a robot framework test case for testing to Validate That Merchant Is Able To Update Customer Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to update customer information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${MERCHANT_DETAILS}         merchant_details
${CUSTOMER_UPDATE_DETAILS}  customer_update_details

*** Test Cases ***
Validate Update Customer Information
    [Documentation] Test case for validating that the merchant is able to update customer information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Update Customer Information ${CUSTOMER_UPDATE_DETAILS}
    Validate Customer Information Updated",This test case checks the validation for updating customer information functionality of the PayNOW datadriver.,Validate Merchant Is Able To Update Customer Information
Generate a robot framework test case for testing to Validate User Is Unable To Update Sensitive Information Without Authentication functionality of the DataSecure system.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to update sensitive information without authentication functionality of the DataSecure system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/datasecure
${USER_DETAILS}             user_details

*** Test Cases ***
Validate Unable To Update Sensitive Information Without Authentication
    [Documentation] Test case for validating that the user is unable to update sensitive information without authentication functionality of the DataSecure system
    Launch DataSecure Application ${URL}
    Enter User Details ${USER_DETAILS}
    Attempt To Update Sensitive Information Without Authentication
    Validate Update Is Not Allowed",This test case checks the validation for ensuring a user is unable to update sensitive information without proper authentication in the DataSecure system.,Validate User Unable To Update Sensitive Information Without Authentication
Generate a robot framework test case for testing to Validate Customer Is Able To Save Their Preferred Shipping Address functionality of the ShopMaster datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to save their preferred shipping address functionality of the ShopMaster datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopmaster
${CUSTOMER_CREDENTIALS}     customer_credentials
${PREFERRED_ADDRESS}        preferred_address

*** Test Cases ***
Validate Customer Is Able To Save Their Preferred Shipping Address
    [Documentation] Test case for validating that the customer is able to save their preferred shipping address functionality of the ShopMaster datadriver
    Launch ShopMaster Application ${URL}
    Enter Customer Credentials ${CUSTOMER_CREDENTIALS}
    Navigate To Account Settings
    Enter Preferred Shipping Address ${PREFERRED_ADDRESS}
    Save Address
    Validate Preferred Shipping Address Is Saved",This test case checks the validation for saving a preferred shipping address in the customer account functionality of the ShopMaster datadriver.,Validate Save Preferred Shipping Address
Generate a robot framework test case for testing to Validate User Login With Invalid Credentials functionality of the PayOnTime datadriver.,"*** Settings ***
Documentation          Test cases for validating user login with invalid credentials functionality of the PayOnTime datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payontime
${INVALID_CREDENTIALS}      invalid_credentials

*** Test Cases ***
Validate User Login With Invalid Credentials
    [Documentation] Test case for validating user login with invalid credentials functionality of the PayOnTime datadriver
    Launch PayOnTime Application ${URL}
    Enter Invalid Credentials ${INVALID_CREDENTIALS}
    Attempt Login
    Validate Login Failed Message",This test case checks the validation for user login with invalid credentials functionality of the PayOnTime datadriver.,Validate User Login With Invalid Credentials
Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Billing Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update their billing information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_INFO}         new_billing_info

*** Test Cases ***
Validate Update Billing Information
    [Documentation] Test case for validating that the customer is able to update their billing information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Information Section
    Update Billing Information ${NEW_BILLING_INFO}
    Save Changes
    Validate Billing Information Updated",This test case checks the validation for updating billing information functionality of the PayNOW datadriver.,Validate Customer Is Able To Update Billing Information
Generate a Robot Framework test case for testing the functionality of customer authorization workflow within the SecurePay application.,"*** Settings ***
Documentation          Test cases for testing the functionality of customer authorization workflow within the SecurePay application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securepay
${CUSTOMER_DETAILS}         customer_details
${AUTHORIZATION_DETAILS}    authorization_details

*** Test Cases ***
Validate Customer Authorization Workflow
    [Documentation] Test case for testing the functionality of customer authorization workflow within the SecurePay application
    Launch SecurePay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Initiate Authorization Workflow ${AUTHORIZATION_DETAILS}
    Validate Authorization Successful","This test case checks the validation for customer authorization workflow functionality within the SecurePay application, ensuring customers can authorize their accounts correctly.",Validate Customer Authorization Workflow in SecurePay
Generate a robot framework test case for testing to validate customer is able to update profile information in the user settings module.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update profile information in the user settings module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/user-settings
${CUSTOMER_LOGIN_DETAILS}   customer_login_details
${PROFILE_INFORMATION}      profile_information

*** Test Cases ***
Validate Customer Can Update Profile Information
    [Documentation] Test case for validating that the customer is able to update profile information in the user settings module
    Launch User Settings Module ${URL}
    Login As Customer ${CUSTOMER_LOGIN_DETAILS}
    Navigate To Profile Information Page
    Update Profile Information ${PROFILE_INFORMATION}
    Save Updated Profile Information
    Validate Profile Information Updated Properly","This test case checks the validation for updating profile information such as name, email, and address in the user settings module.",Validate Customer Can Update Profile Information
Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password After Failed Login Attempts functionality of the PayLATER datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reset password after failed login attempts functionality of the PayLATER datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paylater
${CUSTOMER_DETAILS}         customer_details
${RESET_DETAILS}            reset_details

*** Test Cases ***
Validate Reset Password After Failed Login Attempts
    [Documentation] Test case for validating that the customer is able to reset password after failed login attempts functionality of the PayLATER datadriver
    Launch PayLater Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Failed Logins
    Initiate Password Reset ${RESET_DETAILS}
    Validate Password Reset Successful",This test case checks the validation for resetting password after failed login attempts functionality of the PayLATER datadriver.,Validate Password Reset After Failed Login Attempts
Generate a robot framework test case for testing to Validate Shopping Cart Applies Coupons Correctly in the OnlineStore system.,"*** Settings ***
Documentation          Test cases for validating that the shopping cart applies coupons correctly in the OnlineStore system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/online-store
${USER_DETAILS}             user_details
${COUPON_CODE}              coupon_code
${EXPECTED_DISCOUNT}        expected_discount

*** Test Cases ***
Validate Shopping Cart Applies Coupons Correctly
    [Documentation] Test case for validating that the shopping cart applies coupons correctly in the OnlineStore system
    Launch Online Store Application ${URL}
    Login As User ${USER_DETAILS}
    Add Items To Shopping Cart
    Apply Coupon Code ${COUPON_CODE}
    Validate Discount Applied ${EXPECTED_DISCOUNT}",This test case checks the validation for applying and calculating discounts using coupons in the shopping cart functionality of the OnlineStore system.,Validate Coupon Application and Discount Calculation in Shopping Cart
Generate a robot framework test case for testing to Validate User Is Able To Register With Valid Credentials functionality of the RegisterNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to register with valid credentials functionality of the RegisterNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/registernow
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Registration With Valid Credentials
    [Documentation] Test case for validating that the user is able to register with valid credentials functionality of the RegisterNow datadriver
    Launch RegisterNow Application ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Registration Form
    Validate Registration Success Message",This test case checks the validation for user registration with valid credentials functionality of the RegisterNow datadriver.,Validate User Registration With Valid Credentials
Generate a robot framework test case for testing to Validate User Registration With Valid Credentials functionality of the MobileApp datadriver.,"*** Settings ***
Documentation          Test cases for validating the user registration with valid credentials functionality of the MobileApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mobileapp
${USER_REGISTRATION_DETAILS}    user_registration_details

*** Test Cases ***
Validate User Registration With Valid Credentials
    [Documentation] Test case for validating the user registration with valid credentials functionality of the MobileApp datadriver
    Launch MobileApp Application ${URL}
    Enter User Registration Details ${USER_REGISTRATION_DETAILS}
    Submit Registration Form
    Validate Successful Registration Message",This test case checks the validation for user registration with valid credentials functionality of the MobileApp datadriver.,Validate User Registration With Valid Credentials
Generate a robot framework test case for testing the validation to ensure Customer Is Unable To Proceed With Payment Without Providing CVV Number when using a credit card functionality.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to proceed with payment without providing CVV number when using a credit card functionality
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${CREDIT_CARD_DETAILS}      credit_card_details

*** Test Cases ***
Validate Payment Without CVV
    [Documentation] Test case for validating that the customer is unable to proceed with payment without providing CVV number when using a credit card functionality
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Credit Card Details Without CVV ${CREDIT_CARD_DETAILS}
    Attempt Payment Without CVV
    Validate Payment Failure",This test case checks the validation that prevents customers from proceeding with payment if they haven't provided the CVV number when using a credit card functionality.,Validate Customer Is Unable To Proceed With Payment Without Providing CVV Number
Generate a robot framework test case for testing to Validate Customer Is Able To Upload Documents For Invoice functionality of the InvoiceManager datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to upload documents for invoice functionality of the InvoiceManager datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/invoicemanager
${CUSTOMER_DETAILS}    customer_details
${INVOICE_ID}          invoice123
${DOCUMENT_PATH}       /path/to/document.pdf

*** Test Cases ***
Validate Customer Is Able To Upload Documents For Invoice
    [Documentation] Test case for validating that the customer is able to upload documents for invoice functionality of the InvoiceManager datadriver
    Launch InvoiceManager Application ${URL}
    Login As Customer ${CUSTOMER_DETAILS}
    Navigate To Invoice ${INVOICE_ID}
    Upload Document ${DOCUMENT_PATH}
    Validate Document Uploaded Successfully",This test case checks the validation for being able to upload documents for an invoice functionality of the InvoiceManager datadriver.,Validate Customer Is Able To Upload Documents For Invoice
Generate a Robot Framework test case for testing to Validate Customer Is Able To Apply Discount Coupon functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to apply discount coupon functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DISCOUNT_COUPON}          discount_coupon

*** Test Cases ***
Validate Customer Is Able To Apply Discount Coupon
    [Documentation] Test case for validating that the customer is able to apply discount coupon functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Apply Discount Coupon ${DISCOUNT_COUPON}
    Validate Discount Applied",This test case checks the validation for applying discount coupon functionality of the PayNOW datadriver.,Validate Customer Is Able To Apply Discount Coupon
Generate a robot framework test case for testing the ability to filter transactions based on payment type for customers on the ECommerce portal.,"*** Settings ***
Documentation    Test cases for testing the ability to filter transactions based on payment type for customers on the ECommerce portal
Library          SeleniumLibrary

*** Variables ***
${URL}               https://example.com/ecommerce
${CUSTOMER_DETAILS}  customer_details
${PAYMENT_TYPE}      CreditCard

*** Test Cases ***
Filter Transactions Based On Payment Type
    [Documentation]    Test case for testing the ability to filter transactions based on payment type for customers on the ECommerce portal
    Launch ECommerce Portal    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Transactions Page
    Select Payment Type Filter    ${PAYMENT_TYPE}
    Validate Transactions Filtered By Payment Type","This test case verifies the ability to filter transactions based on various payment types (Credit Card, Debit Card, ACH, etc.) for customers using the ECommerce portal.",Validate Transaction Filtering By Payment Type For ECommerce Portal
Generate a robot framework test case for testing to Validate Customer Can Track Refund Status In Their Account functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer can track refund status in their account functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                    https://example.com/paynow
${CUSTOMER_DETAILS}       customer_details
${REFUND_ID}              refund_id

*** Test Cases ***
Validate Customer Can Track Refund Status In Their Account
    [Documentation]    Test case for validating that the customer can track refund status in their account functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details       ${CUSTOMER_DETAILS}
    Navigate To Refund Status Page
    Enter Refund ID              ${REFUND_ID}
    Validate Refund Status",This test case checks the validation for tracking refund status in the customer account functionality of the PayNOW datadriver.,Validate Customer Can Track Refund Status In Their Account
Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method For A Recurring Payment functionality of the DirectPAY datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update payment method for a recurring payment functionality of the DirectPAY datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/directpay
${CUSTOMER_DETAILS}         customer_details
${NEW_PAYMENT_METHOD}       new_payment_method

*** Test Cases ***
Validate Update Recurring Payment Method
    [Documentation] Test case for validating that the customer is able to update payment method for a recurring payment functionality of the DirectPAY datadriver
    Launch DirectPAY Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Recurring Payments Section
    Update Payment Method ${NEW_PAYMENT_METHOD}
    Validate Payment Method Updated",This test case checks the validation for updating the payment method for a recurring payment functionality of the DirectPAY datadriver.,Validate Update Payment Method For Recurring Payment
Generate a robot framework test case for testing to Validate User Is Able To Create And Save Recurring Payments functionality of the PayTECH datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to create and save recurring payments functionality of the PayTECH datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paytech
${USER_DETAILS}             user_details
${RECURRING_PAYMENT_DETAILS} recurring_payment_details

*** Test Cases ***
Validate User Is Able To Create And Save Recurring Payments
    [Documentation] Test case for validating that the user is able to create and save recurring payments functionality of the PayTECH datadriver
    Launch PayTech Application ${URL}
    Enter User Details ${USER_DETAILS}
    Create Recurring Payment ${RECURRING_PAYMENT_DETAILS}
    Save Recurring Payment
    Validate Recurring Payment Saved",This test case checks the validation for creating and saving recurring payments functionality of the PayTECH datadriver.,Validate Create And Save Recurring Payments
Generate a robot framework test case for testing to Validate Customer Is Able To Export Transaction Report As CSV Functionality of the ExportMagic datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to export transaction report as CSV functionality of the ExportMagic datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/exportmagic
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Export Transaction Report As CSV
    [Documentation] Test case for validating that the customer is able to export transaction report as CSV functionality of the ExportMagic datadriver
    Launch ExportMagic Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Reports Section
    Select Transaction Report
    Export Report As CSV
    Validate CSV File Downloaded Successfully",This test case checks the validation for exporting transaction reports as CSV functionality of the ExportMagic datadriver.,Validate Export Transaction Report as CSV
Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the SecurePay service.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password functionality of the SecurePay service
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securepay
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Is Able To Reset Password
    [Documentation] Test case for validating that the user is able to reset password functionality of the SecurePay service
    Launch SecurePay Application ${URL}
    Navigate To Reset Password Page
    Enter User Details ${USER_DETAILS}
    Submit Reset Password Request
    Validate Password Reset Email Sent",This test case checks the validation for resetting the user password functionality of the SecurePay service.,Validate User Is Able To Reset Password
Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${USER_DETAILS}             user_details
${RESET_PASSWORD_DETAILS}   reset_password_details

*** Test Cases ***
Validate User Is Able To Reset Password
    [Documentation] Test case for validating that the user is able to reset password functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter User Details ${USER_DETAILS}
    Initiate Password Reset
    Enter Reset Password Details ${RESET_PASSWORD_DETAILS}
    Validate Password Reset Success",This test case checks the validation for resetting user password functionality of the PayNOW datadriver.,Validate User Password Reset
Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the Account Management system.,"*** Settings ***
Documentation          Test case for validating that the user is able to reset password functionality of the Account Management system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/account
${USER_DETAILS}             user_details
${NEW_PASSWORD}             new_password
${CONFIRMATION_MESSAGE}     Your password has been successfully reset

*** Test Cases ***
Validate User Is Able To Reset Password
    [Documentation] Test case for validating that the user is able to reset password functionality of the Account Management system
    Launch Account Management Application ${URL}
    Enter User Details ${USER_DETAILS}
    Click On Reset Password Link
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit Password Reset
    Validate Password Reset Successful ${CONFIRMATION_MESSAGE}",This test case checks the validation for being able to reset the password through the Account Management system.,Validate Password Reset Functionality
Generate a robot framework test case for testing to Validate Customer Can Update Contact Information functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can update contact information functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_CONTACT_INFO}         new_contact_info

*** Test Cases ***
Validate Customer Can Update Contact Information
    [Documentation] Test case for validating that the customer can update contact information functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Contact Information Section
    Update Contact Information ${NEW_CONTACT_INFO}
    Save Changes
    Validate Updated Contact Information","This test case checks the validation for updating the contact information (email, phone number, address) functionality of the PayNOW datadriver.",Validate Update Contact Information
Generate a Robot Framework test case for testing to Validate User Is Unable To Delete Account With An Outstanding Balance functionality of the FinanceApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to delete account with an outstanding balance functionality of the FinanceApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/financeapp
${USER_DETAILS}             user_details
${OUTSTANDING_BALANCE}      outstanding_balance

*** Test Cases ***
Validate Unable To Delete Account With Outstanding Balance
    [Documentation] Test case for validating that the user is unable to delete account with an outstanding balance functionality of the FinanceApp datadriver
    Launch FinanceApp Application ${URL}
    Enter User Details ${USER_DETAILS}
    Check Outstanding Balance ${OUTSTANDING_BALANCE}
    Attempt Delete Account
    Validate Deletion Prevented",This test case checks the validation for being unable to delete an account that has an outstanding balance functionality of the FinanceApp datadriver.,Validate User Unable To Delete Account With Outstanding Balance
Generate a robot framework test case for testing to Validate User Authentication With Two-Factor Authentication functionality of the SecureAuthApp datadriver.,"*** Settings ***
Documentation          Test cases for validating user authentication with two-factor authentication functionality of the SecureAuthApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/secureauth
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Authentication With Two-Factor Authentication
    [Documentation] Test case for validating user authentication with two-factor authentication functionality of the SecureAuthApp datadriver
    Launch SecureAuthApp ${URL}
    Enter User Credentials ${USER_DETAILS}
    Trigger Two-Factor Authentication
    Enter Two-Factor Authentication Code
    Validate Successful Authentication",This test case checks the validation for user authentication with two-factor authentication (2FA) functionality of the SecureAuthApp datadriver.,Validate User Authentication With Two-Factor Authentication
Generate a robot framework test case for testing to validate Customer Is Unable To Schedule Payment For Invoices Older Than One Year functionality of the PayRepay application.,"*** Settings ***
Documentation          Test cases for validating that a customer is unable to schedule payment for invoices older than one year functionality of the PayRepay application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payrepay
${CUSTOMER_DETAILS}         customer_details
${OLDER_INVOICE_DETAILS}    older_invoice_details

*** Test Cases ***
Validate Cannot Schedule Payment For Older Invoices
    [Documentation] Test case for validating that a customer is unable to schedule payment for invoices older than one year functionality of the PayRepay application
    Launch PayRepay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Schedule Payment For Older Invoices ${OLDER_INVOICE_DETAILS}
    Validate Scheduling Payment For Older Invoices Unsuccessful",This test case checks the validation for being unable to schedule payments for invoices that are older than one year in the PayRepay application.,Validate Unable To Schedule Payment For Invoices Older Than One Year
Generate a robot framework test case for testing to Validate Customer Is Able To Update Contact Information functionality of the AccountManager datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to update contact information functionality of the AccountManager datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                        https://example.com/accountmanager
${CUSTOMER_DETAILS}           customer_details
${CONTACT_INFO}               contact_info

*** Test Cases ***
Validate Update Contact Information
    [Documentation]    Test case for validating that the customer is able to update contact information functionality of the AccountManager datadriver
    Launch AccountManager Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Contact Information Page
    Update Contact Information    ${CONTACT_INFO}
    Validate Contact Information Updated",This test case checks the validation for updating contact information functionality of the AccountManager datadriver.,Validate Customer Update Contact Information
Generate a robot framework test case for testing to Validate Customer Is Able To Update Existing Payment Method functionality of the BillNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update existing payment method functionality of the BillNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billnow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_METHOD_DETAILS}   payment_method_details

*** Test Cases ***
Validate Update Existing Payment Method
    [Documentation] Test case for validating that the customer is able to update existing payment method functionality of the BillNow datadriver
    Launch BillNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Payment Method ${PAYMENT_METHOD_DETAILS}
    Validate Payment Method Updated",This test case checks the validation for updating an existing payment method functionality of the BillNow datadriver.,Validate Update Existing Payment Method
Generate a robot framework test case for validating the functionality that ensures a Customer Can Update Their Profile Information in the Account Management section of the FoodNow application.,"*** Settings ***
Documentation          Test case for validating the functionality that ensures a customer can update their profile information in the Account Management section of the FoodNow application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/foodnow
${CUSTOMER_ACCOUNT}         customer_account
${NEW_PROFILE_DETAILS}      new_profile_details

*** Test Cases ***
Validate Customer Can Update Profile Information
    [Documentation] Test case for validating the functionality that ensures a customer can update their profile information in the Account Management section of the FoodNow application
    Launch FoodNow Application ${URL}
    Enter Customer Account Details ${CUSTOMER_ACCOUNT}
    Navigate To Account Management Section
    Update Profile Information ${NEW_PROFILE_DETAILS}
    Validate Profile Information Updated","This test case validates if a customer is able to update their profile information such as name, email, and address details within the account management section of the FoodNow application.",Validate Customer Can Update Profile Information In Account Management Section
Generate a robot framework test case for testing to Validate User Can Reset Password Using Email functionality of the UserManagementSystem.,"*** Settings ***
Documentation          Test cases for validating that the user can reset password using email functionality of the UserManagementSystem
Library                SeleniumLibrary

*** Variables ***
${URL}                 https://example.com/usermanagement
${USER_EMAIL}          user@example.com

*** Test Cases ***
Validate User Can Reset Password Using Email
    [Documentation] Test case for validating that the user can reset password using email functionality of the UserManagementSystem
    Launch User Management Application ${URL}
    Navigate To Forgot Password Page
    Enter User Email ${USER_EMAIL}
    Submit Password Reset Request
    Validate Password Reset Email Sent",This test case checks the validation for resetting password using email functionality of the UserManagementSystem.,Validate Reset Password Using Email
Generate a robot framework test case for testing to validate user is able to reset password functionality of the PayFast datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password functionality of the PayFast datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payfast
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Can Reset Password
    [Documentation] Test case for validating that the user is able to reset password functionality of the PayFast datadriver
    Launch PayFast Application ${URL}
    Click On Forgot Password Link
    Enter User Details ${USER_DETAILS}
    Submit Reset Password Request
    Validate Password Reset Email Sent",This test case checks the validation for resetting the password functionality of the PayFast datadriver.,Validate Password Reset Functionality
Generate a robot framework test case for testing to Validate Customer Can Create Recurring Payment For Weekly Invoices functionality of the BillNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can create recurring payment for weekly invoices functionality of the BillNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billnow
${CUSTOMER_DETAILS}         customer_details
${RECURRING_PAYMENT_DETAILS} recurring_payment_details

*** Test Cases ***
Validate Create Recurring Payment For Weekly Invoices
    [Documentation] Test case for validating that the customer can create recurring payment for weekly invoices functionality of the BillNow datadriver
    Launch BillNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Recurring Payments Section
    Enter Recurring Payment Details ${RECURRING_PAYMENT_DETAILS}
    Set Recurrence To Weekly
    Save Recurring Payment
    Validate Recurring Payment Created",This test case checks the validation for creating recurring payments for weekly invoices functionality of the BillNow datadriver.,Validate Create Recurring Payment For Weekly Invoices
Generate a robot framework test case for testing the functionality of validating successful login and viewing account balance in the Bank Transactions system.,"*** Settings ***
Documentation          Test cases for validating successful login and viewing account balance functionality in the Bank Transactions system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/banktransactions
${USER_CREDENTIALS}         user_credentials

*** Test Cases ***
Validate Successful Login And View Account Balance
    [Documentation] Test case for validating successful login and viewing account balance functionality in the Bank Transactions system
    Launch Bank Transactions Application ${URL}
    Enter User Credentials ${USER_CREDENTIALS}
    Validate Successful Login
    View Account Balance
    Validate Account Balance Displayed",This test case checks the validation for a successful login followed by viewing the account balance functionality in the Bank Transactions system.,Validate Successful Login And View Account Balance 
Generate a robot framework test case for testing to Validate Custom Discount Offer During Checkout functionality of the QuickPay system.,"*** Settings ***
Documentation          Test cases for validating the custom discount offer during checkout functionality of the QuickPay system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${CUSTOMER_DETAILS}         customer_details
${CHECKOUT_DETAILS}         checkout_details
${DISCOUNT_CODE}            discount_code

*** Test Cases ***
Validate Custom Discount Offer During Checkout
    [Documentation] Test case for validating the custom discount offer during checkout functionality of the QuickPay system
    Launch QuickPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Proceed to Checkout ${CHECKOUT_DETAILS}
    Apply Discount Code ${DISCOUNT_CODE}
    Validate Discount Applied During Checkout",This test case checks the validation for applying a custom discount offer during the checkout process functionality of the QuickPay system.,Validate Custom Discount Offer During Checkout
Generate a robot framework test case for testing to Validate Customer Can Successfully Split Payment Across Multiple Invoices functionality of the PaymentSystem datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can successfully split payment across multiple invoices functionality of the PaymentSystem datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentsystem
${CUSTOMER_DETAILS}         customer_details
${INVOICE_LIST}             invoice_list
${SPLIT_PAYMENT_DETAILS}    split_payment_details

*** Test Cases ***
Validate Customer Can Split Payment Across Multiple Invoices
    [Documentation] Test case for validating that the customer can successfully split payment across multiple invoices functionality of the PaymentSystem datadriver
    Launch PaymentSystem Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select Multiple Invoices ${INVOICE_LIST}
    Enter Split Payment Details ${SPLIT_PAYMENT_DETAILS}
    Confirm Split Payment
    Validate Split Payment Successful",This test case checks the validation for the ability to split a payment across multiple invoices functionality of the PaymentSystem datadriver.,Validate Split Payment Across Multiple Invoices
Generate a robot framework test case for testing the validation of users being unable to register a new account with an already used email address functionality.,"*** Settings ***
Documentation          Test cases for validating that users are unable to register a new account with an already used email address
Library                SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/register
${USED_EMAIL}           used_email@example.com
${USER_DETAILS}         user_details

*** Test Cases ***
Validate Unable To Register With Used Email Address
    [Documentation] Test case for validating that users are unable to register a new account with an already used email address
    Launch Registration Page    ${URL}
    Enter User Details    ${USER_DETAILS}
    Enter Email Address    ${USED_EMAIL}
    Submit Registration Form
    Validate Error Message Displayed For Used Email",This test case checks the validation for users being unable to register a new account with an email address that is already used by another account.,Validate Unable To Register With Already Used Email Address
Generate a robot framework test case for testing to Validate Non-Integrated Customer Is Able To View Available Balance Before Making Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation     Test cases for validating that a non-integrated customer is able to view available balance before making payment functionality of the PayNOW datadriver
Library           SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details

*** Test Cases ***
Validate Non-Integrated Customer Can View Available Balance Before Payment
    [Documentation] Test case for validating that a non-integrated customer is able to view available balance before making payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Balance Page
    Validate Available Balance Is Displayed",This test case checks the validation for viewing available balance before making payment functionality of the PayNOW datadriver by a non-integrated customer.,Validate Non-Integrated Customer View Available Balance Before Payment
Generate a robot framework test case for testing to validate customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${INVALID_EMAIL}            invalid_email@example.com

*** Test Cases ***
Validate Unable To Reset Password With Invalid Email ID
    [Documentation]    Test case for validating that the customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Navigate To Reset Password Screen
    Enter Email ID    ${INVALID_EMAIL}
    Attempt To Reset Password
    Validate Error Message For Invalid Email",This test case checks the validation for being unable to reset password with an invalid email ID functionality of the PayNOW datadriver.,Validate Unable To Reset Password With Invalid Email ID
Generate a robot framework test case for testing to validate the functionality of user registration with an email confirmation on the MyApp application.,"*** Settings ***
Documentation          Test case for validating the functionality of user registration with an email confirmation on the MyApp application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myapp
${USER_REGISTRATION_DETAILS} user_registration_details
${EMAIL}                    user_email

*** Test Cases ***
Validate User Registration With Email Confirmation
    [Documentation] Test case for validating the functionality of user registration with an email confirmation on the MyApp application
    Launch MyApp Application ${URL}
    Enter User Registration Details ${USER_REGISTRATION_DETAILS}
    Submit Registration Form
    Check Email For Confirmation Link ${EMAIL}
    Confirm Email Registration Through Link","This test case checks the validation for the user registration process, including email confirmation, on the MyApp application.",Validate User Registration With Email Confirmation
Generate a robot framework test case for testing to Validate User Able To Reset Password Via Email functionality of the SecureBank platform.,"*** Settings ***
Documentation          Test case for validating that the user is able to reset password via email functionality of the SecureBank platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securebank
${USER_DETAILS}             user_details
${EMAIL}                    email@example.com

*** Test Cases ***
Validate User Able To Reset Password Via Email
    [Documentation] Test case for validating that the user is able to reset password via email functionality of the SecureBank platform
    Launch SecureBank Application ${URL}
    Enter User Details ${USER_DETAILS}
    Send Password Reset Link ${EMAIL}
    Validate Password Reset Email Sent",This test case checks the validation for resetting the user password via email functionality of the SecureBank platform.,Validate User Able To Reset Password Via Email
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With An Expired Credit Card functionality of the SecurePay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process payment with an expired credit card functionality of the SecurePay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                    https://example.com/securepay
${CUSTOMER_DETAILS}       customer_details
${EXPIRED_CREDIT_CARD}    expired_credit_card

*** Test Cases ***
Validate Unable To Process Payment With Expired Credit Card
    [Documentation] Test case for validating that the customer is unable to process payment with an expired credit card functionality of the SecurePay datadriver
    Launch SecurePay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Payment Method ${EXPIRED_CREDIT_CARD}
    Attempt To Process Payment
    Validate Payment Declined Due To Expired Card",This test case checks the validation for being unable to process payment with an expired credit card functionality of the SecurePay datadriver.,Validate Unable To Process Payment With Expired Credit Card
Generate a robot framework test case for testing the functionality that validates if the customer is able to update billing information after a payment has been processed in the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing information after a payment has been processed in the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_INFO}         new_billing_info
${INVOICE_DETAILS}          invoice_details

*** Test Cases ***
Validate Update Billing Information After Payment
    [Documentation] Test case for validating that the customer is able to update billing information after a payment has been processed in the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Process Payment ${INVOICE_DETAILS}
    Update Billing Information ${NEW_BILLING_INFO}
    Validate Billing Information Updated",This test case checks the validation for updating billing information after a payment has been processed in the PayNOW datadriver.,Validate Update Billing Information After Payment
Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Weekly Sales Reports functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to generate weekly sales reports functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${MERCHANT_DETAILS}          merchant_details
${START_DATE}                start_date
${END_DATE}                  end_date

*** Test Cases ***
Validate Generate Weekly Sales Reports
    [Documentation]    Test case for validating that the merchant is able to generate weekly sales reports functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Merchant Details    ${MERCHANT_DETAILS}
    Select Start Date    ${START_DATE}
    Select End Date    ${END_DATE}
    Generate Sales Report
    Validate Sales Report Generated",This test case checks the validation for generating weekly sales reports functionality of the PayNOW datadriver.,Validate Generate Weekly Sales Reports
Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout functionality of the BillingNow module.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to apply discount code during checkout functionality of the BillingNow module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billingnow
${CUSTOMER_DETAILS}         customer_details
${DISCOUNT_CODE}            DISCOUNT123

*** Test Cases ***
Validate Apply Discount Code During Checkout
    [Documentation] Test case for validating that the customer is able to apply discount code during checkout functionality of the BillingNow module
    Launch BillingNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Proceed To Checkout
    Apply Discount Code ${DISCOUNT_CODE}
    Validate Discount Applied",This test case checks the validation for applying a discount code during the checkout process functionality of the BillingNow module.,Validate Apply Discount Code During Checkout
Generate a robot framework test case for testing the functionality to ensure customers can update their email address in Digipay application.,"*** Settings ***
Documentation    Test cases for testing the functionality to ensure customers can update their email address in Digipay application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/digipay
${BROWSER}       chrome
${CUSTOMER_DETAILS}  customer_details
${NEW_EMAIL}     new_email@example.com
${SUCCESS_MESSAGE}  ""Your email has been updated successfully.""

*** Test Cases ***
Validate Customer Can Update Email Address In Digipay
    [Documentation]    Test case for testing the functionality to ensure customers can update their email address in Digipay application
    Launch Browser    ${BROWSER}    ${URL}
    Enter Customer Login Details    ${CUSTOMER_DETAILS}
    Navigate To Account Settings
    Enter New Email Address    ${NEW_EMAIL}
    Submit Email Update
    Validate Email Update Success Message    ${SUCCESS_MESSAGE}
    Close Browser",This test case checks the validation to ensure customers can update their registered email address in the Digipay application.,Validate Email Address Update Functionality In Digipay
Generate a robot framework test case for testing to Validate Customer Is Able To Create A New User Account Functionality of the MyApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to create a new user account functionality of the MyApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myapp
${NEW_USER_DETAILS}         new_user_details

*** Test Cases ***
Validate Create New User Account
    [Documentation] Test case for validating that the customer is able to create a new user account functionality of the MyApp datadriver
    Launch MyApp Application ${URL}
    Enter New User Details ${NEW_USER_DETAILS}
    Submit New User Account Form
    Validate New User Account Created",This test case checks the validation for creating a new user account functionality of the MyApp datadriver.,Validate New User Account Creation
Generate a robot framework test case for testing to Validate Customer Receives Email Notification After Successful Payment Completion functionality of the PayFORWARD datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer receives email notification after successful payment completion functionality of the PayFORWARD datadriver
Library                SeleniumLibrary
Library                StringLibrary
Library                OperatingSystem

*** Variables ***
${URL}                      https://example.com/payforward
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details
${EMAIL_SUBJECT}            Payment Successful

*** Test Cases ***
Validate Email Notification After Successful Payment Completion
    [Documentation] Test case for validating that the customer receives email notification after successful payment completion functionality of the PayFORWARD datadriver
    Launch PayForward Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Complete Payment ${PAYMENT_DETAILS}
    Verify Email Notification Received ${EMAIL_SUBJECT}",This test case verifies that the customer receives an email notification after successfully completing a payment using the PayFORWARD datadriver.,Validate Customer Receives Email Notification After Successful Payment
Generate a robot framework test case for testing to Validate User Is Able To Update Account Information functionality of the BankPro datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to update account information functionality of the BankPro datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/bankpro
${USER_DETAILS}             user_details
${UPDATED_ACCOUNT_INFO}     updated_account_info

*** Test Cases ***
Validate User Is Able To Update Account Information
    [Documentation] Test case for validating that the user is able to update account information functionality of the BankPro datadriver
    Launch BankPro Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Account Information Page
    Update Account Information ${UPDATED_ACCOUNT_INFO}
    Validate Account Information Updated",This test case checks the validation for updating account information functionality of the BankPro datadriver.,Validate User Can Update Account Information
Generate a robot framework test case for testing to Validate User Is Able To Reset Password Using Forgot Password Functionality in the MyBank Application.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password using forgot password functionality in the MyBank application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mybank
${USER_EMAIL}               user@example.com
${NEW_PASSWORD}             NewPassword1234

*** Test Cases ***
Validate Reset Password Using Forgot Password Functionality
    [Documentation] Test case for validating that the user is able to reset password using forgot password functionality in the MyBank application
    Launch MyBank Application ${URL}
    Click Element    xpath=//a[text()='Forgot Password?']
    Input Text       id=email     ${USER_EMAIL}
    Click Element    xpath=//button[text()='Reset Password']
    Wait Until Page Contains  ""A password reset link has been sent to your email""
    Open Email And Click Reset Password Link
    Input Text       id=new_password     ${NEW_PASSWORD}
    Input Text       id=confirm_password ${NEW_PASSWORD}
    Click Element    xpath=//button[text()='Submit']
    Wait Until Page Contains  ""Your password has been successfully reset""",This test case checks the validation for resetting the password using the forgot password functionality in the MyBank application.,Validate Reset Password Using Forgot Password Functionality
Generate a robot framework test case for testing to Ensure User Account Lockout After Multiple Failed Login Attempts functionality of the SecurePay system.,"*** Settings ***
Documentation    Test cases for ensuring user account lockout after multiple failed login attempts functionality of the SecurePay system
Library          SeleniumLibrary

*** Variables ***
${URL}           https://securepay.com/login
${USERNAME}      testuser
${PASSWORD}      wrongpassword
${LOCKOUT_MSG}   Your account has been locked after multiple failed login attempts.

*** Test Cases ***
Ensure User Account Lockout After Multiple Failed Login Attempts
    [Documentation]    Test case for ensuring user account lockout after multiple failed login attempts functionality of the SecurePay system
    [Setup]    Open Browser    ${URL}    chrome
    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}
    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}
    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}
    Validate Account Lockout Message ${LOCKOUT_MSG}
    [Teardown]    Close Browser

Attempt Failed Login Attempts
    [Arguments]    ${username}    ${password}
    Input Text    id=username    ${username}
    Input Text    id=password    ${password}
    Click Button  id=login-button
    Sleep         1s

Validate Account Lockout Message
    [Arguments]  ${expected_message}
    Element Should Contain  id=lockout-message  ${expected_message}",This test case validates the functionality to lock a user account after multiple failed login attempts on the SecurePay system.,Validate User Account Lockout After Failed Login Attempts
Generate a robot framework test case for testing to Validate User Is Able To Reset Password From Forgot Password Link functionality of the MyAccount portal.,"*** Settings ***
Documentation    Test cases for validating that user is able to reset password from forgot password link functionality of the MyAccount portal
Library          SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/myaccount
${USERNAME}             test_user
${EMAIL}                test_user@example.com
${NEW_PASSWORD}         new_password_123

*** Test Cases ***
Validate Reset Password From Forgot Password Link
    [Documentation]    Test case for validating that user is able to reset password from forgot password link functionality of the MyAccount portal
    Launch MyAccount Portal    ${URL}
    Click Forgot Password Link
    Enter Username And Email    ${USERNAME}    ${EMAIL}
    Submit Forgot Password Form
    Check Email For Reset Link
    Navigate To Reset Link
    Enter New Password And Confirm ${NEW_PASSWORD}
    Submit New Password Form
    Validate Password Reset Success Message",This test case checks the validation for the user's ability to reset their password using the Forgot Password link in the MyAccount portal.,Validate User Can Reset Password From Forgot Password Link
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the EcomPAY datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the EcomPAY datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ecompay
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Can Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the EcomPAY datadriver
    Launch EcomPAY Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Information
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case checks the validation for updating billing address functionality of the EcomPAY datadriver.,Validate Update Billing Address
Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout Workflow of the ShopEasy datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to apply discount code during checkout workflow of the ShopEasy datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopeasy
${CUSTOMER_DETAILS}         customer_details
${DISCOUNT_CODE}            discount_code
${DISCOUNT_APPLIED_MESSAGE} discount_applied_message

*** Test Cases ***
Validate Customer Is Able To Apply Discount Code During Checkout
    [Documentation] Test case for validating that the customer is able to apply discount code during checkout workflow of the ShopEasy datadriver
    Launch ShopEasy Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Proceed To Checkout
    Enter Discount Code ${DISCOUNT_CODE}
    Apply Discount Code
    Validate Discount Applied ${DISCOUNT_APPLIED_MESSAGE}",This test case checks the validation for applying a discount code during the checkout workflow functionality of the ShopEasy datadriver.,Validate Customer Is Able To Apply Discount Code During Checkout
Generate a robot framework test case for testing to validate customer is unable to view transaction summary without required permissions functionality of the ShopEasy application.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to view transaction summary without required permissions functionality of the ShopEasy application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopeasy
${CUSTOMER_DETAILS}         customer_details
${TRANSACTION_SUMMARY}      transaction_summary

*** Test Cases ***
Validate Unable To View Transaction Summary Without Required Permissions
    [Documentation] Test case for validating that the customer is unable to view transaction summary without required permissions functionality of the ShopEasy application
    Launch ShopEasy Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Access Transaction Summary ${TRANSACTION_SUMMARY}
    Validate Permission Denied Message Displayed",This test case checks the validation for restricting access to transaction summary for customers without required permissions functionality of the ShopEasy application.,Validate Customer Unable To View Transaction Summary Without Permissions
Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule Recurring Payments On Holidays functionality of the EasyPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to schedule recurring payments on holidays functionality of the EasyPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/easypay
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_SCHEDULE}         payment_schedule

*** Test Cases ***
Validate Unable To Schedule Recurring Payments On Holidays
    [Documentation] Test case for validating that the customer is unable to schedule recurring payments on holidays functionality of the EasyPay datadriver
    Launch EasyPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Schedule Recurring Payments On Holidays ${PAYMENT_SCHEDULE}
    Validate Unable To Schedule Payments On Holidays",This test case checks the validation for being unable to schedule recurring payments on holidays functionality of the EasyPay datadriver.,Validate Unable To Schedule Recurring Payments On Holidays
Generate a robot framework test case for testing to Validate Merchant Is Able To Set Up Recurring Payments functionality of the BillPay datadriver.,"*** Settings ***
Documentation    Test cases for validating that the merchant is able to set up recurring payments functionality of the BillPay datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billpay
${MERCHANT_DETAILS}         merchant_details
${RECURRING_PAYMENT_DETAILS} recurring_payment_details

*** Test Cases ***
Validate Merchant Is Able To Set Up Recurring Payments
    [Documentation] Test case for validating that the merchant is able to set up recurring payments functionality of the BillPay datadriver
    Launch BillPay Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Set Up Recurring Payments ${RECURRING_PAYMENT_DETAILS}
    Validate Recurring Payments Setup",This test case checks the validation for setting up recurring payments functionality of the BillPay datadriver.,Validate Merchant Is Able To Set Up Recurring Payments
Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout functionality of the ShopEasy datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to apply discount code during checkout functionality of the ShopEasy datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopeasy
${VALID_CREDENTIALS}        valid_credentials
${PRODUCT_DETAILS}          product_details
${DISCOUNT_CODE}            discount_code

*** Test Cases ***
Validate Apply Discount Code During Checkout
    [Documentation]    Test case for validating that the customer is able to apply discount code during checkout functionality of the ShopEasy datadriver
    Launch ShopEasy Application    ${URL}
    Login With Valid Credentials    ${VALID_CREDENTIALS}
    Add Product To Cart    ${PRODUCT_DETAILS}
    Proceed To Checkout
    Apply Discount Code    ${DISCOUNT_CODE}
    Validate Discount Applied
    Complete Purchase
    Validate Order Summary",This test case checks the validation for applying a discount code during the checkout process functionality of the ShopEasy datadriver.,Validate Apply Discount Code During Checkout
Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule A Recurring Payment With An Expired Card functionality of the QuickPay system.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to schedule a recurring payment with an expired card functionality of the QuickPay system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${CUSTOMER_DETAILS}         customer_details
${EXPIRED_CARD_DETAILS}     expired_card_details

*** Test Cases ***
Validate Unable To Schedule Recurring Payment With Expired Card
    [Documentation] Test case for validating that the customer is unable to schedule a recurring payment with an expired card functionality of the QuickPay system
    Launch QuickPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Payment Details ${EXPIRED_CARD_DETAILS}
    Attempt To Schedule Recurring Payment
    Validate Recurring Payment Scheduling Failed",This test case checks the validation for being unable to schedule a recurring payment with an expired card functionality of the QuickPay system.,Validate Unable To Schedule Recurring Payment With Expired Card
Generate a robot framework test case for testing to validate that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myapp
${INVALID_EMAIL}            invalid_email@example
${ERROR_MESSAGE}            ""Invalid email address.""

*** Test Cases ***
Validate Error Message For Invalid Email Address In Signup Form
    [Documentation] Test case for validating that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver
    Launch Application   ${URL}
    Navigate To Signup Form
    Enter Invalid Email Address   ${INVALID_EMAIL}
    Submit Signup Form
    Validate Error Message Displayed   ${ERROR_MESSAGE}",This test case checks the validation for receiving an error message when a user enters an invalid email address in the Signup form functionality of the MyApp datadriver.,Validate Error Message For Invalid Email In Signup Form
Generate a robot framework test case for testing the validation of Secure Password Policy enforcement in the new user registration functionality of the SecureAuth platform.,"*** Settings ***
Documentation          Test cases for validating the secure password policy enforcement in the new user registration functionality of the SecureAuth platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/secureauth
${NEW_USER_DETAILS}         new_user_details

*** Test Cases ***
Validate Secure Password Policy Enforcement
    [Documentation] Test case for validating the secure password policy enforcement in the new user registration functionality of the SecureAuth platform
    Launch SecureAuth Application ${URL}
    Enter New User Details ${NEW_USER_DETAILS}
    Validate Password Policy Enforcement","This test case validates the enforcement of a secure password policy for new user registrations, ensuring the password meets criteria such as length, complexity, and the inclusion of special characters on the SecureAuth platform.",Validate Secure Password Policy Enforcement During New User Registration
Generate a robot framework test case for testing the validation of adding items to the shopping cart for the eShop application.,"*** Settings ***
Documentation    Test cases for validating the ability to add items to the shopping cart for the eShop application
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/eshop
${USER_CREDENTIALS}          user_credentials
${ITEM_DETAILS}              item_details

*** Test Cases ***
Validate Adding Items To Shopping Cart
    [Documentation]    Test case for validating the ability to add items to the shopping cart for the eShop application
    Launch eShop Application    ${URL}
    Login To User Account    ${USER_CREDENTIALS}
    Search For Item    ${ITEM_DETAILS}
    Add Item To Shopping Cart
    Validate Item Added To Shopping Cart",This test case verifies the functionality of adding items to the shopping cart in the eShop application.,Validate Adding Items To Shopping Cart
Generate a robot framework test case for testing to Validate Customer Is Able To View Payment Summary Page functionality of the InvoiceHub datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view payment summary page functionality of the InvoiceHub datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/invoicehub
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Is Able To View Payment Summary Page
    [Documentation] Test case for validating that the customer is able to view payment summary page functionality of the InvoiceHub datadriver
    Launch InvoiceHub Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Summary Page
    Validate Payment Summary Page Is Displayed",This test case checks validation for ensuring that the customer is able to view the payment summary page properly in the InvoiceHub datadriver.,Validate View Payment Summary Page
Generate a robot framework test case for testing to Validate Customer Can Create Subscription For Recurring Orders functionality of the ShopSmart datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can create a subscription for recurring orders functionality of the ShopSmart datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopsmart
${CUSTOMER_DETAILS}         customer_details
${SUBSCRIPTION_DETAILS}     subscription_details

*** Test Cases ***
Validate Create Subscription For Recurring Orders
    [Documentation] Test case for validating that the customer can create a subscription for recurring orders functionality of the ShopSmart datadriver
    Launch ShopSmart Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Create Subscription For Recurring Orders ${SUBSCRIPTION_DETAILS}
    Validate Subscription Created",This test case checks the validation for customer being able to create subscription for recurring orders functionality of the ShopSmart datadriver.,Validate Create Subscription For Recurring Orders
Generate a robot framework test case for testing to Validate Customer Is Able To Update Profile Information functionality of the ProfileManager system.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update profile information functionality of the ProfileManager system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/profilemanager
${CUSTOMER_DETAILS}         customer_details
${NEW_PROFILE_INFO}         new_profile_info

*** Test Cases ***
Validate Update Profile Information
    [Documentation] Test case for validating that the customer is able to update profile information functionality of the ProfileManager system
    Launch ProfileManager Application ${URL}
    Enter Customer Login Details ${CUSTOMER_DETAILS}
    Navigate To Profile Update Section
    Enter New Profile Information ${NEW_PROFILE_INFO}
    Save Updated Information
    Validate Profile Information Updated",This test case checks the validation for updating profile information functionality of the ProfileManager system.,Validate Customer Is Able To Update Profile Information
Generate a robot framework test case for testing the Validate Customer Cannot Add More Than Three Recipients To An Invoice functionality of the PayLater datadriver.,"*** Settings ***
Documentation    Test cases for testing the Validate Customer Cannot Add More Than Three Recipients To An Invoice functionality of the PayLater datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/paylater
${BROWSER}       chrome
${CUSTOMER_DETAILS} customer_details
${INVOICE_NUMBER} inv123

*** Test Cases ***
Validate Customer Cannot Add More Than Three Recipients To An Invoice
    [Documentation]    Test case for validating that a customer cannot add more than three recipients to an invoice in the PayLater datadriver
    Launch Browser    ${BROWSER}    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Invoices Page
    Select Invoice To Add Recipients    ${INVOICE_NUMBER}
    Attempt To Add Multiple Recipients
    Validate Maximum Number Of Recipients Warning Is Displayed",This test case checks the validation for ensuring a customer cannot add more than three recipients to an invoice functionality of the PayLater datadriver.,Validate Customer Cannot Add More Than Three Recipients To An Invoice
Generate a robot framework test case for testing to Validate Customer Is Unable To Add Bank Account Without Routing Number functionality of the OmniBank datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to add a bank account without a routing number functionality of the OmniBank datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/omnibank
${CUSTOMER_DETAILS}         customer_details
${BANK_ACCOUNT_DETAILS}     bank_account_details

*** Test Cases ***
Validate Unable To Add Bank Account Without Routing Number
    [Documentation] Test case for validating that the customer is unable to add a bank account without a routing number functionality of the OmniBank datadriver
    Launch OmniBank Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Bank Account Details Without Routing Number ${BANK_ACCOUNT_DETAILS}
    Attempt To Save Bank Account
    Validate Error Message For Missing Routing Number",This test case checks the validation for being unable to add a bank account without providing the routing number functionality of the OmniBank datadriver.,Validate Unable To Add Bank Account Without Routing Number
Generate a robot framework test case for testing to Validate Customer Can Update Billing Address functionality of the PaymentPortal.,"*** Settings ***
Documentation          Test cases for validating that the customer can update billing address functionality of the PaymentPortal
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentportal
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Update Billing Address
    [Documentation] Test case for validating that the customer can update billing address functionality of the PaymentPortal
    Launch PaymentPortal Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case checks the validation for updating the billing address functionality of the PaymentPortal.,Validate Update Billing Address
Generate a robot framework test case for testing the validation of customers being unable to exceed payment limits using the PayEASY system.,"*** Settings ***
Documentation          Test cases for validating that customers are unable to exceed payment limits using the PayEASY system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payeasy
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_LIMIT_DETAILS}    payment_limit_details

*** Test Cases ***
Validate Customer Cannot Exceed Payment Limits
    [Documentation] Test case for validating that customers are unable to exceed payment limits using the PayEASY system
    Launch PayEASY Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Exceed Payment Limit ${PAYMENT_LIMIT_DETAILS}
    Validate Payment Limit Not Exceeded",This test case verifies that customers cannot make payments exceeding their predefined limits in the PayEASY system.,Validate Inability To Exceed Payment Limits
Generate a robot framework test case for testing to Validate Customer Is Able To Save Payment Method As Default functionality of the PayGLOBAl datadriver.,"*** Settings ***
Documentation          Test case for validating that the customer is able to save payment method as default functionality of the PayGLOBAL datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                     https://example.com/payglobal
${CUSTOMER_LOGIN}          customer_login
${PAYMENT_METHOD_DETAILS}  payment_method_details
${SUCCESS_MESSAGE}         Payment method saved as default

*** Test Cases ***
Validate Customer Is Able To Save Payment Method As Default
    [Documentation] Test case for validating that the customer is able to save payment method as default functionality of the PayGLOBAL datadriver
    Launch PayGlobal Application ${URL}
    Enter Customer Login Details ${CUSTOMER_LOGIN}
    Navigate To Payment Methods Page
    Select Payment Method ${PAYMENT_METHOD_DETAILS}
    Click Save As Default Button
    Validate Success Message Displayed ${SUCCESS_MESSAGE}",This test case checks the validation for saving a payment method as the default payment method functionality of the PayGLOBAL datadriver.,Validate Save Payment Method As Default
Generate a robot framework test case for testing to validate user cannot reset password without valid email functionality of the SecureAccess datadriver.,"*** Settings ***
Documentation    Test cases for validating that the user cannot reset password without valid email functionality of the SecureAccess datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/secureaccess
${INVALID_EMAIL}            invalid_email@example.com
${VALIDATION_MESSAGE}       Please enter a valid email address

*** Test Cases ***
Validate Password Reset With Invalid Email
    [Documentation] Test case for validating that the user cannot reset password without valid email functionality of the SecureAccess datadriver
    Launch SecureAccess Application    ${URL}
    Attempt Password Reset With Invalid Email    ${INVALID_EMAIL}
    Validate Error Message Displayed    ${VALIDATION_MESSAGE}",This test case checks the validation for being unable to reset password without entering a valid email functionality of the SecureAccess datadriver.,Validate Unable To Reset Password Without Valid Email
Generate a robot framework test case for testing to Validate Customer Is Able To Update Profile Information functionality of the AccountManager system.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update profile information functionality of the AccountManager system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/accountmanager
${CUSTOMER_DETAILS}         customer_details
${UPDATED_INFORMATION}      updated_information

*** Test Cases ***
Validate Customer Profile Update
    [Documentation] Test case for validating that the customer is able to update profile information functionality of the AccountManager system
    Launch AccountManager Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Profile Information ${UPDATED_INFORMATION}
    Save Updated Profile Information
    Validate Profile Information Is Updated",This test case checks the validation for updating profile information functionality of the AccountManager system.,Validate Update Profile Information
Generate a robot framework test case for validating successful login functionality using valid credentials of the BankApp system.,"*** Settings ***
Documentation          Test cases for validating successful login functionality using valid credentials of the BankApp system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/bankapp
${USERNAME}                 valid_username
${PASSWORD}                 valid_password

*** Test Cases ***
Validate Successful Login Using Valid Credentials
    [Documentation] Test case for validating successful login functionality using valid credentials of the BankApp system
    Launch BankApp Application ${URL}
    Enter Username ${USERNAME}
    Enter Password ${PASSWORD}
    Click Login
    Validate Successful Login",This test case checks the validation for successful login using valid credentials functionality of the BankApp system.,Validate Successful Login With Valid Credentials
Generate a robot framework test case for testing to Validate User Unable To Schedule Payment For Expired Invoices functionality of the BillPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to schedule payment for expired invoices functionality of the BillPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billpay
${USER_DETAILS}             user_details
${EXPIRED_INVOICE_DETAILS}  expired_invoice_details

*** Test Cases ***
Validate Unable To Schedule Payment For Expired Invoices
    [Documentation] Test case for validating that the user is unable to schedule payment for expired invoices functionality of the BillPay datadriver
    Launch BillPay Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Expired Invoice Page
    Attempt To Schedule Payment ${EXPIRED_INVOICE_DETAILS}
    Validate Unable To Schedule Payment",This test case checks the validation for being unable to schedule payment for expired invoices functionality of the BillPay datadriver.,Validate User Unable To Schedule Payment For Expired Invoices
Generate a robot framework test case for testing to Validate Customer Is Unable To Exceed Transaction Limit functionality of the QuickPay datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to exceed transaction limit functionality of the QuickPay datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/quickpay
${CUSTOMER_DETAILS}          customer_details
${TRANSACTION_DETAILS}       transaction_details

*** Test Cases ***
Validate Customer Is Unable To Exceed Transaction Limit
    [Documentation]    Test case for validating that the customer is unable to exceed transaction limit functionality of the QuickPay datadriver
    Launch QuickPay Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Attempt Exceeding Transaction Limit    ${TRANSACTION_DETAILS}
    Validate Transaction Limit Exceeded Error",This test case checks the validation for being unable to exceed the transaction limit functionality of the QuickPay datadriver.,Validate Customer Cannot Exceed Transaction Limit
Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Monthly Financial Reports functionality of the FinSERV datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to generate monthly financial reports functionality of the FinSERV datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/finserv
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Generate Monthly Financial Reports
    [Documentation] Test case for validating that the merchant is able to generate monthly financial reports functionality of the FinSERV datadriver
    Launch FinSERV Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Reports Section
    Select Monthly Financial Reports
    Generate Report
    Validate Report Generated Successfully",This test case checks the validation for generating monthly financial reports by merchants functionality of the FinSERV datadriver.,Validate Merchant Generating Monthly Financial Reports
Generate a robot framework test case for testing to Validate User Is Able To Reset Password Through Email functionality of the SecureApp datadriver.,"*** Settings ***
Documentation    Test cases for validating that user is able to reset password through email functionality of the SecureApp datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                https://example.com/secureapp
${EMAIL}              testuser@example.com
${NEW_PASSWORD}       NewSecurePassword123

*** Test Cases ***
Validate User Is Able To Reset Password Through Email
    [Documentation]    Test case for validating that user is able to reset password through email functionality of the SecureApp datadriver
    Launch SecureApp Application    ${URL}
    Navigate To Reset Password Page
    Enter Email Address For Password Reset    ${EMAIL}
    Trigger Password Reset Email
    Validate Password Reset Email Sent
    Open Password Reset Email And Click Link
    Enter New Password    ${NEW_PASSWORD}
    Confirm New Password    ${NEW_PASSWORD}
    Submit New Password
    Validate Password Reset Successfully",This test case checks the validation for resetting password through email functionality of the SecureApp datadriver.,Validate User Is Able To Reset Password Through Email
Generate a robot framework test case for testing to Validate User Is Unable To Register With Invalid Email Address functionality of the MyApp datadriver.,"*** Settings ***
Documentation    Test case for validating that the user is unable to register with an invalid email address functionality of the MyApp datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myapp
${INVALID_EMAIL}            invalid_email@example
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Is Unable To Register With Invalid Email Address
    [Documentation]    Test case for validating that the user is unable to register with an invalid email address functionality of the MyApp datadriver
    Launch MyApp Application    ${URL}
    Enter User Details    ${USER_DETAILS}
    Enter Email Address    ${INVALID_EMAIL}
    Submit Registration Form
    Validate Registration Error Message Displayed",This test case checks the validation for user being unable to register with an invalid email address functionality of the MyApp datadriver.,Validate User Unable To Register With Invalid Email Address
Generate a robot framework test case for testing to Validate Customer Is Unable To Add Items To Cart That Are Out Of Stock functionality of the eCommerceWebapp.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to add items to cart that are out of stock functionality of the eCommerceWebapp
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ecommerce
${CUSTOMER_DETAILS}         customer_details
${OUT_OF_STOCK_ITEM}        out_of_stock_item

*** Test Cases ***
Validate Unable To Add Out Of Stock Items To Cart
    [Documentation] Test case for validating that the customer is unable to add items to cart that are out of stock functionality of the eCommerceWebapp
    Launch eCommerce Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Add Out Of Stock Item To Cart ${OUT_OF_STOCK_ITEM}
    Validate Unable To Add Item To Cart",This test case checks the validation for being unable to add items to the cart that are out of stock functionality of the eCommerceWebapp.,Validate Unable To Add Out Of Stock Items To Cart
Generate a Robot Framework test case for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application.,"*** Settings ***
Documentation    Test cases for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customers Can View Precise Due Amount For Each Itemized Invoice In Billing Overview
    [Documentation]    Test case for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application
    Launch MyAccount Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Overview
    Validate Precise Due Amount For Each Itemized Invoice",This test case checks the functionality that allows customers to view the exact due amount for each itemized invoice in the Billing Overview section of the MyAccount application.,Validate Viewing Exact Due Amount For Each Itemized Invoice In Billing Overview
Generate a robot framework test case for testing to validate customer is able to update the payment method details functionality of the PaymentGateway datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update the payment method details functionality of the PaymentGateway datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentgateway
${CUSTOMER_DETAILS}         customer_details
${OLD_PAYMENT_DETAILS}      old_payment_details
${NEW_PAYMENT_DETAILS}      new_payment_details

*** Test Cases ***
Validate Customer Is Able To Update Payment Method Details
    [Documentation] Test case for validating that the customer is able to update the payment method details functionality of the PaymentGateway datadriver
    Launch PaymentGateway Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment Method Update Section
    Enter Old Payment Method Details ${OLD_PAYMENT_DETAILS}
    Enter New Payment Method Details ${NEW_PAYMENT_DETAILS}
    Submit Payment Method Update
    Validate Payment Method Updated",This test case verifies the customer's ability to successfully update the payment method details in the PaymentGateway datadriver.,Validate Customer Is Able To Update Payment Method Details
Create a robot framework test case for testing to Verify User Is Unable To Reset Password With Invalid Email Address functionality of the SecureAccess module.,"*** Settings ***
Documentation    Test cases for verifying that the user is unable to reset password with invalid email address functionality of the SecureAccess module
Library          SeleniumLibrary

*** Variables ***
${URL}                    https://example.com/secureaccess
${INVALID_EMAIL_ADDRESS}  invalid.email@example.com

*** Test Cases ***
Verify User Is Unable To Reset Password With Invalid Email Address
    [Documentation]    Test case for verifying that the user is unable to reset password with invalid email address functionality of the SecureAccess module
    Launch SecureAccess Application    ${URL}
    Click ""Forgot Password"" Link
    Enter Email Address    ${INVALID_EMAIL_ADDRESS}
    Submit Reset Password Request
    Validate Error Message Displayed",This test case checks the validation for being unable to reset password with an invalid email address in the SecureAccess module.,Validate Unable To Reset Password With Invalid Email Address
Generate a robot framework test case for testing to validate that the user cannot login with an expired session token in an e-commerce platform.,"*** Settings ***
Documentation          Test cases for validating that the user cannot login with an expired session token in an e-commerce platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ecommerce
${EXPIRED_SESSION_TOKEN}    expired_token

*** Test Cases ***
Validate User Cannot Login With Expired Session Token
    [Documentation] Test case for validating that the user cannot login with an expired session token in an e-commerce platform
    Launch Ecommerce Application ${URL}
    Attempt To Login With Expired Session Token ${EXPIRED_SESSION_TOKEN}
    Validate Login Failure Due To Expired Session Token",This test case checks the validation for preventing user login using an expired session token functionality of the e-commerce platform.,Validate User Login With Expired Session Token
Generate a robot framework test case for testing the functionality of viewing list of upcoming orders in the OrderManagement System.,"*** Settings ***
Documentation          Test cases for testing the functionality of viewing list of upcoming orders in the OrderManagement System
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ordermanagement
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate View Upcoming Orders
    [Documentation] Test case for testing the functionality of viewing list of upcoming orders in the OrderManagement System
    Launch OrderManagement Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    View Upcoming Orders List
    Validate Upcoming Orders Displayed",This test case checks the validation for viewing the list of upcoming orders functionality of the OrderManagement System.,Validate View List Of Upcoming Orders
Generate a robot framework test case for testing to Validate User Registration with Valid and Invalid Data functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating user registration with valid and invalid data functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${VALID_USER_DETAILS}       valid_user_details
${INVALID_USER_DETAILS}     invalid_user_details

*** Test Cases ***
Validate User Registration With Valid Data
    [Documentation] Test case for validating user registration with valid data functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter User Details ${VALID_USER_DETAILS}
    Submit Registration Form
    Validate Successful Registration

Validate User Registration With Invalid Data
    [Documentation] Test case for validating user registration with invalid data functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter User Details ${INVALID_USER_DETAILS}
    Submit Registration Form
    Validate Registration Failure",This test case checks the validation for user registration with both valid and invalid data functionality of the PayNOW datadriver.,Validate User Registration With Valid And Invalid Data
Generate a robot framework test case for testing to Validate User Is Able To Change Their Password functionality of the MyBanking application.,"*** Settings ***
Documentation    Test cases for validating that the user is able to change their password functionality of the MyBanking application
Library          SeleniumLibrary

*** Variables ***
${URL}                   https://example.com/mybanking
${USER_CREDENTIALS}      user_credentials
${NEW_PASSWORD}          new_password

*** Test Cases ***
Validate User Is Able To Change Their Password
    [Documentation]    Test case for validating that the user is able to change their password functionality of the MyBanking application
    Launch MyBanking Application    ${URL}
    Enter User Credentials    ${USER_CREDENTIALS}
    Navigate To Change Password Page
    Enter New Password    ${NEW_PASSWORD}
    Confirm Change Password
    Validate Password Changed",This test case checks the validation for a user being able to successfully change their password functionality of the MyBanking application.,Validate User Is Able To Change Password
Generate a robot framework test case for testing the validation of customer unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/easypay
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Unable To Pay Outstanding Amount Exceeding Credit Limit
    [Documentation] Test case for validating that the customer is unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system
    Launch EasyPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Outstanding Payments
    Attempt To Pay Amount Exceeding Credit Limit
    Validate Error Message Displayed",This test case checks the validation for preventing payment when the outstanding amount exceeds the customer's set credit limit functionality of the EasyPay system.,Validate Unable To Pay Outstanding Amount If Exceeds Credit Limit
Generate a robot framework test case for testing to Validate Customer Is Unable To Register With Invalid Email Functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to register with an invalid email functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${OMNICORP_MERCHANT}         OMNICORP_MERCHANT
${INVALID_EMAIL}             invalid_email
${ERROR_MESSAGE}             invalid_email_error_message

*** Test Cases ***
Validate Customer Is Unable To Register With Invalid Email
    [Documentation]    Test case for validating that the customer is unable to register with an invalid email functionality of the PayNOW datadriver
    Launch PayNow Application    ${OMNICORP_MERCHANT}
    Enter Invalid Email          ${INVALID_EMAIL}
    Validate Registration Error Message Is Displayed    ${ERROR_MESSAGE}",This test case checks the validation for being unable to register with an invalid email functionality of the PayNOW datadriver.,Validate Unable To Register With Invalid Email
Generate a robot framework test case for testing the ability to reset user passwords via the Forgot Password feature of the SecureLogin application.,"*** Settings ***
Documentation          Test cases for testing the ability to reset user passwords via the Forgot Password feature of the SecureLogin application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securelogin
${USER_EMAIL}               user@example.com
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate Forgot Password Functionality
    [Documentation] Test case for validating the ability to reset user passwords via the Forgot Password feature of the SecureLogin application
    Launch SecureLogin Application ${URL}
    Navigate To Forgot Password Page
    Enter User Email ${USER_EMAIL}
    Submit Forgot Password Request
    Receive Reset Password Email And Extract Link
    Navigate To Reset Password Link
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit New Password
    Validate Password Reset Confirmation Message
","This test case validates the functionality of the Forgot Password feature, ensuring that users can successfully reset their passwords and regain access to the SecureLogin application.",Validate Forgot Password Reset Functionality
Generate a Robot Framework test case for testing to Validate User Can Add Multiple Products To Shopping Cart functionality of the eCommerce platform.,"*** Settings ***
Documentation          Test cases for validating user can add multiple products to shopping cart functionality of the eCommerce platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com
${USER_CREDENTIALS}         user_credentials
${PRODUCT_1}                product_1
${PRODUCT_2}                product_2
${PRODUCT_3}                product_3

*** Test Cases ***
Validate User Can Add Multiple Products To Shopping Cart
    [Documentation] Test case for validating user can add multiple products to shopping cart functionality of the eCommerce platform
    Launch ECommerce Platform ${URL}
    Login As User ${USER_CREDENTIALS}
    Add Product To Cart ${PRODUCT_1}
    Add Product To Cart ${PRODUCT_2}
    Add Product To Cart ${PRODUCT_3}
    View Shopping Cart
    Validate Products In Cart ${PRODUCT_1} ${PRODUCT_2} ${PRODUCT_3}",This test case ensures the functionality of allowing users to add multiple products to their shopping cart in the eCommerce platform.,Validate Add Multiple Products To Shopping Cart
Generate a robot framework test case for testing to Validate Merchant Is Able To Initiate Refund For Cancelled Orders functionality of the OrderNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to initiate a refund for cancelled orders functionality of the OrderNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ordernow
${MERCHANT_DETAILS}         merchant_details
${CANCELLED_ORDER_DETAILS}  cancelled_order_details

*** Test Cases ***
Validate Merchant Is Able To Initiate Refund For Cancelled Orders
    [Documentation] Test case for validating that the merchant is able to initiate a refund for cancelled orders functionality of the OrderNow datadriver
    Launch OrderNow Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Cancelled Orders ${CANCELLED_ORDER_DETAILS}
    Initiate Refund
    Validate Refund Initiated For Cancelled Orders",This test case checks the validation for initiating refunds for cancelled orders functionality of the OrderNow datadriver.,Validate Initiate Refund For Cancelled Orders
Generate a Robot Framework test case for testing to Validate Customer Unable to Complete Payment Without Adding a Billing Address functionality of the PayFaster platform.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to complete payment without adding a billing address functionality of the PayFaster platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payfaster
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Unable To Complete Payment Without Billing Address
    [Documentation] Test case for validating that the customer is unable to complete payment without adding a billing address functionality of the PayFaster platform
    Launch PayFaster Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Payment Details ${PAYMENT_DETAILS}
    Attempt To Complete Payment
    Validate Error Message Displayed For Missing Billing Address",This test case checks the validation for being unable to complete a payment without adding a billing address functionality of the PayFaster platform.,Validate Unable to Complete Payment Without Billing Address
Generate a Robot Framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the PaymentApp datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to update billing address functionality of the PaymentApp datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentapp
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Is Able To Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PaymentApp datadriver
    Launch PaymentApp Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Update Page
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated
",This test case verifies the functionality for updating the billing address in the PaymentApp datadriver.,Validate Update Billing Address
Generate a robot framework test case for testing to Validate User Is Able To Reset Password via Email functionality of the MyAccount service.,"*** Settings ***
Documentation    Test cases for validating that the user is able to reset password via email functionality of the MyAccount service
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${USER_DETAILS}             user_details
${EMAIL_ADDRESS}            user_email_address

*** Test Cases ***
Validate User Is Able To Reset Password Via Email
    [Documentation]    Test case for validating that the user is able to reset password via email functionality of the MyAccount service
    Launch MyAccount Application    ${URL}
    Navigate To Forgot Password Page
    Enter User Email Address    ${EMAIL_ADDRESS}
    Submit Forgot Password Request
    Validate Password Reset Email Sent    ${USER_DETAILS}
    Open Email And Get Password Reset Link
    Navigate To Password Reset Link
    Enter New Password And Confirm
    Validate Password Reset Successfully",This test case checks the validation for resetting password via email functionality of the MyAccount service.,Validate Reset Password Via Email
Generate a robot framework test case for testing to validate that Customer Is Able To Reset Their Password functionality of the AccountManagement datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reset their password functionality of the AccountManagement datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/accountmanagement
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Reset Password
    [Documentation] Test case for validating that the customer is able to reset their password functionality of the AccountManagement datadriver
    Launch Account Management Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Reset Password Page
    Submit Password Reset Request
    Validate Password Reset Email Sent",This test case checks the validation for resetting the password functionality of the AccountManagement datadriver.,Validate Password Reset Functionality
Generate a robot framework test case for testing to Validate Customer Is Unable To Make a Purchase Over Their Credit Limit functionality of the SecureShop datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/secureshop
${CUSTOMER_DETAILS}         customer_details
${PURCHASE_DETAILS}         purchase_details
${ERROR_MESSAGE}            Purchase exceeds your credit limit

*** Test Cases ***
Validate Customer Unable To Make Purchase Over Credit Limit
    [Documentation] Test case for validating that the customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver
    Launch SecureShop Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Make Purchase ${PURCHASE_DETAILS}
    Validate Error Message Is Displayed ${ERROR_MESSAGE}",This test case checks the validation for ensuring that a customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver.,Validate Unable To Make Purchase Over Credit Limit
Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Monthly Transaction Report functionality of the PayREPORT system.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to generate monthly transaction report functionality of the PayREPORT system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payreport
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Generate Monthly Transaction Report
    [Documentation] Test case for validating that the merchant is able to generate monthly transaction report functionality of the PayREPORT system
    Launch PayReport Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Generate Monthly Transaction Report
    Validate Generated Monthly Report",This test case checks the validation for generating monthly transaction reports functionality of the PayREPORT system.,Validate Monthly Transaction Report Generation
Generate a robot framework test case for testing to Validate User Registration functionality of the MyService datadriver.,"*** Settings ***
Documentation          Test cases for validating user registration functionality of the MyService datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myservice
${BROWSER}                  chrome
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Registration
    [Documentation] Test case for validating user registration functionality of the MyService datadriver
    Launch Browser    ${BROWSER}    ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Registration Form
    Validate Registration Success Message",This test case checks the validation for user registration functionality of the MyService datadriver.,Validate User Registration Functionality
Generate a robot framework test case for testing to Validate Customer Is Able To Update Shipping Address for an Order functionality of the ShopEZ data engine.,"*** Settings ***
Documentation          Test case for validating that the customer is able to update the shipping address for an order functionality of the ShopEZ data engine
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopez
${CUSTOMER_DETAILS}         customer_details
${ORDER_ID}                 order123
${NEW_SHIPPING_ADDRESS}     new_address_details

*** Test Cases ***
Validate Customer Able To Update Shipping Address For Order
    [Documentation] Test case for validating that the customer is able to update the shipping address for an order functionality of the ShopEZ data engine
    Launch ShopEZ Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Order ID ${ORDER_ID}
    Enter New Shipping Address ${NEW_SHIPPING_ADDRESS}
    Save New Shipping Address
    Validate Shipping Address Updated",This test case checks the validation for updating the shipping address for an order functionality of the ShopEZ data engine.,Validate Update Shipping Address for Order
Generate a robot framework test case for testing the Add New Customer functionality of the User Management module.,"*** Settings ***
Documentation          Test cases for testing the Add New Customer functionality of the User Management module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/user_management
${BROWSER}                  chrome
${NEW_CUSTOMER_DETAILS}     new_customer_details

*** Test Cases ***
Add New Customer
    [Documentation] Test case for testing the Add New Customer functionality of the User Management module
    Launch Browser  ${BROWSER}  ${URL}
    Login As Admin
    Navigate To Add Customer Page
    Enter New Customer Details  ${NEW_CUSTOMER_DETAILS}
    Submit New Customer Form
    Validate New Customer Added
    Close Browser",This test case checks the validation for adding a new customer in the User Management module.,Validate Add New Customer Functionality
Generate a robot framework test case for checking the ability of the customer to update their billing information on the MyAccount page functionality.,"*** Settings ***
Documentation          Test cases for checking the ability of the customer to update their billing information on the MyAccount page functionality
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${CUSTOMER_DETAILS}         customer_details
${BILLING_INFORMATION}      billing_information

*** Test Cases ***
Validate Update Billing Information
    [Documentation] Test case for checking the ability of the customer to update their billing information on the MyAccount page functionality
    Launch MyAccount Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Information Page
    Update Billing Information ${BILLING_INFORMATION}
    Validate Billing Information Updated",This test case validates the customer's ability to update their billing information on the MyAccount page functionality.,Validate Customer Can Update Billing Information On MyAccount Page
Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Email functionality of the MyAPP datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reset password using email functionality of the MyAPP datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myapp
${CUSTOMER_EMAIL}           customer@example.com
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate Reset Password Using Email
    [Documentation] Test case for validating that the customer is able to reset password using email functionality of the MyAPP datadriver
    Launch MyAPP Application ${URL}
    Click Forgot Password Link
    Enter Customer Email ${CUSTOMER_EMAIL}
    Submit Forgot Password Request
    Open Email And Retrieve Reset Link
    Navigate To Reset Link
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit New Password Form
    Validate Password Reset Successful",This test case checks the validation for resetting password using email functionality of the MyAPP datadriver.,Validate Customer Is Able To Reset Password Using Email
Generate a robot framework test case for validating that a customer cannot login with an expired account in the MyBank application.,"*** Settings ***
Documentation          Test cases for validating that a customer cannot login with an expired account in the MyBank application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mybank
${EXPIRED_ACCOUNT_DETAILS}  expired_account_details

*** Test Cases ***
Validate Customer Cannot Login With Expired Account
    [Documentation] Test case for validating that a customer cannot login with an expired account in the MyBank application
    Launch MyBank Application ${URL}
    Enter Account Details ${EXPIRED_ACCOUNT_DETAILS}
    Attempt Login With Expired Account
    Validate Login Failure Message",This test case checks the validation for preventing customer login with an expired account in the MyBank application.,Validate Unable To Login With Expired Account
Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Daily Sales Reports functionality of the SalesTracker application.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to generate daily sales reports functionality of the SalesTracker application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/salestracker
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Merchant Is Able To Generate Daily Sales Reports
    [Documentation] Test case for validating that the merchant is able to generate daily sales reports functionality of the SalesTracker application
    Launch SalesTracker Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Sales Reports Section
    Generate Daily Sales Report
    Validate Daily Sales Report Generated",This test case checks the validation for merchant's ability to generate daily sales reports functionality of the SalesTracker application.,Validate Merchant Is Able To Generate Daily Sales Reports
Generate a robot framework test case for testing to Validate User Is Able To Recover Password Using Registered Email functionality of the E-Shop datadriver.,"*** Settings ***
Documentation    Test cases for validating that user is able to recover password using registered email functionality of the E-Shop datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/eshop
${REGISTERED_EMAIL}          registered_email

*** Test Cases ***
Validate User Is Able To Recover Password Using Registered Email
    [Documentation]    Test case for validating that user is able to recover password using registered email functionality of the E-Shop datadriver
    Launch E-Shop Application    ${URL}
    Navigate To Forgot Password Page
    Enter Registered Email    ${REGISTERED_EMAIL}
    Submit Password Recovery Request
    Validate Password Recovery Email Sent",This test case checks the validation for user password recovery using registered email functionality of the E-Shop datadriver.,Validate User Password Recovery Using Registered Email
Generate a robot framework test case for testing to Validate Customer Can Generate Invoice Report functionality of the InvoiceNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can generate invoice report functionality of the InvoiceNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/invoicenow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Can Generate Invoice Report
    [Documentation] Test case for validating that the customer can generate invoice report functionality of the InvoiceNow datadriver
    Launch InvoiceNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Report Section
    Generate Invoice Report
    Validate Invoice Report Generated",This test case checks the validation for being able to generate an invoice report functionality of the InvoiceNow datadriver.,Validate Customer Can Generate Invoice Report
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Information After Making A Purchase functionality of the ShopEase platform.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to update billing information after making a purchase functionality of the ShopEase platform
Library          SeleniumLibrary

*** Variables ***
${URL}                             https://example.com/shopease
${CUSTOMER_DETAILS}                customer_details
${PURCHASE_DETAILS}                purchase_details
${NEW_BILLING_INFORMATION}         new_billing_information

*** Test Cases ***
Validate Customer Can Update Billing Information After Purchase
    [Documentation]    Test case for validating that the customer is able to update billing information after making a purchase functionality of the ShopEase platform
    Launch ShopEase Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Make A Purchase    ${PURCHASE_DETAILS}
    Navigate To Billing Information Page
    Update Billing Information    ${NEW_BILLING_INFORMATION}
    Validate Billing Information Updated",This test case checks the validation for updating billing information after making a purchase functionality of the ShopEase platform.,Validate Customer Is Able To Update Billing Information After Purchase
Generate a robot framework test case for testing to Validate Customer Is Able To Generate Invoice Reports functionality of the ReportGEN datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to generate invoice reports functionality of the ReportGEN datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/reportgen
${CUSTOMER_DETAILS}         customer_details
${REPORT_PARAMETERS}        report_parameters

*** Test Cases ***
Validate Customer Is Able To Generate Invoice Reports
    [Documentation] Test case for validating that the customer is able to generate invoice reports functionality of the ReportGEN datadriver
    Launch ReportGEN Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Report Parameters ${REPORT_PARAMETERS}
    Generate Invoice Reports
    Validate Invoice Reports Generated",This test case checks the validation for generating invoice reports functionality of the ReportGEN datadriver.,Validate Generate Invoice Reports
Generate a robot framework test case for validating the creation of a new user account functionality of the MetroPay datadriver.,"*** Settings ***
Documentation          Test cases for validating the creation of a new user account functionality of the MetroPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/metropay
${USER_DETAILS}             user_details
${SUCCESS_MESSAGE}          Account successfully created

*** Test Cases ***
Validate Creation Of New User Account
    [Documentation] Test case for validating the creation of a new user account functionality of the MetroPay datadriver
    Launch MetroPay Application ${URL}
    Enter User Details ${USER_DETAILS}
    Submit User Details
    Validate Success Message ${SUCCESS_MESSAGE}",This test case checks the validation for creating a new user account functionality of the MetroPay datadriver.,Validate Create New User Account
Generate a robot framework test case for validating the functionality where a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days.,"*** Settings ***
Documentation    Test cases for validating that a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${PAYWORK_REQUEST_DETAILS}   paywork_request_details
${UNPAID_INVOICE_DATE}       1000

*** Test Cases ***
Validate Customer Is Prohibited From Initiating PayWork Requests For Unpaid Invoices Over 1000 Days
    [Documentation]    Test case for validating that a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Enter PayWork Request Details    ${PAYWORK_REQUEST_DETAILS}
    Validate Unpaid Invoice Date Is Greater Than    ${UNPAID_INVOICE_DATE}
    Verify PayWork Request Initiation Is Prohibited",This test case ensures that customers are not allowed to initiate PayWork requests for invoices that have remained unpaid for over 1000 days.,Validate No PayWork Initiation for Unpaid Invoices Over 1000 Days
Generate a robot framework test case for testing to Validate Customer Is Able To Update Scheduled Payment Date functionality of the SysFIN datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update scheduled payment date functionality of the SysFIN datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/sysfin
${CUSTOMER_DETAILS}         customer_details
${NEW_PAYMENT_DATE}         new_payment_date

*** Test Cases ***
Validate Customer Is Able To Update Scheduled Payment Date
    [Documentation] Test case for validating that the customer is able to update scheduled payment date functionality of the SysFIN datadriver
    Launch SysFIN Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Scheduled Payments
    Update Payment Date ${NEW_PAYMENT_DATE}
    Validate Updated Payment Date",This test case checks the validation for updating the scheduled payment date functionality of the SysFIN datadriver.,Validate Update Scheduled Payment Date
Generate a robot framework test case for testing to Validate Customer Is Able To View Detailed Invoice History functionality of the InvoiceViewer datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view detailed invoice history functionality of the InvoiceViewer datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/invoiceviewer
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Can View Detailed Invoice History
    [Documentation] Test case for validating that the customer is able to view detailed invoice history functionality of the InvoiceViewer datadriver
    Launch InvoiceViewer Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    View Detailed Invoice History
    Validate Detailed Invoice History Displayed",This test case checks the validation for viewing detailed invoice history functionality of the InvoiceViewer datadriver.,Validate View Detailed Invoice History
Generate a robot framework test case for testing to Validate Merchant Is Able To View Updated Balance After Processing Refund functionality of the QuickPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view updated balance after processing refund functionality of the QuickPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${MERCHANT_DETAILS}         merchant_details
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate View Updated Balance After Processing Refund
    [Documentation] Test case for validating that the merchant is able to view updated balance after processing refund functionality of the QuickPay datadriver
    Launch QuickPay Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Transactions ${TRANSACTION_DETAILS}
    Process Refund
    Validate Updated Balance After Refund",This test case checks the validation for viewing updated balance after processing a refund functionality of the QuickPay datadriver.,Validate View Updated Balance After Refund
Generate a robot framework test case for testing the validation of customer's ability to reset their password via email verification functionality of the SecurePAY system.,"*** Settings ***
Documentation    Test cases for validating the customer's ability to reset their password via email verification functionality of the SecurePAY system
Library          SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/securepay
${CUSTOMER_EMAIL}       customer@example.com
${EMAIL_INBOX_URL}      https://mail.example.com
${NEW_PASSWORD}         new_password123
${RESET_LINK_SUBJECT}   Password Reset Link

*** Test Cases ***
Validate Password Reset Via Email Verification
    [Documentation] Test case for validating the customer's ability to reset their password via email verification functionality of the SecurePAY system
    Launch SecurePAY Application    ${URL}
    Click Forgot Password Link
    Enter Customer Email Address    ${CUSTOMER_EMAIL}
    Submit Password Reset Request
    Open Email Inbox                ${EMAIL_INBOX_URL}
    Locate Password Reset Email     ${CUSTOMER_EMAIL}  ${RESET_LINK_SUBJECT}
    Click Password Reset Link In Email
    Enter New Password              ${NEW_PASSWORD}
    Confirm New Password            ${NEW_PASSWORD}
    Submit New Password
    Validate Successful Password Reset",This test case checks the validation of a customer's ability to reset their password via email verification functionality in the SecurePAY system.,Validate Password Reset Via Email Verification
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Is Able To Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Account Settings
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case checks the validation for updating the billing address functionality of the PayNOW datadriver.,Validate Updating Billing Address
Generate a robot framework test case for testing to validate customer data encryption functionality of the PaymentSecure datadriver.,"*** Settings ***
Documentation          Test cases for validating customer data encryption functionality of the PaymentSecure datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paymentsecure
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Data Encryption
    [Documentation] Test case for validating customer data encryption functionality of the PaymentSecure datadriver
    Launch PaymentSecure Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Encrypt Customer Data
    Validate Customer Data Is Encrypted","This test case checks the validation for data encryption, ensuring all user data remains secure during transactions with the PaymentSecure datadriver.",Validate Customer Data Encryption
Generate a robot framework test case for testing the functionality of system logging out idle users automatically after a specified time period in the SecurePay app.,"*** Settings ***
Documentation          Test cases for testing the functionality of system logging out idle users automatically after a specified time period in the SecurePay app
Library                SeleniumLibrary
Library                BuiltIn

*** Variables ***
${URL}                      https://example.com/securepay
${USER_DETAILS}             user_details
${IDLE_TIMEOUT}             15m # specify the idle timeout period here

*** Test Cases ***
Validate Auto Logout for Idle Users
    [Documentation] Test case for validating the functionality of system logging out idle users automatically after a specified time period in the SecurePay app
    Launch SecurePay Application ${URL}
    Enter User Details ${USER_DETAILS}
    Simulate User Activity For ${IDLE_TIMEOUT}
    Wait Until Page Contains Element    logout_button   timeout=${IDLE_TIMEOUT} # Assumed element id for logout button
    Validate Auto Logout

","This test case ensures that users who have been inactive for a specified duration are automatically logged out of the SecurePay app, in order to maintain security standards.",Validate Automatic Logout Of Idle Users
Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Email functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reset password using email functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${EMAIL}                   customer@example.com

*** Test Cases ***
Validate Password Reset Using Email
    [Documentation] Test case for validating that the customer is able to reset password using email functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Navigate To Forgot Password Page
    Enter Customer Email ${EMAIL}
    Submit Password Reset Request
    Validate Password Reset Email Received",This test case checks the validation for resetting password using email functionality of the PayNOW datadriver.,Validate Password Reset Using Email
Generate a robot framework test case for testing the validation of the user registration process on the client's web application.,"*** Settings ***
Documentation          Test cases for validating the user registration process on the client's web application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/registration
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Registration Process
    [Documentation] Test case for validating the user registration process on the client's web application
    Launch Registration Page ${URL}
    Enter User Details ${USER_DETAILS}
    Submit Registration Form
    Validate Registration Success Message",This test case checks the validation for the user registration process functionality on the client's web application.,Validate User Registration Process
Generate a robot framework test case for testing the Check Cart Total Calculation functionality of the OnlineShopping datadriver.,"*** Settings ***
Documentation          Test cases for validating the Check Cart Total Calculation functionality of the OnlineShopping datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/onlineshopping
${CUSTOMER_DETAILS}         customer_details
${CART_DETAILS}             cart_details

*** Test Cases ***
Validate Cart Total Calculation
    [Documentation] Test case for validating the Check Cart Total Calculation functionality of the OnlineShopping datadriver
    Launch Online Shopping Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Add Items To Cart ${CART_DETAILS}
    Proceed To Checkout
    Verify Cart Total Calculation
    Validate Total Amount","This test case checks the validation for accurate calculation of the cart total when multiple items are added to and removed from the cart, including the correct application of discounts and taxes, in the OnlineShopping datadriver.",Validate Check Cart Total Calculation
Generate a robot framework test case for testing to Validate Customer Can Successfully Use Account Recovery functionality of the SafeBank application.,"*** Settings ***
Documentation          Test cases for validating that the customer can successfully use account recovery functionality of the SafeBank application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/safebank
${CUSTOMER_EMAIL}           customer_email
${RECOVERY_OPTIONS}         recovery_options
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate Customer Can Use Account Recovery
    [Documentation] Test case for validating that the customer can successfully use account recovery functionality of the SafeBank application
    Launch SafeBank Application ${URL}
    Initiate Account Recovery ${CUSTOMER_EMAIL}
    Select Recovery Option ${RECOVERY_OPTIONS}
    Provide New Password ${NEW_PASSWORD}
    Validate Account Recovery Successful",This test case checks the validation for successfully using the account recovery functionality of the SafeBank application.,Validate Successful Account Recovery in SafeBank
Generate a robot framework test case for testing to ensure Customer Can Successfully Update Email Address on Profile Page functionality of the PayNOW User Profile module.,"*** Settings ***
Documentation          Test cases for ensuring that the customer can successfully update email address on profile page functionality of the PayNOW User Profile module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_LOGIN_DETAILS}   customer_login_details
${NEW_EMAIL_ADDRESS}        new_email@example.com

*** Test Cases ***
Validate Update Email Address On Profile Page
    [Documentation] Test case for ensuring that the customer can successfully update email address on profile page functionality of the PayNOW User Profile module
    Launch PayNow Application ${URL}
    Log In As Customer ${CUSTOMER_LOGIN_DETAILS}
    Navigate To Profile Page
    Update Email Address ${NEW_EMAIL_ADDRESS}
    Validate Email Address Updated",This test case checks the validation for successfully updating email address on the profile page functionality of the PayNOW User Profile module.,Validate Update Email Address On Profile Page
Generate a robot framework test case for testing to Validate Customer Is Able To Logout Successfully functionality of the SecurePay application.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to logout successfully functionality of the SecurePay application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securepay
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Logout Successfully
    [Documentation] Test case for validating that the customer is able to logout successfully functionality of the SecurePay application
    Launch SecurePay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Logout Customer
    Validate Logout Successful",This test case checks the validation for successfully logging out functionality of the SecurePay application.,Validate Customer Is Able To Logout Successfully
Generate a robot framework test case for testing to Validate Customer Is Able To Change Shipping Address Before Order Confirmation functionality of the ShopNOW application.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to change shipping address before order confirmation functionality of the ShopNOW application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopnow
${CUSTOMER_DETAILS}         customer_details
${NEW_SHIPPING_ADDRESS}     new_shipping_address

*** Test Cases ***
Validate Change Shipping Address Before Order Confirmation
    [Documentation] Test case for validating that the customer is able to change shipping address before order confirmation functionality of the ShopNOW application
    Launch ShopNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Order Checkout Page
    Change Shipping Address ${NEW_SHIPPING_ADDRESS}
    Validate Changed Shipping Address Before Confirmation",This test case checks the validation for changing the shipping address before order confirmation functionality of the ShopNOW application.,Validate Change Shipping Address Before Order Confirmation
Generate a robot framework test case for testing to Validate User Registration With Valid Details functionality of the SampleApp datadriver.,"*** Settings ***
Documentation          Test cases for validating user registration with valid details functionality of the SampleApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/sampleapp
${USER_DETAILS}             user_details

*** Test Cases ***
Validate User Registration With Valid Details
    [Documentation] Test case for validating user registration with valid details functionality of the SampleApp datadriver
    Launch SampleApp Application ${URL}
    Enter User Registration Details ${USER_DETAILS}
    Submit Registration Form
    Validate User Registration Successful",This test case checks the validation for user registration with valid details functionality of the SampleApp datadriver.,Validate User Registration With Valid Details
Generate a robot framework test case to validate the ability for customers to update their billing address in customer settings functionality.,"*** Settings ***
Documentation    Test cases for validating the ability for customers to update their billing address in customer settings functionality
Library          SeleniumLibrary

*** Variables ***
${URL}                     https://example.com/customersettings
${CUSTOMER_LOGIN}          customer_login_details
${NEW_BILLING_ADDRESS}     new_billing_address_details
${SUCCESS_MESSAGE}         Address updated successfully

*** Test Cases ***
Validate Update Billing Address Functionality
    [Documentation]    Test case for validating the ability for customers to update their billing address in customer settings functionality
    Launch Customer Settings Application    ${URL}
    Login As Customer    ${CUSTOMER_LOGIN}
    Navigate To Billing Address Section
    Enter New Billing Address Details    ${NEW_BILLING_ADDRESS}
    Save Updated Billing Address
    Validate Success Message Is Displayed    ${SUCCESS_MESSAGE}",This test case checks the validation for the ability of customers to update their billing address in the customer settings functionality of the application.,Validate Customer Can Update Billing Address
Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Email Address functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is able to update their email address functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${NEW_EMAIL_ADDRESS}         new_email@example.com

*** Test Cases ***
Validate Customer Is Able To Update Email Address
    [Documentation]    Test case for validating that the customer is able to update their email address functionality of the PayNOW datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Account Settings
    Update Email Address    ${NEW_EMAIL_ADDRESS}
    Validate Email Address Updated",This test case checks the validation for updating the email address functionality of the PayNOW datadriver.,Validate Update Email Address Functionality
Generate a robot framework test case for testing to Validate User Can Update Profile Information functionality of the MyProfile datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user can update profile information functionality of the MyProfile datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myprofile
${USER_DETAILS}             user_details
${NEW_PROFILE_INFO}         new_profile_info

*** Test Cases ***
Validate User Can Update Profile Information
    [Documentation] Test case for validating that the user can update profile information functionality of the MyProfile datadriver
    Launch MyProfile Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Profile Information Page
    Update Profile Information ${NEW_PROFILE_INFO}
    Validate Profile Information Updated","This test case checks the validation for updating profile information such as name, email, and address functionality of the MyProfile datadriver.",Validate User Can Update Profile Information
Generate a robot framework test case for testing to Validate Customer Unable To Make Payment With Expired Credit Card functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to make payment with expired credit card functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paynow
${CUSTOMER_DETAILS}          customer_details
${EXPIRED_CREDIT_CARD}       expired_credit_card

*** Test Cases ***
Validate Unable To Make Payment With Expired Credit Card
    [Documentation] Test case for validating that the customer is unable to make payment with expired credit card functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Expired Credit Card Details ${EXPIRED_CREDIT_CARD}
    Attempt To Make Payment
    Validate Payment Failed Due To Expired Card",This test case checks the validation for being unable to make a payment with an expired credit card functionality of the PayNOW datadriver.,Validate Unable To Make Payment With Expired Credit Card
Generate a robot framework test case for testing to Validate Customer Is Able To View Payment History Over The Last Six Months functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to view payment history over the last six months functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${DATE_RANGE}               last_six_months

*** Test Cases ***
Validate View Payment History Over Last Six Months
    [Documentation] Test case for validating that the customer is able to view payment history over the last six months functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Payment History
    Select Date Range ${DATE_RANGE}
    Validate Payment History Displayed",This test case checks the validation for viewing payment history over the last six months functionality of the PayNOW datadriver.,Validate View Payment History Over Last Six Months
Generate a robot framework test case for testing to Validate Payment Reminder Notifications Are Sent Through SMS functionality of the BillNotify datadriver.,"*** Settings ***
Documentation          Test cases for validating that payment reminder notifications are sent through SMS functionality of the BillNotify datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billnotify
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Payment Reminder Notifications Sent Through SMS
    [Documentation] Test case for validating that payment reminder notifications are sent through SMS functionality of the BillNotify datadriver
    Launch BillNotify Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Trigger Payment Reminder Notification
    Validate SMS Notification Sent",This test case checks the validation for ensuring payment reminder notifications are sent through SMS functionality of the BillNotify datadriver.,Validate Payment Reminder Notifications Sent Through SMS
Generate a robot framework test case for testing to Validate Customer Is Unable To Add More Than Three Payment Methods functionality of the MoneyApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to add more than three payment methods functionality of the MoneyApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/moneyapp
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_METHOD_ONE}       payment_method_one
${PAYMENT_METHOD_TWO}       payment_method_two
${PAYMENT_METHOD_THREE}     payment_method_three
${PAYMENT_METHOD_FOUR}      payment_method_four

*** Test Cases ***
Validate Customer Unable To Add More Than Three Payment Methods
    [Documentation] Test case for validating that the customer is unable to add more than three payment methods functionality of the MoneyApp datadriver
    Launch MoneyApp Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Add Payment Method ${PAYMENT_METHOD_ONE}
    Add Payment Method ${PAYMENT_METHOD_TWO}
    Add Payment Method ${PAYMENT_METHOD_THREE}
    Attempt To Add Fourth Payment Method ${PAYMENT_METHOD_FOUR}
    Validate Unable To Add Fourth Payment Method

",This test case checks the validation for being unable to add more than three payment methods functionality of the MoneyApp datadriver.,Validate Unable To Add More Than Three Payment Methods
Generate a robot framework test case for testing to Validate Refund Of Payment functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the refund of payment functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate Refund Of Payment
    [Documentation] Test case for validating that the refund of payment functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Transaction Details ${TRANSACTION_DETAILS}
    Process Refund
    Validate Refund Successful",This test case checks the validation for the refund of payment functionality of the PayNOW datadriver.,Validate Refund Of Payment
Generate a robot framework test case for testing the functionality of validating user login to the MartSecure application with both valid and invalid credentials.,"*** Settings ***
Documentation          Test cases for validating user login to the MartSecure application with both valid and invalid credentials.
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/martsecure
${VALID_CREDENTIALS}        valid_credentials
${INVALID_CREDENTIALS}      invalid_credentials

*** Test Cases ***
Validate User Login With Valid And Invalid Credentials
    [Documentation] Test case for validating user login to the MartSecure application with both valid and invalid credentials.
    Open Browser ${URL} ${BROWSER}
    [Teardown] Close Browser
    Validate Login With Valid Credentials ${VALID_CREDENTIALS}
    Validate Login With Invalid Credentials ${INVALID_CREDENTIALS}

Validate Login With Valid Credentials
    [Arguments]  ${Valid_Credentials}
    Input Text    username_field   ${Valid_Credentials.username}
    Input Text    password_field   ${Valid_Credentials.password}
    Click Button  login_button
    Wait Until Page Contains   Welcome, ${Valid_Credentials.username}   timeout=10s
    Capture Page Screenshot

Validate Login With Invalid Credentials
    [Arguments]  ${Invalid_Credentials}
    Input Text    username_field   ${Invalid_Credentials.username}
    Input Text    password_field   ${Invalid_Credentials.password}
    Click Button  login_button
    Wait Until Page Contains   Invalid username or password   timeout=10s
    Capture Page Screenshot",This test case checks the validation functionality of user login for the MartSecure application using both valid and invalid credentials.,Validate User Login With Valid And Invalid Credentials For MartSecure
Generate a robot framework test case for testing the Download and Print Invoice functionality of the ManagePAY datadriver.,"*** Settings ***
Documentation          Test cases for testing the Download and Print Invoice functionality of the ManagePAY datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/managepay
${CUSTOMER_DETAILS}         customer_details
${INVOICE_ID}               invoice_id

*** Test Cases ***
Validate Download And Print Invoice
    [Documentation] Test case for testing the Download and Print Invoice functionality of the ManagePAY datadriver
    Launch ManagePAY Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Select Invoice ${INVOICE_ID}
    Download Invoice
    Print Invoice
    Validate Invoice Downloaded And Printed",This test case checks the validation for downloading and printing invoices functionality of the ManagePAY datadriver.,Validate Download and Print Invoice Functionality
Generate a robot framework test case for testing to Validate User Password Reset Through Email functionality of the SecureAuth application.,"*** Settings ***
Documentation          Test cases for validating the user password reset through email functionality of the SecureAuth application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/secureauth
${EMAIL_DETAILS}            email_details

*** Test Cases ***
Validate User Password Reset Through Email
    [Documentation] Test case for validating the user password reset through email functionality of the SecureAuth application
    Launch SecureAuth Application ${URL}
    Navigate To Password Reset Page
    Enter Email Details ${EMAIL_DETAILS}
    Submit Password Reset Request
    Validate Email Sent For Password Reset",This test case checks the validation for resetting a user's password through email functionality of the SecureAuth application.,Validate User Password Reset Through Email
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Using Expired Credit Card functionality of the FinPay datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to process payment using expired credit card functionality of the FinPay datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/finpay
${CUSTOMER_DETAILS}          customer_details
${EXPIRED_CREDIT_CARD}       expired_credit_card_details
${ERROR_MESSAGE}             credit_card_error_message

*** Test Cases ***
Validate Unable To Process Payment Using Expired Credit Card
    [Documentation]    Test case for validating that the customer is unable to process payment using expired credit card functionality of the FinPay datadriver
    Launch PayNow Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Payment Page
    Enter Credit Card Details    ${EXPIRED_CREDIT_CARD}
    Attempt To Process Payment
    Validate Error Message Displayed    ${ERROR_MESSAGE}
","This test case checks if the system prevents customers from processing a payment using an expired credit card, ensuring the functionality of the FinPay datadriver.",Validate Unable To Process Payment Using Expired Credit Card
Create a Robot Framework test case for verifying the functionality to ensure users can update their profile details on the MyAccount application.,"*** Settings ***
Documentation    Test cases for verifying that users can update their profile details on the MyAccount application
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/myaccount
${USER_DETAILS}              user_details

*** Test Cases ***
Verify Users Can Update Profile Details
    [Documentation]    Test case for verifying that users can update their profile details on the MyAccount application
    Launch MyAccount Application    ${URL}
    Enter User Details    ${USER_DETAILS}
    Navigate To Profile Section
    Update Profile Details
    Validate Profile Details Updated Successfully","This test case checks the functionality for updating profile details including name, email, and phone number on the MyAccount application.",Validate Update User Profile Details
Generate a robot framework test case for testing to Validate Customer Is Able To Reschedule AutoPay For A Future Date functionality of the AutoPAY system.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reschedule AutoPay for a future date functionality of the AutoPAY system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/autopay
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details
${FUTURE_DATE}              2023-12-31

*** Test Cases ***
Validate Customer Is Able To Reschedule AutoPay For A Future Date
    [Documentation] Test case for validating that the customer is able to reschedule AutoPay for a future date functionality of the AutoPAY system
    Launch AutoPAY Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To AutoPay Section
    Update AutoPay Date ${AUTOPAY_DETAILS} ${FUTURE_DATE}
    Validate Reschedule Successful",This test case checks the validation for rescheduling AutoPay for a future date functionality of the AutoPAY system.,Validate Reschedule AutoPay For Future Date
Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Registered Email functionality of the PayRESET datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to reset password using registered email functionality of the PayRESET datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payreset
${REGISTERED_EMAIL}         exampleuser@example.com
${NEW_PASSWORD}             NewPassword123!
${CONFIRM_PASSWORD}         NewPassword123!

*** Test Cases ***
Validate Customer Is Able To Reset Password Using Registered Email
    [Documentation] Test case for validating that the customer is able to reset password using registered email functionality of the PayRESET datadriver
    Launch PayReset Application ${URL}
    Enter Registered Email ${REGISTERED_EMAIL}
    Submit Reset Password Request
    Open Password Reset Email
    Click Reset Password Link
    Enter New Password ${NEW_PASSWORD} ${CONFIRM_PASSWORD}
    Submit New Password
    Validate Password Reset Successful",This test case checks the validation for resetting the password using a registered email functionality of the PayRESET datadriver.,Validate Password Reset Using Registered Email
Generate a robot framework test case for testing to Validate User Can Update Personal Information functionality of the MyApp system.,"*** Settings ***
Documentation    Test cases for validating that the user can update personal information functionality of the MyApp system
Library          SeleniumLibrary

*** Variables ***
${URL}                  https://example.com/myapp
${USER_CREDENTIALS}     user_credentials
${PERSONAL_INFO}        personal_info

*** Test Cases ***
Validate User Can Update Personal Information
    [Documentation]    Test case for validating that the user can update personal information functionality of the MyApp system
    Launch Application    ${URL}
    Login To Application    ${USER_CREDENTIALS}
    Navigate To Personal Information Page
    Update Personal Information    ${PERSONAL_INFO}
    Validate Personal Information Updated","This test case checks the validation for updating personal information including name, email, and phone number functionality of the MyApp system.",Validate Update Personal Information
Generate a robot framework test case for testing the validation to ensure customers can update their profile information in the UserPortal system.,"*** Settings ***
Documentation          Test cases for validating that customers can update their profile information in the UserPortal system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/userportal
${CUSTOMER_DETAILS}         customer_details
${PROFILE_UPDATE_DATA}      profile_update_data

*** Test Cases ***
Validate Customer Profile Update
    [Documentation] Test case for validating that customers can update their profile information in the UserPortal system
    Launch UserPortal Application ${URL}
    Enter Customer Credentials ${CUSTOMER_DETAILS}
    Navigate To Profile Page
    Update Profile Information ${PROFILE_UPDATE_DATA}
    Validate Profile Update Success","This test case checks the validation for updating profile information such as name, address, phone number, and email in the UserPortal system.",Validate Profile Information Update In UserPortal
Generate a robot framework test case for testing to Validate User Is Able To Change Email Address In Profile functionality of the MyAccount data driver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to change email address in profile functionality of the MyAccount data driver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myaccount
${USER_DETAILS}             user_details
${NEW_EMAIL}                new_email

*** Test Cases ***
Validate Change Email Address In Profile
    [Documentation] Test case for validating that the user is able to change email address in profile functionality of the MyAccount data driver
    Launch MyAccount Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Profile Settings
    Change Email Address To ${NEW_EMAIL}
    Validate Email Address Changed To ${NEW_EMAIL}",This test case checks the validation for changing the email address in the user profile functionality of the MyAccount data driver.,Validate Change Email Address In Profile
Generate a robot framework test case for testing to Validate Customer Is Unable To Apply Discount Code For Invoices That Are Already Discounted functionality of the PaymentPlus datadriver.,"*** Settings ***
Documentation    Test cases for validating that the customer is unable to apply discount code for invoices that are already discounted functionality of the PaymentPlus datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paymentplus
${CUSTOMER_DETAILS}          customer_details
${DISCOUNT_CODE}             discount_code

*** Test Cases ***
Validate Customer Cannot Apply Discount Code For Already Discounted Invoices
    [Documentation] Test case for validating that the customer is unable to apply discount code for invoices that are already discounted functionality of the PaymentPlus datadriver
    Launch Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Invoice Page
    Attempt To Apply Discount Code ${DISCOUNT_CODE}
    Validate Discount Code Not Applied To Discounted Invoices",This test case checks the validation for being unable to apply a discount code for invoices that have already been discounted functionality of the PaymentPlus datadriver.,Validate Customer Unable to Apply Discount Code For Already Discounted Invoices
Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Billing Address In The Profile functionality of the AccountManagement system.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update their billing address in the profile functionality of the AccountManagement system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/accountmanagement
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Can Update Billing Address
    [Documentation] Test case for validating that the customer is able to update their billing address in the profile functionality of the AccountManagement system
    Launch Account Management Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Profile Settings
    Enter New Billing Address ${NEW_BILLING_ADDRESS}
    Save Billing Address Changes
    Validate Billing Address Updated",This test case verifies the functionality of updating the customer's billing address in their profile within the AccountManagement system.,Validate Customer Can Update Billing Address In Profile
Generate a robot framework test case for testing the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver.,"*** Settings ***
Documentation    Test cases for testing the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/paymentmanager
${CUSTOMER_DETAILS}          customer_details
${EXISTING_PAYMENT_METHOD}   existing_payment_method
${NEW_PAYMENT_DETAILS}       new_payment_details

*** Test Cases ***
Validate Modification Of Existing Payment Method
    [Documentation] Test case for validating that customers can modify their existing payment method details functionality of the PaymentManager datadriver
    Launch PaymentManager Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Payment Methods Page
    Select Existing Payment Method    ${EXISTING_PAYMENT_METHOD}
    Modify Payment Method Details    ${NEW_PAYMENT_DETAILS}
    Save Changes
    Validate Payment Method Details Updated    ${NEW_PAYMENT_DETAILS}",This test case checks the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver.,Validate Customer Can Modify Existing Payment Method Details
Generate a robot framework test case for testing to Validate User Is Unable To Reset Password Without Security Questions functionality of the SecureNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is unable to reset password without security questions functionality of the SecureNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securenow
${USER_DETAILS}             user_details

*** Test Cases ***
Validate Unable To Reset Password Without Security Questions
    [Documentation] Test case for validating that the user is unable to reset password without security questions functionality of the SecureNow datadriver
    Launch SecureNow Application ${URL}
    Enter User Details ${USER_DETAILS}
    Attempt Password Reset Without Security Questions
    Validate Password Reset Failure",This test case checks the validation for being unable to reset the password without answering security questions on the SecureNow datadriver.,Validate User Unable To Reset Password Without Security Questions
Generate a robot framework test case for testing to Validate Customer Unable To Process Refunds On Transactions Older Than 180 Days functionality of the PayNOW datadriver.,"*** Settings ***
Documentation    Test cases for validating that a customer is unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                            https://example.com/paynow
${CUSTOMER_DETAILS}               customer_details
${TRANSACTION_DATE_BEFORE_180D}   180_days_ago
${TRANSACTION_ID}                 transaction_id

*** Test Cases ***
Validate Customer Unable To Process Refunds On Transactions Older Than 180 Days
    [Documentation]    Test case for validating that a customer is unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Search For Transaction By Date ${TRANSACTION_DATE_BEFORE_180D}
    Attempt To Process Refund ${TRANSACTION_ID}
    Validate Refund Not Allowed",This test case checks the validation for being unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver.,Validate Unable To Process Refunds On Transactions Older Than 180 Days
Generate a robot framework test case for testing the validation of an admin user being able to create new user accounts in the UserManagement system.,"*** Settings ***
Documentation          Test cases for validating that an admin user is able to create new user accounts in the UserManagement system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/usermanagement
${ADMIN_LOGIN}              admin_login
${NEW_USER_DETAILS}         new_user_details

*** Test Cases ***
Validate Admin User Can Create New User Accounts
    [Documentation] Test case for validating that an admin user is able to create new user accounts in the UserManagement system
    Launch UserManagement Application ${URL}
    Admin Login ${ADMIN_LOGIN}
    Navigate To Create New User Account Page
    Enter New User Details ${NEW_USER_DETAILS}
    Submit New User Account Form
    Validate New User Account Created Successfully","This test case checks the validation for admin users being able to create new user accounts in the UserManagement system, ensuring the creation process works correctly with valid data.",Validate Admin Can Create New User Accounts In UserManagement
Generate a robot framework test case for validating the functionality of user registration and login process for the 'QuickPay' application.,"*** Settings ***
Documentation    Test cases for validating the functionality of user registration and login process for the 'QuickPay' application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/quickpay
${BROWSER}       chrome
${USER_DETAILS}  user_details

*** Test Cases ***
Validate User Registration And Login Process
    [Documentation]    Test case for validating the functionality of user registration and login process for the 'QuickPay' application
    Launch Browser    ${BROWSER}    ${URL}
    Register New User    ${USER_DETAILS}
    Validate User Registration Successful
    Login With Registered User    ${USER_DETAILS}
    Validate User Login Successful
    Close Browser",This test case checks the validation for user registration and login process functionalities of the QuickPay application.,Validate User Registration and Login Process for QuickPay
Generate a robot framework test case for testing the validation of successful order placement with multiple items in the ShoppingCart application.,"*** Settings ***
Documentation    Test cases for validating the successful order placement with multiple items in the ShoppingCart application
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/shoppingcart
${CUSTOMER_DETAILS}          customer_details
${SHOPPING_CART_ITEMS}       shopping_cart_items
${ORDER_CONFIRMATION}        order_confirmation

*** Test Cases ***
Validate Successful Order Placement With Multiple Items
    [Documentation]    Test case for validating the successful order placement with multiple items in the ShoppingCart application
    Launch ShoppingCart Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Add Items To Cart    ${SHOPPING_CART_ITEMS}
    Proceed To Checkout
    Confirm Order Placement
    Validate Order Confirmation Received    ${ORDER_CONFIRMATION}",This test case verifies the functionality of placing an order with multiple items in the ShoppingCart application to ensure it handles adding multiple products and processing the order correctly.,Validate Successful Order Placement With Multiple Items
Generate a robot framework test case for testing to Validate Customer Is Able To Generate Monthly Financial Reports functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to generate monthly financial reports functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Monthly Financial Reports Generation
    [Documentation] Test case for validating that the customer is able to generate monthly financial reports functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Generate Monthly Financial Reports
    Validate Financial Reports Generated",This test case checks the validation for generating monthly financial reports functionality of the PayNOW datadriver.,Validate Generate Monthly Financial Reports
Generate a robot framework test case for testing to Validate Customer Is Able To Update Shipping Address While Checkout functionality of the ShopNow datadriver.,"*** Settings ***
Documentation          Test case for validating that the customer is able to update the shipping address while checking out functionality of the ShopNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopnow
${CUSTOMER_DETAILS}         customer_details
${NEW_SHIPPING_ADDRESS}     new_shipping_address

*** Test Cases ***
Validate Update Shipping Address While Checkout
    [Documentation] Test case for validating that the customer is able to update the shipping address while checking out functionality of the ShopNow datadriver
    Launch ShopNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Checkout Page
    Update Shipping Address ${NEW_SHIPPING_ADDRESS}
    Validate Shipping Address Updated",This test case checks the validation for updating the shipping address during checkout functionality of the ShopNow datadriver.,Validate Update Shipping Address During Checkout
Generate a robot framework test case for validating customer login functionality using two-factor authentication in the SecurePay application.,"*** Settings ***
Documentation    Test cases for validating customer login functionality using two-factor authentication in the SecurePay application
Library          SeleniumLibrary

*** Variables ***
${URL}                     https://example.com/securepay
${CUSTOMER_DETAILS}         customer_details
${TWO_FA_CODE}              two_fa_code

*** Test Cases ***
Validate Customer Login Using Two-Factor Authentication
    [Documentation]    Test case for validating that the customer login functionality works with two-factor authentication in the SecurePay application    
    Launch SecurePay Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Click Login Button
    Enter Two-Factor Authentication Code    ${TWO_FA_CODE}
    Validate Successful Login",This test case checks the validation process for customer login using two-factor authentication functionality of the SecurePay application.,Validate Customer Login With Two-Factor Authentication
Generate a robot framework test case for testing the validation of Customer Ability to Receive Payment Confirmation Email functionality of the PayNOW app.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to receive payment confirmation email functionality of the PayNOW app
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PAYMENT_DETAILS}          payment_details
${EXPECTED_EMAIL}           email@example.com

*** Test Cases ***
Validate Customer Ability To Receive Payment Confirmation Email
    [Documentation] Test case for validating that the customer is able to receive payment confirmation email functionality of the PayNOW app
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Make Payment ${PAYMENT_DETAILS}
    Validate Payment Confirmation Email Sent ${EXPECTED_EMAIL}",This test case checks the validation for the customer receiving a payment confirmation email after successfully processing a payment using the PayNOW app.,Validate Customer Receives Payment Confirmation Email After Successful Payment
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the BillTech datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the BillTech datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billtech
${CUSTOMER_DETAILS}         customer_details
${BILLING_ADDRESS_DETAILS}  billing_address_details

*** Test Cases ***
Validate Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the BillTech datadriver
    Launch BillTech Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Account Settings
    Update Billing Address ${BILLING_ADDRESS_DETAILS}
    Validate Billing Address Updated",This test case checks the validation for updating the billing address functionality of the BillTech datadriver.,Validate Update Billing Address
Generate a robot framework test case for testing the validation of customer being unable to update expired credit card functionality in the PayFLOW application.,"*** Settings ***
Documentation          Test cases for validating customer being unable to update expired credit card functionality in the PayFLOW application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payflow
${CUSTOMER_DETAILS}         customer_details
${EXPIRED_CARD_DETAILS}     expired_card_details
${ERROR_MESSAGE}            expired_card_details.Error_Message

*** Test Cases ***
Validate Unable To Update Expired Credit Card
    [Documentation] Test case for validating customer being unable to update expired credit card functionality in the PayFLOW application
    Launch PayFlow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Expired Credit Card Details ${EXPIRED_CARD_DETAILS}
    Attempt To Update Credit Card
    Validate Error Message Displayed ${ERROR_MESSAGE}
    Verify Card Not Updated",This test case checks the validation for customer being unable to update expired credit card functionality in the PayFLOW application.,Validate Unable To Update Expired Credit Card
Generate a robot framework test case for testing the validation of Customer Being Able to Update their Profile Information functionality of the PayNOW application.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update their profile information functionality of the PayNOW application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${PROFILE_DETAILS}          profile_details

*** Test Cases ***
Validate Update Profile Information
    [Documentation] Test case for validating that the customer is able to update their profile information functionality of the PayNOW application
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Profile Page
    Update Profile Information ${PROFILE_DETAILS}
    Submit Profile Updates
    Validate Profile Information Updated","This test case checks the validation for updating customer profile information including name, address, and contact details functionality of the PayNOW application.",Validate Update Customer Profile Information
Generate a robot framework test case for testing to Validate Merchant Is Able To Override Default Tax Calculation functionality of the ShopEZ datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to override default tax calculation functionality of the ShopEZ datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopez
${MERCHANT_DETAILS}         merchant_details
${TAX_DETAILS}              tax_details

*** Test Cases ***
Validate Merchant Is Able To Override Default Tax Calculation
    [Documentation] Test case for validating that the merchant is able to override default tax calculation functionality of the ShopEZ datadriver
    Launch ShopEZ Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Override Default Tax Calculation ${TAX_DETAILS}
    Validate Tax Calculation Overridden",This test case checks the validation for the ability of a merchant to override the default tax calculation functionality of the ShopEZ datadriver.,Validate Merchant Override Default Tax Calculation
Generate a robot framework test case for testing to Validate User Can Update Profile Information functionality of the eBanking platform.,"*** Settings ***
Documentation          Test cases for validating that the user can update profile information functionality of the eBanking platform
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/ebanking
${USER_LOGIN_DETAILS}       user_login_details
${PROFILE_UPDATE_DETAILS}   profile_update_details

*** Test Cases ***
Validate User Can Update Profile Information
    [Documentation] Test case for validating that the user can update profile information functionality of the eBanking platform
    Launch eBanking Platform ${URL}
    Login To eBanking Platform ${USER_LOGIN_DETAILS}
    Navigate To Profile Update Section
    Update Profile Information ${PROFILE_UPDATE_DETAILS}
    Save Profile Information
    Validate Profile Information Updated",This test case checks the validation for updating profile information functionality of the eBanking platform.,Validate Update Profile Information
Generate a robot framework test case for testing to Validate Customer Is Unable To View Transactions Without Logging In functionality of the FinanceApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to view transactions without logging in functionality of the FinanceApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/financeapp
${INVALID_SESSION}          invalid_session_details

*** Test Cases ***
Validate Unable To View Transactions Without Logging In
    [Documentation] Test case for validating that the customer is unable to view transactions without logging in functionality of the FinanceApp datadriver
    Launch FinanceApp Application ${URL}
    Attempt To View Transactions Without Logging In ${INVALID_SESSION}
    Validate Unable To View Transactions",This test case checks the validation for being unable to view transactions without logging in functionality of the FinanceApp datadriver.,Validate Unable To View Transactions Without Logging In
Generate a robot framework test case for testing to Validate Customer Can Update Personal Information In Their Profile functionality of the MyProfile data driver.,"*** Settings ***
Documentation          Test cases for validating that customers can update personal information in their profile functionality of the MyProfile data driver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myprofile
${CUSTOMER_PROFILE_DETAILS} update_profile_details

*** Test Cases ***
Validate Customer Can Update Personal Information
    [Documentation] Test case for validating that customers can update personal information in their profile functionality of the MyProfile data driver
    Launch MyProfile Application ${URL}
    Enter Customer Profile Details ${CUSTOMER_PROFILE_DETAILS}
    Update Personal Information
    Validate Personal Information Updated",This test case checks the validation for updating personal information in a customer's profile functionality of the MyProfile data driver.,Validate Update Personal Information In Customer Profile
Generate a robot framework test case for testing the Book Appointment feature of the HealthCare App to validate the customer is unable to book an appointment with an unavailable doctor.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to book an appointment with an unavailable doctor using the Book Appointment feature of the HealthCare App
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/healthcare
${CUSTOMER_DETAILS}         customer_details
${UNAVAILABLE_DOCTOR}      unavailable_doctor

*** Test Cases ***
Validate Unable To Book Appointment With Unavailable Doctor
    [Documentation] Test case for validating that the customer is unable to book an appointment with an unavailable doctor using the Book Appointment feature of the HealthCare App
    Launch HealthCare Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Book Appointment With Unavailable Doctor ${UNAVAILABLE_DOCTOR}
    Validate Booking Failure",This test case checks the validation for being unable to book an appointment with a doctor who is marked as unavailable in the HealthCare App.,Validate Unable To Book Appointment With Unavailable Doctor
Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Payment Without Providing Customer ID functionality of the QuickPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to process payment without providing customer ID functionality of the QuickPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${MERCHANT_DETAILS}         merchant_details
${PAYMENT_DETAILS}          payment_details

*** Test Cases ***
Validate Merchant Unable To Process Payment Without Customer ID
    [Documentation] Test case for validating that the merchant is unable to process payment without providing customer ID functionality of the QuickPay datadriver
    Launch QuickPay Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Leave Customer ID Empty
    Attempt Process Payment ${PAYMENT_DETAILS}
    Validate Payment Not Processed",This test case checks the validation for being unable to process payment without providing customer ID functionality of the QuickPay datadriver.,Validate Unable To Process Payment Without Customer ID
Generate a robot framework test case for testing the validation for generating monthly user activity report functionality of the ReportMaster datadriver.,"*** Settings ***
Documentation          Test cases for validating the generation of monthly user activity report functionality of the ReportMaster datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/reportmaster
${USER_DETAILS}             user_details
${REPORT_DETAILS}           report_details

*** Test Cases ***
Validate Generate Monthly User Activity Report
    [Documentation] Test case for validating the generation of monthly user activity report functionality of the ReportMaster datadriver
    Launch ReportMaster Application ${URL}
    Enter User Details ${USER_DETAILS}
    Generate Monthly User Activity Report ${REPORT_DETAILS}
    Validate Monthly User Activity Report Generated",This test case verifies the validation of the system's ability to generate a detailed monthly user activity report using the functionality of the ReportMaster datadriver.,Validate Monthly User Activity Report Generation
Generate a robot framework test case for testing to Validate User Unable To Login With Invalid Credentials functionality of the BankNOW application.,"*** Settings ***
Documentation    Test cases for validating that the user is unable to login with invalid credentials functionality of the BankNOW application
Library          SeleniumLibrary

*** Variables ***
${URL}           https://example.com/banknow
${INVALID_USERNAME}    invalid_user
${INVALID_PASSWORD}    invalid_pass
${ERROR_MESSAGE}       Invalid username or password

*** Test Cases ***
Validate User Unable To Login With Invalid Credentials
    [Documentation]    Test case for validating that the user is unable to login with invalid credentials functionality of the BankNOW application
    Launch Browser    chrome    ${URL}
    Input Text    id=username_input    ${INVALID_USERNAME}
    Input Text    id=password_input    ${INVALID_PASSWORD}
    Click Button    id=login_button
    Wait Until Element Is Visible    id=error_message    10s
    Element Text Should Be    id=error_message    ${ERROR_MESSAGE}
    Close Browser",This test case checks the validation for user login with invalid credentials functionality of the BankNOW application.,Validate Unable To Login With Invalid Credentials
"Generate a robot framework test case for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal.","*** Settings ***
Documentation          Test cases for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/clientportal
${CUSTOMER_DETAILS_INITIAL} initial_customer_details
${CUSTOMER_DETAILS_UPDATED} updated_customer_details

*** Test Cases ***
Validate Edit Customer Details
    [Documentation] Test case for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal
    Launch ClientPortal Application ${URL}
    Enter Initial Customer Details ${CUSTOMER_DETAILS_INITIAL}
    Navigate To Edit Customer Details Page
    Update Customer Details ${CUSTOMER_DETAILS_UPDATED}
    Validate Customer Details Updated","This test case checks the validation for editing customer details such as name, address, and phone number functionality of the ClientPortal.",Validate Edit Customer Details Functionality
Generate a robot framework test case for testing to validate customer can change and update billing address functionality of the PayNOW datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer can change and update billing address functionality of the PayNOW datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Change and Update Billing Address
    [Documentation] Test case for validating that the customer can change and update billing address functionality of the PayNOW datadriver
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Section
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Save Changes
    Validate Billing Address Updated",This test case checks the validation for changing and updating the billing address functionality of the PayNOW datadriver.,Validate Customer Can Update Billing Address
Generate a robot framework test case for testing the Validate Customer Can Update Their Billing Address functionality of the EasyBill system.,"*** Settings ***
Documentation          Test cases for validating that the customer can update their billing address functionality of the EasyBill system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/easybill
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Can Update Billing Address
    [Documentation] Test case for validating that the customer can update their billing address functionality of the EasyBill system
    Launch EasyBill Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To Billing Address Page
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case checks the validation for updating the customer's billing address functionality of the EasyBill system.,Validate Update Billing Address
Generate a robot framework test case for testing to Validate Customer Is Unable To Create Recurring Payment For Expired Card functionality of the TransactX system.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to create recurring payment for expired card functionality of the TransactX system
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/transactx
${CUSTOMER_DETAILS}         customer_details
${EXPIRED_CARD_DETAILS}     expired_card_details

*** Test Cases ***
Validate Unable To Create Recurring Payment For Expired Card
    [Documentation] Test case for validating that the customer is unable to create recurring payment for expired card functionality of the TransactX system
    Launch TransactX Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt Create Recurring Payment With Expired Card ${EXPIRED_CARD_DETAILS}
    Validate Unable To Create Recurring Payment",This test case checks the validation for being unable to create recurring payment for expired card functionality of the TransactX system.,Validate Unable To Create Recurring Payment For Expired Card
Generate a robot framework test case for testing to Validate Customer Is Able To Modify Saved AutoPay Schedule functionality of the BillNow datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to modify saved AutoPay schedule functionality of the BillNow datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billnow
${CUSTOMER_DETAILS}         customer_details
${AUTOPAY_DETAILS}          autopay_details

*** Test Cases ***
Validate Modify Saved AutoPay Schedule
    [Documentation] Test case for validating that the customer is able to modify saved AutoPay schedule functionality of the BillNow datadriver
    Launch BillNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Navigate To AutoPay Schedule
    Modify Saved AutoPay Schedule ${AUTOPAY_DETAILS}
    Validate AutoPay Schedule Modified",This test case checks the validation for modifying saved AutoPay schedule functionality of the BillNow datadriver.,Validate Modify Saved AutoPay Schedule
Generate a robot framework test case for testing to Validate User Is Able To Reset Password Via Email functionality of the SecurePAY datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password via email functionality of the SecurePAY datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securepay
${USER_EMAIL}               user@example.com
${RESET_LINK}               reset_link
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate Reset Password Via Email
    [Documentation] Test case for validating that the user is able to reset password via email functionality of the SecurePAY datadriver
    Launch SecurePAY Application ${URL}
    Navigate To Forgot Password Page
    Enter User Email ${USER_EMAIL}
    Submit Password Reset Request
    Open Reset Link From Email ${RESET_LINK}
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Verify Password Reset Successful",This test case checks the validation for resetting user password via email functionality of the SecurePAY datadriver.,Validate User Is Able To Reset Password Via Email
Generate a robot framework test case for testing to Validate User Is Able To Change Password functionality of the SecurePay datadriver.,"*** Settings ***
Documentation    Test cases for validating the User Is Able To Change Password functionality of the SecurePay datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}             https://example.com/securepay
${USER_DETAILS}    user_details
${OLD_PASSWORD}    old_password
${NEW_PASSWORD}    new_password

*** Test Cases ***
Validate User Is Able To Change Password Functionality Of SecurePay
    [Documentation]  Test case for validating the User Is Able To Change Password functionality of the SecurePay datadriver
    Launch SecurePay Application ${URL}
    Login With Old Password ${USER_DETAILS} ${OLD_PASSWORD}
    Navigate To Change Password Page
    Enter Old Password ${OLD_PASSWORD}
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit Password Change
    Validate Password Change Successful
    Logout From SecurePay
    Login With New Password ${USER_DETAILS} ${NEW_PASSWORD}
    Validate Login Successful",This test case checks the validation for a user being able to change their password functionality of the SecurePay datadriver.,Validate User Can Change Password
Generate a robot framework test case for testing to Validate Customer Is Able To Download Payment Receipt As PDF from the PayNOW portal.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to download payment receipt as PDF from the PayNOW portal
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynow
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Download Payment Receipt As PDF
    [Documentation] Test case for validating that the customer is able to download payment receipt as PDF from the PayNOW portal
    Launch PayNow Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Access Payment History
    Download Payment Receipt As PDF
    Validate Receipt Downloaded As PDF",This test case checks the validation for downloading the payment receipt as a PDF functionality of the PayNOW portal.,Validate Download Payment Receipt As PDF
Generate a robot framework test case for testing the validation to ensure that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver.,"*** Settings ***
Documentation          Test cases for validating that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/payexpress
${CUSTOMER_DETAILS}         customer_details
${INVOICE_DETAILS}          invoice_details
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate No Duplicate Transactions For Same Invoice
    [Documentation] Test case for validating that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver
    Launch PayExpress Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Invoice Details ${INVOICE_DETAILS}
    Process Transaction ${TRANSACTION_DETAILS}
    Attempt Duplicate Transaction ${TRANSACTION_DETAILS}
    Validate Duplicate Transaction Prevented",This test case checks the validation to ensure that duplicate transactions for the same invoice cannot be processed using the PayEXPRESS datadriver.,Validate Duplicate Transactions Prevention For Same Invoice
Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details On The Dashboard functionality of the CommerceHub datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is able to view transaction details on the dashboard functionality of the CommerceHub datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/commercehub
${MERCHANT_DETAILS}         merchant_details
${TRANSACTION_DETAILS}      transaction_details

*** Test Cases ***
Validate Merchant Can View Transaction Details On Dashboard
    [Documentation] Test case for validating that the merchant is able to view transaction details on the dashboard functionality of the CommerceHub datadriver
    Launch CommerceHub Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Dashboard
    Validate Transaction Details Displayed ${TRANSACTION_DETAILS}
    Close Browser",This test case checks the validation for viewing transaction details on the dashboard functionality of the CommerceHub datadriver.,Validate View Transaction Details On Dashboard
Generate a robot framework test case for testing to Validate Merchant Is Unable To Edit Submitted Payment Requests functionality of the QuickPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to edit submitted payment requests functionality of the QuickPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/quickpay
${MERCHANT_DETAILS}         merchant_details
${SUBMITTED_PAYMENT_REQUEST}    submitted_payment_request

*** Test Cases ***
Validate Merchant Unable To Edit Submitted Payment Requests
    [Documentation] Test case for validating that the merchant is unable to edit submitted payment requests functionality of the QuickPay datadriver
    Launch QuickPay Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Navigate To Submitted Payment Request ${SUBMITTED_PAYMENT_REQUEST}
    Attempt To Edit Payment Request
    Validate Edit Not Allowed",This test case checks the validation for ensuring merchant cannot edit submitted payment requests functionality of the QuickPay datadriver.,Validate Merchant Unable To Edit Submitted Payment Requests
Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the BillPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to update billing address functionality of the BillPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billpay
${CUSTOMER_DETAILS}         customer_details
${NEW_BILLING_ADDRESS}      new_billing_address

*** Test Cases ***
Validate Customer Is Able To Update Billing Address
    [Documentation] Test case for validating that the customer is able to update billing address functionality of the BillPay datadriver
    Launch BillPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Billing Address ${NEW_BILLING_ADDRESS}
    Validate Billing Address Updated",This test case checks the validation for updating the billing address functionality of the BillPay datadriver.,Validate Customer Is Able To Update Billing Address
Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Without Entering Correct Security Code functionality of the EasyPay datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process payment without entering correct security code functionality of the EasyPay datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/easypay
${CUSTOMER_DETAILS}         customer_details
${INCORRECT_SECURITY_CODE}  incorrect_security_code

*** Test Cases ***
Validate Unable To Process Payment Without Correct Security Code
    [Documentation] Test case for validating that the customer is unable to process payment without entering correct security code functionality of the EasyPay datadriver
    Launch EasyPay Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Attempt To Process Payment Without Security Code
    Validate Unable To Process Payment
    Enter Incorrect Security Code ${INCORRECT_SECURITY_CODE}
    Attempt To Process Payment
    Validate Unable To Process Payment",This test case checks the validation for being unable to process payment without entering the correct security code functionality of the EasyPay datadriver.,Validate Unable To Process Payment Without Correct Security Code
Generate a robot framework test case for testing the ability to update customer profile details functionality of the AccountManager module.,"*** Settings ***
Documentation          Test cases for testing the ability to update customer profile details functionality of the AccountManager module
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/account-manager
${CUSTOMER_DETAILS}         customer_details
${UPDATED_DETAILS}          updated_details

*** Test Cases ***
Validate Update Customer Profile Details
    [Documentation] Test case for testing the ability to update customer profile details functionality of the AccountManager module
    Launch AccountManager Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Update Customer Profile ${UPDATED_DETAILS}
    Validate Profile Updated Successfully",This test case checks the validation for updating customer profile details in the AccountManager module.,Validate Update Customer Profile Details
Generate a robot framework test case for testing to Validate Merchant Unable to Export Transaction History Without Date Range functionality of the FinancialApp.,"*** Settings ***
Documentation          Test cases for validating that the merchant is unable to export transaction history without date range functionality of the FinancialApp
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/financialapp
${MERCHANT_DETAILS}         merchant_details

*** Test Cases ***
Validate Merchant Unable To Export Transaction History Without Date Range
    [Documentation] Test case for validating that the merchant is unable to export transaction history without date range functionality of the FinancialApp
    Launch FinancialApp Application ${URL}
    Enter Merchant Details ${MERCHANT_DETAILS}
    Attempt To Export Transaction History Without Date Range
    Validate Export Transaction History Failed",This test case checks the validation for being unable to export transaction history without selecting a date range functionality of the FinancialApp.,Validate Merchant Unable to Export Transaction History Without Date Range
Generate a robot framework test case for testing the functionality of validating a customer's ability to view detailed transaction history within the last six months in the Transacto app.,"*** Settings ***
Documentation    Test cases for validating a customer's ability to view detailed transaction history within the last six months in the Transacto app
Library          SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/transacto
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Customer Can View Detailed Transaction History Within Last Six Months
    [Documentation]    Test case for validating a customer's ability to view detailed transaction history within the last six months in the Transacto app
    Launch Transacto Application    ${URL}
    Enter Customer Details    ${CUSTOMER_DETAILS}
    Navigate To Transaction History Section
    Select Date Range As Last Six Months
    View Detailed Transaction History
    Validate Detailed Transaction History Displayed",This test case checks the validation for a customer viewing detailed transaction history within the last six months in the Transacto app.,Validate Customer Ability To View Last Six Months Transaction History
Generate a robot framework test case for testing to Validate User Is Able To Reset Password Via Email functionality of the MyPaymentApp datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to reset password via email functionality of the MyPaymentApp datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/mypaymentapp
${USER_EMAIL}               user_email
${NEW_PASSWORD}             new_password

*** Test Cases ***
Validate User Is Able To Reset Password Via Email
    [Documentation] Test case for validating that the user is able to reset password via email functionality of the MyPaymentApp datadriver
    Launch MyPaymentApp Application ${URL}
    Click On Forgot Password Link
    Enter User Email ${USER_EMAIL}
    Submit Password Reset Request
    Validate Password Reset Email Received ${USER_EMAIL}
    Open Password Reset Link From Email ${USER_EMAIL}
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${NEW_PASSWORD}
    Submit New Password
    Validate Password Successfully Reset",This test case checks the validation for a user being able to reset their password via an email link functionality of the MyPaymentApp datadriver.,Validate User Can Reset Password Via Email
Generate a robot framework test case for testing to Validate Customer Is Able To Change Password Functionality of the SecureLogin datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is able to change password functionality of the SecureLogin datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/securelogin
${CUSTOMER_DETAILS}         customer_details
${OLD_PASSWORD}             old_password
${NEW_PASSWORD}             new_password
${CONFIRM_PASSWORD}         confirm_password

*** Test Cases ***
Validate Customer Is Able To Change Password Functionality
    [Documentation] Test case for validating that the customer is able to change password functionality of the SecureLogin datadriver
    Launch SecureLogin Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Enter Old Password ${OLD_PASSWORD}
    Enter New Password ${NEW_PASSWORD}
    Confirm New Password ${CONFIRM_PASSWORD}
    Submit Change Password Request
    Validate Password Change Success Message",This test case checks the validation for changing the password functionality of the SecureLogin datadriver.,Validate Change Password Functionality
Generate a robot framework test case for testing the validation for users being unable to update their profile without entering a valid email address on the Profile Update page.,"*** Settings ***
Documentation          Test cases for validating that users are unable to update their profile without entering a valid email address on the Profile Update page
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/profile-update
${USER_DETAILS}             user_details

*** Test Cases ***
Validate Profile Update Without Valid Email Address
    [Documentation] Test case for validating that users are unable to update their profile without entering a valid email address on the Profile Update page
    Launch Profile Update Page ${URL}
    Enter User Details Without Valid Email ${USER_DETAILS}
    Attempt To Save Profile Updates
    Validate Error Message For Invalid Email",This test case checks the validation for users being unable to update their profile without entering a valid email address on the Profile Update page functionality.,Validate Unable To Update Profile Without Valid Email
Generate a robot framework test case for testing to validate that users are unable to reset their password without providing a valid email address in the MyPortal application.,"*** Settings ***
Documentation          Test cases for validating that users are unable to reset their password without providing a valid email address in the MyPortal application
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/myportal
${INVALID_EMAIL}            invalid_email

*** Test Cases ***
Validate Password Reset Without Valid Email
    [Documentation] Test case for validating that users are unable to reset their password without providing a valid email address in the MyPortal application
    Launch MyPortal Application ${URL}
    Navigate To Password Reset Page
    Enter Invalid Email ${INVALID_EMAIL}
    Submit Password Reset Request
    Validate Password Reset Fails Due To Invalid Email",This test case checks the validation for ensuring users are unable to reset their password without providing a valid email address in the MyPortal application.,Validate Password Reset Without Valid Email Address
Generate a robot framework test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver.,"*** Settings ***
Documentation    Test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver
Library          SeleniumLibrary

*** Variables ***
${URL}                       https://example.com/ecommerce
${USER_DETAILS}              user_details
${NEW_ADDRESS_DETAILS}       new_address_details

*** Test Cases ***
Validate Addition Of New Address To Shipping Address Book
    [Documentation]    Test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver
    Launch Ecommerce Application    ${URL}
    Enter User Details    ${USER_DETAILS}
    Navigate To Shipping Address Book
    Add New Address    ${NEW_ADDRESS_DETAILS}
    Validate New Address Added Successfully",This test case checks the validation for adding a new address to the user's shipping address book functionality of the Ecommerce datadriver.,Validate Adding New Address To Shipping Address Book
Generate a robot framework test case for testing to Validate Customer Unable To Process Refund For Closed Account functionality of the PayNEL datadriver.,"*** Settings ***
Documentation          Test cases for validating that the customer is unable to process refund for closed account functionality of the PayNEL datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/paynel
${CUSTOMER_DETAILS}         customer_details
${ACCOUNT_STATUS}           closed

*** Test Cases ***
Validate Unable To Process Refund For Closed Account
    [Documentation] Test case for validating that the customer is unable to process refund for closed account functionality of the PayNEL datadriver
    Launch PayNEL Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Verify Account Status ${ACCOUNT_STATUS}
    Attempt Process Refund
    Validate Refund Not Processed",This test case checks the validation for being unable to process a refund for closed accounts using the PayNEL datadriver.,Validate Unable To Process Refund For Closed Account
Generate a robot framework test case for testing the validation for retrieving the order history for a specific customer in the ShopFast datadriver.,"*** Settings ***
Documentation          Test cases for validating the retrieval of order history for a specific customer in the ShopFast datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/shopfast
${CUSTOMER_DETAILS}         customer_details

*** Test Cases ***
Validate Order History Retrieval
    [Documentation] Test case for validating the retrieval of order history for a specific customer in the ShopFast datadriver
    Launch ShopFast Application ${URL}
    Enter Customer Details ${CUSTOMER_DETAILS}
    Retrieve Order History
    Validate Order History Details",This test case checks the validation for accurately retrieving the order history details for a specific customer in the ShopFast datadriver.,Validate Retrieve Order History For Specific Customer In ShopFast
Generate a robot framework test case for testing to Validate User Is Able To Change Email Notifications Settings functionality of the BillMaster datadriver.,"*** Settings ***
Documentation          Test cases for validating that the user is able to change email notifications settings functionality of the BillMaster datadriver
Library                SeleniumLibrary

*** Variables ***
${URL}                      https://example.com/billmaster
${USER_DETAILS}             user_details
${NOTIFICATION_SETTINGS}    notification_settings

*** Test Cases ***
Validate Change Email Notifications Settings
    [Documentation] Test case for validating that the user is able to change email notifications settings functionality of the BillMaster datadriver
    Launch BillMaster Application ${URL}
    Enter User Details ${USER_DETAILS}
    Navigate To Notification Settings
    Change Email Notifications Settings ${NOTIFICATION_SETTINGS}
    Validate Email Notifications Settings Updated",This test case checks the validation for changing email notifications settings functionality of the BillMaster datadriver.,Validate Change Email Notifications Settings
