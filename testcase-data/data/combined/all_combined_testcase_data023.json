[{"Prompt":"Generate a robot framework test case for testing to Validate All Invoices Due For 61-90 Days Are Selected When Customer Clicks On 61-90 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DUE_61_90_INVOICES}       due_61_90_invoices\n\n*** Test Cases ***\nValidate 61-90 Days Due Invoices Selected\n    [Documentation] Test case for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click 61-90 Amount Link\n    Validate All 61-90 Days Due Invoices Selected ${DUE_61_90_INVOICES}","Description":"This test case checks the validation for selecting all invoices due for 61-90 days when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate 61-90 Days Due Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate AutoPay functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the AutoPay functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate AutoPay\n    [Documentation] Test case for validating the AutoPay functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Setup AutoPay ${AUTOPAY_DETAILS}\n    Validate AutoPay Setup","Description":"This test case checks the validation for AutoPay functionality of the PayNOW datadriver.","Testcase name":"Validate AutoPay","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Common API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the common API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${API_DETAILS}              api_details\n\n*** Test Cases ***\nValidate Common API\n    [Documentation] Test case for validating the common API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter API Details ${API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for common API functionality of the PayNOW datadriver.","Testcase name":"Validate Common API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the customer API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_API_DETAILS}     customer_api_details\n\n*** Test Cases ***\nValidate Customer API\n    [Documentation] Test case for validating the customer API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer API Details ${CUSTOMER_API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for customer API functionality of the PayNOW datadriver.","Testcase name":"Validate Customer API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Invoice API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the invoice API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_API_DETAILS}      invoice_api_details\n\n*** Test Cases ***\nValidate Invoice API\n    [Documentation] Test case for validating the invoice API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice API Details ${INVOICE_API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for invoice API functionality of the PayNOW datadriver.","Testcase name":"Validate Invoice API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Process Payment API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the process payment API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${PAYMENT_API_DETAILS}      payment_api_details\n\n*** Test Cases ***\nValidate Process Payment API\n    [Documentation] Test case for validating the process payment API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Payment API Details ${PAYMENT_API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for process payment API functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Scheduled Payments API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the scheduled payments API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${SCHEDULED_API_DETAILS}    scheduled_api_details\n\n*** Test Cases ***\nValidate Scheduled Payments API\n    [Documentation] Test case for validating the scheduled payments API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Scheduled API Details ${SCHEDULED_API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for scheduled payments API functionality of the PayNOW datadriver.","Testcase name":"Validate Scheduled Payments API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Common Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the common open invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${COMMON_INVOICE_DETAILS}   common_invoice_details\n\n*** Test Cases ***\nValidate Common Open Invoices\n    [Documentation] Test case for validating the common open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Common Invoice Details ${COMMON_INVOICE_DETAILS}\n    Validate Open Invoices Displayed","Description":"This test case checks the validation for common open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Common Open Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the customer payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_PAYMENT_DETAILS} customer_payment_details\n\n*** Test Cases ***\nValidate Customer Payment\n    [Documentation] Test case for validating the customer payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Payment Details ${CUSTOMER_PAYMENT_DETAILS}\n    Validate Payment Processed","Description":"This test case checks the validation for customer payment functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the integrated open invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INTEGRATED_INVOICE_DETAILS} integrated_invoice_details\n\n*** Test Cases ***\nValidate Integrated Open Invoices\n    [Documentation] Test case for validating the integrated open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Integrated Invoice Details ${INTEGRATED_INVOICE_DETAILS}\n    Validate Open Invoices Displayed","Description":"This test case checks the validation for integrated open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Integrated Open Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Payment Status functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the payment status functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${PAYMENT_STATUS_DETAILS}   payment_status_details\n\n*** Test Cases ***\nValidate Payment Status\n    [Documentation] Test case for validating the payment status functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Payment Status Details ${PAYMENT_STATUS_DETAILS}\n    Validate Payment Status Displayed","Description":"This test case checks the validation for payment status functionality of the PayNOW datadriver.","Testcase name":"Validate Payment Status","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non-Integrated Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the non-integrated open invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${NONINTEGRATED_INVOICE_DETAILS} nonintegrated_invoice_details\n\n*** Test Cases ***\nValidate Non-Integrated Open Invoices\n    [Documentation] Test case for validating the non-integrated open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Non-Integrated Invoice Details ${NONINTEGRATED_INVOICE_DETAILS}\n    Validate Open Invoices Displayed","Description":"This test case checks the validation for non-integrated open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Non-Integrated Open Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate User Login functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the user login functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${USER_LOGIN_DETAILS}       user_login_details\n\n*** Test Cases ***\nValidate User Login\n    [Documentation] Test case for validating the user login functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter User Login Details ${USER_LOGIN_DETAILS}\n    Validate Login Successful","Description":"This test case checks the validation for user login functionality of the PayNOW datadriver.","Testcase name":"Validate User Login","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Omnicorp Autopay functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the omnicorp autopay functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${OMNICORP_AUTOPAY_DETAILS} omnicorp_autopay_details\n\n*** Test Cases ***\nValidate Omnicorp Autopay\n    [Documentation] Test case for validating the omnicorp autopay functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Omnicorp Autopay Details ${OMNICORP_AUTOPAY_DETAILS}\n    Validate Autopay Setup","Description":"This test case checks the validation for omnicorp autopay functionality of the PayNOW datadriver.","Testcase name":"Validate Omnicorp Autopay","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Omnicorp Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the omnicorp open invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${OMNICORP_INVOICE_DETAILS} omnicorp_invoice_details\n\n*** Test Cases ***\nValidate Omnicorp Open Invoices\n    [Documentation] Test case for validating the omnicorp open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Omnicorp Invoice Details ${OMNICORP_INVOICE_DETAILS}\n    Validate Open Invoices Displayed","Description":"This test case checks the validation for omnicorp open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Omnicorp Open Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Omnicorp Scheduled Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the omnicorp scheduled payments functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${OMNICORP_SCHEDULED_DETAILS} omnicorp_scheduled_details\n\n*** Test Cases ***\nValidate Omnicorp Scheduled Payments\n    [Documentation] Test case for validating the omnicorp scheduled payments functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Omnicorp Scheduled Details ${OMNICORP_SCHEDULED_DETAILS}\n    Validate Scheduled Payments","Description":"This test case checks the validation for omnicorp scheduled payments functionality of the PayNOW datadriver.","Testcase name":"Validate Omnicorp Scheduled Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Common API functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the common API functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${API_DETAILS}              api_details\n\n*** Test Cases ***\nValidate Common API\n    [Documentation] Test case for validating the common API functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter API Details ${API_DETAILS}\n    Validate API Response","Description":"This test case checks the validation for common API functionality of the PayNOW datadriver.","Testcase name":"Validate Common API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Unable To Create AutoPay For The Invoices that Past 500 days functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Unable To Create AutoPay For The Invoices that Past 500 days\n    [Documentation] Test case for validating that the customer is unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Create AutoPay For Past 500 Days Invoices ${INVOICE_DETAILS}\n    Validate Unable To Create AutoPay","Description":"This test case checks the validation for being unable to create AutoPay for the invoices that past 500 days functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Create AutoPay For The Invoices that Past 500 days","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Unable To Create AutoPay For The Invoices That Due More Than 31 Days functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Unable To Create AutoPay For The Invoices That Due More Than 31 Days\n    [Documentation] Test case for validating that the customer is unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Create AutoPay For Due More Than 31 Days Invoices ${INVOICE_DETAILS}\n    Validate Unable To Create AutoPay","Description":"This test case checks the validation for being unable to create AutoPay for the invoices that due more than 31 days functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Create AutoPay For The Invoices That Due More Than 31 Days","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay Payments On A Daily Basis functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule AutoPay payments on a daily basis functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Schedule AutoPay Payments On A Daily Basis\n    [Documentation] Test case for validating that the customer is able to schedule AutoPay payments on a daily basis functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule AutoPay Payments On A Daily Basis ${AUTOPAY_DETAILS}\n    Validate AutoPay Scheduled","Description":"This test case checks the validation for scheduling AutoPay payments on a daily basis functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule AutoPay Payments On A Daily Basis","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay For Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule AutoPay for credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Schedule AutoPay For Credit Card\n    [Documentation] Test case for validating that the customer is able to schedule AutoPay for credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule AutoPay For Credit Card ${AUTOPAY_DETAILS}\n    Validate AutoPay Scheduled","Description":"This test case checks the validation for scheduling AutoPay for credit card functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule AutoPay For Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay For Debit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule AutoPay for debit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Schedule AutoPay For Debit Card\n    [Documentation] Test case for validating that the customer is able to schedule AutoPay for debit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule AutoPay For Debit Card ${AUTOPAY_DETAILS}\n    Validate AutoPay Scheduled","Description":"This test case checks the validation for scheduling AutoPay for debit card functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule AutoPay For Debit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Delete Saved AutoPay Schedule functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to delete saved AutoPay schedule functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Delete Saved AutoPay Schedule\n    [Documentation] Test case for validating that the customer is able to delete saved AutoPay schedule functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Delete Saved AutoPay Schedule ${AUTOPAY_DETAILS}\n    Validate AutoPay Schedule Deleted","Description":"This test case checks the validation for deleting saved AutoPay schedule functionality of the PayNOW datadriver.","Testcase name":"Validate Delete Saved AutoPay Schedule","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule AutoPay Payments on a Designated Monthly Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule AutoPay payments on a designated monthly date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Schedule AutoPay Payments on a Designated Monthly Date\n    [Documentation] Test case for validating that the customer is able to schedule AutoPay payments on a designated monthly date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule AutoPay Payments on a Designated Monthly Date ${AUTOPAY_DETAILS}\n    Validate AutoPay Scheduled","Description":"This test case checks the validation for scheduling AutoPay payments on a designated monthly date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule AutoPay Payments on a Designated Monthly Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details\n\n*** Test Cases ***\nValidate Process The Lump Sum Payment\n    [Documentation] Test case for validating that the non-integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}\n    Validate Payment Processed","Description":"This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.","Testcase name":"Validate Process The Lump Sum Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Payment Only Against The Selected Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to process the payment only against the selected invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SELECTED_INVOICE_DETAILS} selected_invoice_details\n\n*** Test Cases ***\nValidate Process Payment Only Against The Selected Invoice\n    [Documentation] Test case for validating that the non-integrated customer is able to process the payment only against the selected invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Invoice For Payment ${SELECTED_INVOICE_DETAILS}\n    Process Payment\n    Validate Payment Processed Only For Selected Invoice","Description":"This test case checks the validation for processing the payment only against the selected invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Only Against The Selected Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Unable To Process The Payment Without Entering Routing Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is unable to process the payment without entering routing number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable To Process Payment Without Entering Routing Number\n    [Documentation] Test case for validating that the non-integrated customer is unable to process the payment without entering routing number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Payment Without Routing Number\n    Validate Unable To Process Payment","Description":"This test case checks the validation for being unable to process the payment without entering routing number functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Payment Without Entering Routing Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Remove Selected Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to remove selected invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SELECTED_INVOICE_DETAILS} selected_invoice_details\n\n*** Test Cases ***\nValidate Remove Selected Invoice\n    [Documentation] Test case for validating that the non-integrated customer is able to remove selected invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Invoice For Removal ${SELECTED_INVOICE_DETAILS}\n    Remove Selected Invoice\n    Validate Invoice Removed","Description":"This test case checks the validation for removing selected invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Remove Selected Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Default Checkbox States For Payment Authorization And Send-Email Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating the default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Default Checkbox States\n    [Documentation] Test case for validating the default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Validate Default Checkbox States","Description":"This test case checks the validation for default checkbox states for payment authorization and send-email receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Default Checkbox States","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Without Selecting Payment Authorization functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process payment without selecting payment authorization functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable To Process Payment Without Selecting Payment Authorization\n    [Documentation] Test case for validating that the customer is unable to process payment without selecting payment authorization functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Payment Without Selecting Payment Authorization\n    Validate Unable To Process Payment","Description":"This test case checks the validation for being unable to process payment without selecting payment authorization functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Payment Without Selecting Payment Authorization","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Payment Authorization Screen After Clicking On Payment Authorization Link functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate To Payment Authorization Screen\n    [Documentation] Test case for validating that the customer is able to navigate to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click On Payment Authorization Link\n    Validate Navigation To Payment Authorization Screen","Description":"This test case checks the validation for navigating to payment authorization screen after clicking on payment authorization link functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Payment Authorization Screen","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Process The Payment Only Against The Selected Invoice Using ACHoreCheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to process the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SELECTED_INVOICE_DETAILS} selected_invoice_details\n\n*** Test Cases ***\nValidate Process Payment Only Against The Selected Invoice Using ACHoreCheck\n    [Documentation] Test case for validating that the non-integrated customer is able to process the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Invoice For Payment ${SELECTED_INVOICE_DETAILS}\n    Process Payment Using ACHoreCheck\n    Validate Payment Processed Only For Selected Invoice","Description":"This test case checks the validation for processing the payment only against the selected invoice using ACHoreCheck functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Only Against The Selected Invoice Using ACHoreCheck","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Add Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to add multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Add Multiple Invoices\n    [Documentation] Test case for validating that the non-integrated customer is able to add multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Add Multiple Invoices ${INVOICE_DETAILS}\n    Validate Multiple Invoices Added","Description":"This test case checks the validation for adding multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Add Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Differential Surcharge Amount Applied When Colorado State Is Selected functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the differential surcharge amount is applied when Colorado state is selected functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${STATE_DETAILS}            state_details\n\n*** Test Cases ***\nValidate Differential Surcharge Amount Applied When Colorado State Is Selected\n    [Documentation] Test case for validating that the differential surcharge amount is applied when Colorado state is selected functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Colorado State ${STATE_DETAILS}\n    Validate Differential Surcharge Amount Applied","Description":"This test case checks the validation for differential surcharge amount being applied when Colorado state is selected functionality of the PayNOW datadriver.","Testcase name":"Validate Differential Surcharge Amount Applied When Colorado State Is Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate For The Invoices Which Are NOT Selected For Removing, The Invoice Details Are NOT Changed functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that for the invoices which are not selected for removing, the invoice details are not changed functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Invoice Details Not Changed For Unselected Invoices\n    [Documentation] Test case for validating that for the invoices which are not selected for removing, the invoice details are not changed functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Remove Selected Invoices\n    Validate Invoice Details Not Changed For Unselected Invoices ${INVOICE_DETAILS}","Description":"This test case checks the validation for the invoice details not being changed for the invoices which are not selected for removing functionality of the PayNOW datadriver.","Testcase name":"Validate Invoice Details Not Changed For Unselected Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Gets A Message That Surcharge Can Be Avoided By Paying With ACH Or Debit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer gets a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Surcharge Avoided Message\n    [Documentation] Test case for validating that the non-integrated customer gets a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Payment\n    Validate Surcharge Avoided Message Displayed","Description":"This test case checks the validation for getting a message that surcharge can be avoided by paying with ACH or debit card functionality of the PayNOW datadriver.","Testcase name":"Validate Surcharge Avoided Message","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Select Account Type For ACHoreCheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to select account type for ACHoreCheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${ACCOUNT_TYPE}             account_type\n\n*** Test Cases ***\nValidate Select Account Type For ACHoreCheck\n    [Documentation] Test case for validating that the non-integrated customer is able to select account type for ACHoreCheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Account Type For ACHoreCheck ${ACCOUNT_TYPE}\n    Validate Account Type Selected","Description":"This test case checks the validation for selecting account type for ACHoreCheck functionality of the PayNOW datadriver.","Testcase name":"Validate Select Account Type For ACHoreCheck","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Navigate Back From ACHoreCheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to navigate back from ACHoreCheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate Back From ACHoreCheck\n    [Documentation] Test case for validating that the non-integrated customer is able to navigate back from ACHoreCheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate Back From ACHoreCheck\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating back from ACHoreCheck functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate Back From ACHoreCheck","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able To Navigate Back From Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to navigate back from credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate Back From Credit Card\n    [Documentation] Test case for validating that the non-integrated customer is able to navigate back from credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate Back From Credit Card\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating back from credit card functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate Back From Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Surcharge Amount Is Re-Calculated When Customer Changes The State functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the surcharge amount is re-calculated when customer changes the state functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${STATE_DETAILS}            state_details\n\n*** Test Cases ***\nValidate Surcharge Amount Re-Calculated When Customer Changes The State\n    [Documentation] Test case for validating that the surcharge amount is re-calculated when customer changes the state functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Change State ${STATE_DETAILS}\n    Validate Surcharge Amount Re-Calculated","Description":"This test case checks the validation for re-calculating the surcharge amount when customer changes the state functionality of the PayNOW datadriver.","Testcase name":"Validate Surcharge Amount Re-Calculated When Customer Changes The State","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Non Integrated Customer Is Able Create Multiple Invoices And Clear All Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the non-integrated customer is able to create multiple invoices and clear all invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Create Multiple Invoices And Clear All Invoices\n    [Documentation] Test case for validating that the non-integrated customer is able to create multiple invoices and clear all invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Create Multiple Invoices ${INVOICE_DETAILS}\n    Clear All Invoices\n    Validate Multiple Invoices Created And Cleared","Description":"This test case checks the validation for creating multiple invoices and clearing all invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Create Multiple Invoices And Clear All Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able Send Invoice Receipt To The Given Email Address functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to send invoice receipt to the given email address functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${EMAIL_ADDRESS}            email_address\n\n*** Test Cases ***\nValidate Send Invoice Receipt To The Given Email Address\n    [Documentation] Test case for validating that the customer is able to send invoice receipt to the given email address functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Email Address ${EMAIL_ADDRESS}\n    Send Invoice Receipt\n    Validate Invoice Receipt Sent","Description":"This test case checks the validation for sending invoice receipt to the given email address functionality of the PayNOW datadriver.","Testcase name":"Validate Send Invoice Receipt To The Given Email Address","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To See Terms Conditions And Privacy Policy Screen functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to see terms, conditions, and privacy policy screen functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate See Terms Conditions And Privacy Policy Screen\n    [Documentation] Test case for validating that the customer is able to see terms, conditions, and privacy policy screen functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Terms Conditions And Privacy Policy Screen\n    Validate Terms Conditions And Privacy Policy Screen Displayed","Description":"This test case checks the validation for seeing terms, conditions, and privacy policy screen functionality of the PayNOW datadriver.","Testcase name":"Validate See Terms Conditions And Privacy Policy Screen","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Signout From The Payment Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to signout from the payment receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Signout From The Payment Receipt\n    [Documentation] Test case for validating that the customer is able to signout from the payment receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Receipt\n    Signout\n    Validate Signout Successful","Description":"This test case checks the validation for signing out from the payment receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Signout From The Payment Receipt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To The Customer Invoice Referral Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to the customer invoice referral page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate To The Customer Invoice Referral Page\n    [Documentation] Test case for validating that the customer is able to navigate to the customer invoice referral page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Customer Invoice Referral Page\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to the customer invoice referral page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To The Customer Invoice Referral Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Transaction With Negative Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process transaction with negative amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With Negative Amount\n    [Documentation] Test case for validating that the customer is unable to process transaction with negative amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Transaction With Negative Amount\n    Validate Unable To Process Transaction","Description":"This test case checks the validation for being unable to process transaction with negative amount functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With Negative Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Application Sends Message If The State Field Is NOT Selected functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the application sends message if the state field is not selected functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Message Sent If State Field Is NOT Selected\n    [Documentation] Test case for validating that the application sends message if the state field is not selected functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Transaction Without Selecting State\n    Validate Message Sent If State Field Is NOT Selected","Description":"This test case checks the validation for sending a message if the state field is not selected functionality of the PayNOW datadriver.","Testcase name":"Validate Message Sent If State Field Is NOT Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Past Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment for past invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment For Past Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment for past invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment For Past Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment for past invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment For Past Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Current Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment for current invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment For Current Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment for current invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment For Current Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment for current invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment For Current Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment For Future Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment for future invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment For Future Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment for future invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment For Future Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment for future invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment For Future Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Current Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment To Multiple Invoices For Current Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment To Multiple Invoices For Current Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment to multiple invoices for current invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment To Multiple Invoices For Current Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Past Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment To Multiple Invoices For Past Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment To Multiple Invoices For Past Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment to multiple invoices for past invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment To Multiple Invoices For Past Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices For Future Invoice Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment To Multiple Invoices For Future Invoice Due Date\n    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment To Multiple Invoices For Future Invoice Due Date ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment to multiple invoices for future invoice due date functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment To Multiple Invoices For Future Invoice Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to schedule payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates\n    [Documentation] Test case for validating that the customer is able to schedule payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates ${PAYMENT_DETAILS}\n    Validate Payment Scheduled","Description":"This test case checks the validation for scheduling payment to multiple invoices with multiple invoice due dates functionality of the PayNOW datadriver.","Testcase name":"Validate Schedule Payment To Multiple Invoices With Multiple Invoice Due Dates","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Scheduled Payment Date And Origin In Scheduled Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate View Scheduled Payment Date And Origin In Scheduled Payments\n    [Documentation] Test case for validating that the customer is able to view scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    View Scheduled Payment Date And Origin In Scheduled Payments\n    Validate Scheduled Payment Date And Origin Displayed","Description":"This test case checks the validation for viewing scheduled payment date and origin in scheduled payments functionality of the PayNOW datadriver.","Testcase name":"Validate View Scheduled Payment Date And Origin In Scheduled Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Page In Schedule Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoice page in schedule payments functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Page In Schedule Payments\n    [Documentation] Test case for validating that the merchant is able to navigate to invoice page in schedule payments functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Page In Schedule Payments\n    Validate Navigation To Invoice Page","Description":"This test case checks the validation for navigating to invoice page in schedule payments functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Page In Schedule Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Filter With Customer Number In Failed PayNOW Logins functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to filter with customer number in failed PayNOW logins functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate Filter With Customer Number In Failed PayNOW Logins\n    [Documentation]    Test case for validating that the merchant is able to filter with customer number in failed PayNOW logins functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Filter With Customer Number In Failed PayNOW Logins","Description":"This test case checks the validation for filtering with customer number in failed PayNOW logins functionality of the PayNOW datadriver.","Testcase name":"Validate Filter With Customer Number In Failed PayNOW Logins","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Number Of Recent And Total Login Failed Attempts functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to view number of recent and total login failed attempts functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate View Number Of Recent And Total Login Failed Attempts\n    [Documentation]    Test case for validating that the merchant is able to view number of recent and total login failed attempts functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    View Number Of Recent And Total Login Failed Attempts","Description":"This test case checks the validation for viewing number of recent and total login failed attempts functionality of the PayNOW datadriver.","Testcase name":"Validate View Number Of Recent And Total Login Failed Attempts","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Expand And Collapse Customer Details In Failed PayNOW Logins functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to expand and collapse customer details in failed PayNOW logins functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate Expand And Collapse Customer Details In Failed PayNOW Logins\n    [Documentation]    Test case for validating that the merchant is able to expand and collapse customer details in failed PayNOW logins functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Expand And Collapse Customer Details In Failed PayNOW Logins","Description":"This test case checks the validation for expanding and collapsing customer details in failed PayNOW logins functionality of the PayNOW datadriver.","Testcase name":"Validate Expand And Collapse Customer Details In Failed PayNOW Logins","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View First And Last Login Failed Attempt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to view first and last login failed attempt functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate View First And Last Login Failed Attempt\n    [Documentation]    Test case for validating that the merchant is able to view first and last login failed attempt functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    View First And Last Login Failed Attempt","Description":"This test case checks the validation for viewing first and last login failed attempt functionality of the PayNOW datadriver.","Testcase name":"Validate View First And Last Login Failed Attempt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Create And View Scheduled Payment Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to create and view scheduled payment details functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate Create And View Scheduled Payment Details\n    [Documentation]    Test case for validating that the merchant is able to create and view scheduled payment details functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Create Scheduled Payment\n    View Scheduled Payment Details","Description":"This test case checks the validation for creating and viewing scheduled payment details functionality of the PayNOW datadriver.","Testcase name":"Validate Create And View Scheduled Payment Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Scheduled Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to navigate to customer details from scheduled payments functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate Navigate To Customer Details From Scheduled Payments\n    [Documentation]    Test case for validating that the merchant is able to navigate to customer details from scheduled payments functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Navigate To Customer Details From Scheduled Payments","Description":"This test case checks the validation for navigating to customer details from scheduled payments functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Customer Details From Scheduled Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Scheduled Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to navigate to invoice details page from scheduled payments functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Details Page From Scheduled Payments\n    [Documentation]    Test case for validating that the merchant is able to navigate to invoice details page from scheduled payments functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Navigate To Invoice Details Page From Scheduled Payments","Description":"This test case checks the validation for navigating to invoice details page from scheduled payments functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Details Page From Scheduled Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount For LumpSum functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With More Than Due Amount For LumpSum\n    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With More Than Due Amount For LumpSum\n    Validate Transaction Rejected","Description":"This test case checks the validation for being unable to process transaction with more than due amount for LumpSum functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With More Than Due Amount For LumpSum","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount for Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With More Than Due Amount for Specific Invoice\n    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With More Than Due Amount for Specific Invoice\n    Validate Transaction Rejected","Description":"This test case checks the validation for being unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Searched With Customer Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Searched With Customer Number\n    [Documentation] Test case for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Search With Customer Number\n    Validate Search Results","Description":"This test case checks the validation for viewing searched with customer number functionality of the PayNOW datadriver.","Testcase name":"Validate View Searched With Customer Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With Negative Amount Due In Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With Negative Amount Due In Specific Invoice\n    [Documentation] Test case for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With Negative Amount Due In Specific Invoice\n    Validate Transaction Rejected","Description":"This test case checks the validation for being unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Exempt Is Applied For Customer In Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Exempt Applied In Virtual Terminal","Description":"This test case checks the validation for viewing surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge And Change In Total Amount After Selecting Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge And Change In Total Amount After Selecting Multiple Invoices\n    [Documentation] Test case for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select Multiple Invoices\n    View Surcharge And Change In Total Amount","Description":"This test case checks the validation for viewing surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In PayNOW functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Exempt Is Applied For Customer In PayNOW\n    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Exempt Applied In PayNOW","Description":"This test case checks the validation for viewing surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Exempt Is Applied For Customer In PayNOW","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count And Status For Successful Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoices count and status for successful transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoices Count And Status For Successful Transaction\n    [Documentation] Test case for validating that the merchant is able to view invoices count and status for successful transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoices Count And Status For Successful Transaction","Description":"This test case checks the validation for viewing invoices count and status for successful transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices Count And Status For Successful Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count And Status For Declined Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoices count and status for declined transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoices Count And Status For Declined Transaction\n    [Documentation] Test case for validating that the merchant is able to view invoices count and status for declined transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoices Count And Status For Declined Transaction","Description":"This test case checks the validation for viewing invoices count and status for declined transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices Count And Status For Declined Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details after Processing From PayNow functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction details after processing from PayNow functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Details After Processing From PayNow\n    [Documentation] Test case for validating that the merchant is able to view transaction details after processing from PayNow functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Details After Processing From PayNow","Description":"This test case checks the validation for viewing transaction details after processing from PayNow functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Details After Processing From PayNow","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Method After ACH Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view method after ACH transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Method After ACH Transaction\n    [Documentation] Test case for validating that the merchant is able to view method after ACH transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Method After ACH Transaction","Description":"This test case checks the validation for viewing method after ACH transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Method After ACH Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Total Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view total invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Total Invoices\n    [Documentation] Test case for validating that the merchant is able to view total invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Total Invoices","Description":"This test case checks the validation for viewing total invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Total Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email For the Selected Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send email for the selected invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Send Email For the Selected Invoice\n    [Documentation] Test case for validating that the merchant is able to send email for the selected invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send Email For the Selected Invoice","Description":"This test case checks the validation for sending email for the selected invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Send Email For the Selected Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send A Copy Of Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send a copy of receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Send A Copy Of Receipt\n    [Documentation] Test case for validating that the merchant is able to send a copy of receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send A Copy Of Receipt","Description":"This test case checks the validation for sending a copy of receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Send A Copy Of Receipt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email for Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send email for multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Send Email for Multiple Invoices\n    [Documentation] Test case for validating that the merchant is able to send email for multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send Email for Multiple Invoices","Description":"This test case checks the validation for sending email for multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Send Email for Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Invoice Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to cancel send invoice receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Cancel Send Invoice Receipt\n    [Documentation] Test case for validating that the merchant is able to cancel send invoice receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Cancel Send Invoice Receipt","Description":"This test case checks the validation for canceling send invoice receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Cancel Send Invoice Receipt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Transaction Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to transaction details from transaction tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Transaction Details From Transaction Tab\n    [Documentation] Test case for validating that the merchant is able to navigate to transaction details from transaction tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Transaction Details From Transaction Tab","Description":"This test case checks the validation for navigating to transaction details from transaction tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Transaction Details From Transaction Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to validate credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer\n    [Documentation] Test case for validating that the merchant is able to validate credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer","Description":"This test case checks the validation for credit card surcharge after enabling and disabling exempt surcharge for a customer functionality of the PayNOW datadriver.","Testcase name":"Validate Credit Card Surcharge After Enabling And Disabling Exempt Surcharge for A Customer","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Invoice Email After Enabling And Disabling PDF Setting functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to validate invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Invoice Email After Enabling And Disabling PDF Setting\n    [Documentation] Test case for validating that the merchant is able to validate invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Validate Invoice Email After Enabling And Disabling PDF Setting","Description":"This test case checks the validation for invoice email after enabling and disabling PDF setting functionality of the PayNOW datadriver.","Testcase name":"Validate Invoice Email After Enabling And Disabling PDF Setting","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Enable And Disable Override Payment Method By Customer functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to enable and disable override payment method by customer functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Enable And Disable Override Payment Method By Customer\n    [Documentation] Test case for validating that the merchant is able to enable and disable override payment method by customer functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enable And Disable Override Payment Method By Customer","Description":"This test case checks the validation for enabling and disabling override payment method by customer functionality of the PayNOW datadriver.","Testcase name":"Validate Enable And Disable Override Payment Method By Customer","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Enable And Disable Customize By Transaction Source functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to enable and disable customize by transaction source functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Enable And Disable Customize By Transaction Source\n    [Documentation] Test case for validating that the merchant is able to enable and disable customize by transaction source functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enable And Disable Customize By Transaction Source","Description":"This test case checks the validation for enabling and disabling customize by transaction source functionality of the PayNOW datadriver.","Testcase name":"Validate Enable And Disable Customize By Transaction Source","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Number And Email Format In Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice number and email format in email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Number And Email Format In Email Details\n    [Documentation] Test case for validating that the merchant is able to view invoice number and email format in email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Number And Email Format In Email Details","Description":"This test case checks the validation for viewing invoice number and email format in email details functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Number And Email Format In Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Provider Response Message And Date Sent In Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view provider response message and date sent in email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Provider Response Message And Date Sent In Email Details\n    [Documentation] Test case for validating that the merchant is able to view provider response message and date sent in email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Provider Response Message And Date Sent In Email Details","Description":"This test case checks the validation for viewing provider response message and date sent in email details functionality of the PayNOW datadriver.","Testcase name":"Validate View Provider Response Message And Date Sent In Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Multiple Invoices Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view multiple invoices email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Multiple Invoices Email Details\n    [Documentation] Test case for validating that the merchant is able to view multiple invoices email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Multiple Invoices Email Details","Description":"This test case checks the validation for viewing multiple invoices email details functionality of the PayNOW datadriver.","Testcase name":"Validate View Multiple Invoices Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Account Number In Custom Fields functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view account number in custom fields functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Account Number In Custom Fields\n    [Documentation] Test case for validating that the merchant is able to view account number in custom fields functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Account Number In Custom Fields","Description":"This test case checks the validation for viewing account number in custom fields functionality of the PayNOW datadriver.","Testcase name":"Validate View Account Number In Custom Fields","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Enter Amount To Pay And Notes In Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to enter amount to pay and notes in specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Enter Amount To Pay And Notes In Specific Invoice\n    [Documentation] Test case for validating that the merchant is able to enter amount to pay and notes in specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enter Amount To Pay And Notes In Specific Invoice","Description":"This test case checks the validation for entering amount to pay and notes in specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Enter Amount To Pay And Notes In Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Total Amount Is Updated As Per The changes in Invoices Due Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Total Amount Is Updated As Per The changes in Invoices Due Amount\n    [Documentation] Test case for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Validate Total Amount Is Updated As Per The changes in Invoices Due Amount","Description":"This test case checks the validation for updating total amount as per the changes in invoices due amount functionality of the PayNOW datadriver.","Testcase name":"Validate Total Amount Is Updated As Per The changes in Invoices Due Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count In Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice count in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Count In Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to view invoice count in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Count In Virtual Terminal","Description":"This test case checks the validation for viewing invoice count in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Count In Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Apply To Oldest functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to process payment by selecting apply to oldest functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Process Payment By Selecting Apply To Oldest\n    [Documentation] Test case for validating that the merchant is able to process payment by selecting apply to oldest functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select Apply To Oldest\n    Process Payment","Description":"This test case checks the validation for processing payment by selecting apply to oldest functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment By Selecting Apply To Oldest","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Non-Applied Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to process payment by selecting non-applied payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Process Payment By Selecting Non-Applied Payment\n    [Documentation] Test case for validating that the merchant is able to process payment by selecting non-applied payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select Non-Applied Payment\n    Process Payment","Description":"This test case checks the validation for processing payment by selecting non-applied payment functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment By Selecting Non-Applied Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment By Selecting Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to process payment by selecting specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Process Payment By Selecting Specific Invoice\n    [Documentation] Test case for validating that the merchant is able to process payment by selecting specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select Specific Invoice\n    Process Payment","Description":"This test case checks the validation for processing payment by selecting specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment By Selecting Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details after Processing Form Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction details after processing form virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Details After Processing Form Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to view transaction details after processing form virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Details After Processing","Description":"This test case checks the validation for viewing transaction details after processing form virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Details After Processing Form Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Saved Credit Card Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view saved credit card details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Saved Credit Card Details\n    [Documentation] Test case for validating that the merchant is able to view saved credit card details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Saved Credit Card Details","Description":"This test case checks the validation for viewing saved credit card details functionality of the PayNOW datadriver.","Testcase name":"Validate View Saved Credit Card Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Saved ACH Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view saved ACH details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Saved ACH Details\n    [Documentation] Test case for validating that the merchant is able to view saved ACH details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Saved ACH Details","Description":"This test case checks the validation for viewing saved ACH details functionality of the PayNOW datadriver.","Testcase name":"Validate View Saved ACH Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Process Payment Through Saved Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to process payment through saved payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Process Payment Through Saved Payment Method\n    [Documentation] Test case for validating that the merchant is able to process payment through saved payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Payment Through Saved Payment Method","Description":"This test case checks the validation for processing payment through saved payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Through Saved Payment Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Delete Saved Payment Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to delete saved payment details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Delete Saved Payment Details\n    [Documentation] Test case for validating that the merchant is able to delete saved payment details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Delete Saved Payment Details","Description":"This test case checks the validation for deleting saved payment details functionality of the PayNOW datadriver.","Testcase name":"Validate Delete Saved Payment Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoices Tab And View Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoices tab and view open invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoices Tab And View Open Invoices\n    [Documentation] Test case for validating that the merchant is able to navigate to invoices tab and view open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoices Tab\n    View Open Invoices","Description":"This test case checks the validation for navigating to invoices tab and viewing open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoices Tab And View Open Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Only Past Due Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view only past due invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Only Past Due Invoices\n    [Documentation] Test case for validating that the merchant is able to view only past due invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Only Past Due Invoices","Description":"This test case checks the validation for viewing only past due invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Only Past Due Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Page From Invoice Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoice page from invoice tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Page From Invoice Tab\n    [Documentation] Test case for validating that the merchant is able to navigate to invoice page from invoice tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Page From Invoice Tab","Description":"This test case checks the validation for navigating to invoice page from invoice tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Page From Invoice Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Delivery Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoice delivery tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Delivery Tab\n    [Documentation] Test case for validating that the merchant is able to navigate to invoice delivery tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Delivery Tab","Description":"This test case checks the validation for navigating to invoice delivery tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Delivery Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Change Data Range After Selecting All For Time Period Select Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to change data range after selecting all for time period select invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Change Data Range After Selecting All For Time Period Select Invoices\n    [Documentation] Test case for validating that the merchant is able to change data range after selecting all for time period select invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Change Data Range After Selecting All For Time Period Select Invoices","Description":"This test case checks the validation for changing data range after selecting all for time period select invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Change Data Range After Selecting All For Time Period Select Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Disable Send Email Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to disable send email receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Disable Send Email Receipt\n    [Documentation] Test case for validating that the merchant is able to disable send email receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Disable Send Email Receipt","Description":"This test case checks the validation for disabling send email receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Disable Send Email Receipt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Email Receipt In Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send email receipt in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Send Email Receipt In Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to send email receipt in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send Email Receipt In Virtual Terminal","Description":"This test case checks the validation for sending email receipt in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate Send Email Receipt In Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To get Error Message When Process Payment Without Selecting Country functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to get error message when process payment without selecting country functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Error Message When Process Payment Without Selecting Country\n    [Documentation] Test case for validating that the merchant is able to get error message when process payment without selecting country functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Payment Without Selecting Country\n    Validate Error Message","Description":"This test case checks the validation for getting an error message when processing payment without selecting country functionality of the PayNOW datadriver.","Testcase name":"Validate Error Message When Process Payment Without Selecting Country","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Error Message When Process Payment Without Entering Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view error message when process payment without entering amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Error Message When Process Payment Without Entering Amount\n    [Documentation] Test case for validating that the merchant is able to view error message when process payment without entering amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Payment Without Entering Amount\n    Validate Error Message","Description":"This test case checks the validation for viewing an error message when processing payment without entering amount functionality of the PayNOW datadriver.","Testcase name":"Validate Error Message When Process Payment Without Entering Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Resend Receipt With Valid Email id In virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to resend receipt with valid email id in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Resend Receipt With Valid Email id In virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to resend receipt with valid email id in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Resend Receipt With Valid Email id In virtual Terminal","Description":"This test case checks the validation for resending receipt with valid email id in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate Resend Receipt With Valid Email id In virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Resend Receipt functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to cancel resend receipt functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Cancel Resend Receipt\n    [Documentation] Test case for validating that the merchant is able to cancel resend receipt functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Cancel Resend Receipt","Description":"This test case checks the validation for cancelling resend receipt functionality of the PayNOW datadriver.","Testcase name":"Validate Cancel Resend Receipt","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send A Copy Email Receipt In virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send a copy email receipt in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Send A Copy Email Receipt In virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to send a copy email receipt in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send A Copy Email Receipt In virtual Terminal","Description":"This test case checks the validation for sending a copy email receipt in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate Send A Copy Email Receipt In virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able Close Transaction Confirmation Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to close transaction confirmation page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Close Transaction Confirmation Page\n    [Documentation] Test case for validating that the merchant is able to close transaction confirmation page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Close Transaction Confirmation Page","Description":"This test case checks the validation for closing transaction confirmation page functionality of the PayNOW datadriver.","Testcase name":"Validate Close Transaction Confirmation Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Resent Invoice Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to resent invoice tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Resent Invoice Tab\n    [Documentation] Test case for validating that the merchant is able to navigate to resent invoice tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Resent Invoice Tab","Description":"This test case checks the validation for navigating to resent invoice tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Resent Invoice Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Add Record functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to add record functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Add Record\n    [Documentation] Test case for validating that the merchant is able to add record functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Add Record","Description":"This test case checks the validation for adding record functionality of the PayNOW datadriver.","Testcase name":"Validate Add Record","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Prevent Override functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to prevent override functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Prevent Override\n    [Documentation] Test case for validating that the merchant is able to prevent override functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Prevent Override","Description":"This test case checks the validation for preventing override functionality of the PayNOW datadriver.","Testcase name":"Validate Prevent Override","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Edit Record functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to edit record functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Edit Record\n    [Documentation] Test case for validating that the merchant is able to edit record functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Edit Record","Description":"This test case checks the validation for editing record functionality of the PayNOW datadriver.","Testcase name":"Validate Edit Record","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Data With Date Filter In Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice data with date filter in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Data With Date Filter In Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to view invoice data with date filter in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Data With Date Filter In Virtual Terminal","Description":"This test case checks the validation for viewing invoice data with date filter in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Data With Date Filter In Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Select All Invoices In Virtual Terminal Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to select all invoices in virtual terminal tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Select All Invoices In Virtual Terminal Tab\n    [Documentation] Test case for validating that the merchant is able to select all invoices in virtual terminal tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select All Invoices In Virtual Terminal Tab","Description":"This test case checks the validation for selecting all invoices in virtual terminal tab functionality of the PayNOW datadriver.","Testcase name":"Validate Select All Invoices In Virtual Terminal Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Customer Information functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view customer information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Customer Information\n    [Documentation] Test case for validating that the merchant is able to view customer information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Customer Information","Description":"This test case checks the validation for viewing customer information functionality of the PayNOW datadriver.","Testcase name":"Validate View Customer Information","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt In Customer Information functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge exempt in customer information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Exempt In Customer Information\n    [Documentation] Test case for validating that the merchant is able to view surcharge exempt in customer information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Exempt In Customer Information","Description":"This test case checks the validation for viewing surcharge exempt in customer information functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Exempt In Customer Information","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View On Credit Hold Customers functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view on credit hold customers functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View On Credit Hold Customers\n    [Documentation] Test case for validating that the merchant is able to view on credit hold customers functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View On Credit Hold Customers","Description":"This test case checks the validation for viewing on credit hold customers functionality of the PayNOW datadriver.","Testcase name":"Validate View On Credit Hold Customers","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To View Invoices In PayNOW When Disputed Is Enabled functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To View Invoices In PayNOW When Disputed Is Enabled\n    [Documentation] Test case for validating that the merchant is unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Validate Unable To View Invoices In PayNOW When Disputed Is Enabled","Description":"This test case checks the validation for being unable to view invoices in PayNOW when disputed is enabled functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To View Invoices In PayNOW When Disputed Is Enabled","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In PayNOW When Disputed Is Disabled functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoices In PayNOW When Disputed Is Disabled\n    [Documentation] Test case for validating that the merchant is able to view invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoices In PayNOW When Disputed Is Disabled","Description":"This test case checks the validation for viewing invoices in PayNOW when disputed is disabled functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices In PayNOW When Disputed Is Disabled","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Average Invoice Age And Credit Limit In Customer Dashboard functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Average Invoice Age And Credit Limit In Customer Dashboard\n    [Documentation] Test case for validating that the merchant is able to view average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Average Invoice Age And Credit Limit In Customer Dashboard","Description":"This test case checks the validation for viewing average invoice age and credit limit in customer dashboard functionality of the PayNOW datadriver.","Testcase name":"Validate View Average Invoice Age And Credit Limit In Customer Dashboard","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Date And Due Date In Invoice Details Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice date and due date in invoice details page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Date And Due Date In Invoice Details Page\n    [Documentation] Test case for validating that the merchant is able to view invoice date and due date in invoice details page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Date And Due Date In Invoice Details Page","Description":"This test case checks the validation for viewing invoice date and due date in invoice details page functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Date And Due Date In Invoice Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Days Overdue And Due Amount In Invoice Details Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view days overdue and due amount in invoice details page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Days Overdue And Due Amount In Invoice Details Page\n    [Documentation] Test case for validating that the merchant is able to view days overdue and due amount in invoice details page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Days Overdue And Due Amount In Invoice Details Page","Description":"This test case checks the validation for viewing days overdue and due amount in invoice details page functionality of the PayNOW datadriver.","Testcase name":"Validate View Days Overdue And Due Amount In Invoice Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Clicked Date And Count In Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view email clicked date and count in email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Email Clicked Date And Count In Email Details\n    [Documentation] Test case for validating that the merchant is able to view email clicked date and count in email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Email Clicked Date And Count In Email Details","Description":"This test case checks the validation for viewing email clicked date and count in email details functionality of the PayNOW datadriver.","Testcase name":"Validate View Email Clicked Date And Count In Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Credit Count And Credit Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view credit count and credit amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Credit Count And Credit Amount\n    [Documentation] Test case for validating that the merchant is able to view credit count and credit amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Credit Count And Credit Amount","Description":"This test case checks the validation for viewing credit count and credit amount functionality of the PayNOW datadriver.","Testcase name":"Validate View Credit Count And Credit Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to cancel payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Cancel Payment Method\n    [Documentation] Test case for validating that the merchant is able to cancel payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Cancel Payment Method","Description":"This test case checks the validation for canceling payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Cancel Payment Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Add New Payment Method When One Exists functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to add new payment method when one exists functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Add New Payment Method When One Exists\n    [Documentation] Test case for validating that the merchant is able to add new payment method when one exists functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Add New Payment Method When One Exists","Description":"This test case checks the validation for adding new payment method when one exists functionality of the PayNOW datadriver.","Testcase name":"Validate Add New Payment Method When One Exists","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Enable Multiple PDFs In Emails functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to enable multiple PDFs in emails functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Enable Multiple PDFs In Emails\n    [Documentation] Test case for validating that the merchant is able to enable multiple PDFs in emails functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enable Multiple PDFs In Emails","Description":"This test case checks the validation for enabling multiple PDFs in emails functionality of the PayNOW datadriver.","Testcase name":"Validate Enable Multiple PDFs In Emails","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for common merchants functionality.","Response":"*** Settings ***\nDocumentation    Test cases for common merchants functionality\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/merchants\n${BROWSER}       chrome\n${EXCEL_PATH}    path\/to\/testdata.xlsx\n${TC_ID}         TC_01\n${SHEET_NAME}    Sheet1\n${LOADING_TIMEOUT}    30\n${LOCATOR}       element_locator\n\n*** Test Cases ***\nTest Common Merchants Functionality\n    [Documentation]    Test case for common merchants functionality\n    Launch Browser    ${BROWSER}    ${URL}\n    Launch Web Application    ${BROWSER}    ${URL}\n    Read TestData From Excel    ${EXCEL_PATH}    ${TC_ID}    ${SHEET_NAME}\n    Wait Until Element Is Clickable And Click    ${LOCATOR}    ${LOADING_TIMEOUT}\n    Scroll Till Element Is Visible    ${LOCATOR}\n    Validate String Should Be Equal    expected_value    actual_value\n    Validate Error Message Is Displayed    error_message\n    Validate String Should Contain    expected_value    actual_value\n    Validate String Should Not Contain    unexpected_value    actual_value\n    Validate String Should Not Be Equal    unexpected_value    actual_value\n    Click Until Element Is Invisible    ${LOCATOR}\n    Scroll To Element    ${LOCATOR}\n    Wait Till Loading Icon Is Invisible    ${LOCATOR}    ${LOADING_TIMEOUT}\n    Fail And Take Screenshot    message\n    # Add more test steps as needed\n    Close Browser","Description":"This test case checks the common functionalities of merchants in a web application.","Testcase name":"Test Common Merchants Functionality","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the homepage of all merchants.","Response":"*** Settings ***\nDocumentation    Test cases for testing the homepage of all merchants\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/merchants\n${BROWSER}       chrome\n${MODULE}        homepage_module\n${MERCHANT}      sample_merchant\n\n*** Test Cases ***\nTest Homepage Of All Merchants\n    [Documentation]    Test case for the homepage of all merchants\n    Launch Browser    ${BROWSER}    ${URL}\n    Select Module    ${MODULE}\n    Select Merchant    ${MERCHANT}\n    # Add more test steps to verify homepage elements\n    Logout From Application\n    Close Browser","Description":"This test case checks the homepage functionalities for all merchants in a web application.","Testcase name":"Test Homepage Of All Merchants","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the tokens functionality of all merchants.","Response":"*** Settings ***\nDocumentation    Test cases for testing the tokens functionality of all merchants\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/merchants\n${BROWSER}       chrome\n${ACCOUNT_NUMBER} 123456\n${INVOICE_TOKEN}  abcdef\n${SESSION_ID}    session123\n${INVOICE_NUMBER} inv123\n\n*** Test Cases ***\nTest Tokens Functionality Of All Merchants\n    [Documentation]    Test case for the tokens functionality of all merchants\n    Launch Browser    ${BROWSER}    ${URL}\n    Navigate To Open Invoices Page From Email\n    Navigate To Open Invoices Page With Invoice Token    ${ACCOUNT_NUMBER}    ${INVOICE_TOKEN}\n    Navigate To Open Invoices Page With Session Token    ${ACCOUNT_NUMBER}    ${SESSION_ID}\n    Validate PayNOW Open Invoices Page Is Displayed    ${INVOICE_NUMBER}\n    Validate Open Invoices Page Is Displayed    ${INVOICE_NUMBER}\n    # Add more test steps to verify token functionalities\n    Close Browser","Description":"This test case checks the tokens functionalities for all merchants in a web application.","Testcase name":"Test Tokens Functionality Of All Merchants","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the autopay service functionality of Omnicorp customers.","Response":"*** Settings ***\nDocumentation    Test cases for testing the autopay service functionality of Omnicorp customers\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/autopay\n${BROWSER}       chrome\n${CUSTOMER_NUMBER} 123456\n${ACCOUNT_NUMBER}  account123\n${INVOICE_NUMBER}  inv123\n${PAYMENT_METHOD}  credit_card\n${ALL_TRANSACTIONS_COUNT}  10\n${EXPECTED_STATUS}  active\n${EXPECTED_CUSTOMER_NUMBER}  123456\n${EXPECTED_PAYMENT_TYPE}  credit_card\n${EXPECTED_STATUS_ACTIVE}  active\n${EXPECTED_STATUS_INACTIVE}  inactive\n\n*** Test Cases ***\nTest Autopay Service Functionality Of Omnicorp Customers\n    [Documentation]    Test case for the autopay service functionality of Omnicorp customers\n    Launch Browser    ${BROWSER}    ${URL}\n    Select Status    active\n    Navigate To AutoPay\n    Validate AutoPay Details Are Displayed    ${EXPECTED_CUSTOMER_NUMBER}    ${EXPECTED_PAYMENT_TYPE}    ${EXPECTED_STATUS}\n    Validate AutoPay Is Cancelled    ${ACCOUNT_NUMBER}\n    Select Invoices Due For The Payment\n    Filter Customer In AutoPay    ${CUSTOMER_NUMBER}\n    Navigate To Customer Details Page From AutoPay    ${INVOICE_NUMBER}\n    Get Total Number Of Transactions In AutoPay\n    Cancel AutoPay\n    Create AutoPay    ${CUSTOMER_NUMBER}    ${PAYMENT_METHOD}\n    Select Saved Payment Method In Autopay    ${PAYMENT_METHOD}\n    Validate Active Payment Details After Displayed    ${ALL_TRANSACTIONS_COUNT}    ${EXPECTED_STATUS_ACTIVE}\n    Validate Inactive Payment Details Are Displayed    ${ALL_TRANSACTIONS_COUNT}    ${EXPECTED_STATUS_INACTIVE}\n    Select Each Day As Payment Option\n    Close Browser","Description":"This test case checks the autopay service functionalities for Omnicorp customers in a web application.","Testcase name":"Test Autopay Service Functionality Of Omnicorp Customers","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the scheduled payment service functionality of Omnicorp customers.","Response":"*** Settings ***\nDocumentation    Test cases for testing the scheduled payment service functionality of Omnicorp customers\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/scheduled_payments\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${EXPECTED_STATUS}  scheduled\n${EXPECTED_PAYMENT_DATE}  2024-06-15\n${EXPECTED_PAYMENT_TYPE}  credit_card\n${DAY}  7\n${DATE}  2024-06-14\n\n*** Test Cases ***\nTest Scheduled Payment Service Functionality Of Omnicorp Customers\n    [Documentation]    Test case for the scheduled payment service functionality of Omnicorp customers\n    Launch Browser    ${BROWSER}    ${URL}\n    Validate Last 7 Days And 30 Days Scheduled Payments    ${DAY}\n    Validate Today And Yesterday Scheduled Payments    ${DATE}\n    Create Scheduled Payment    ${ACCOUNT_NUMBER}\n    Select Payment Date    ${DATE}\n    Validate Last Month And This Month Date Scheduled Payments    ${DAY}\n    Validate Status In Scheduled Payments    ${EXPECTED_STATUS}\n    Validate Scheduled Payment Details Are Displayed    ${EXPECTED_PAYMENT_DATE}    ${EXPECTED_STATUS}    ${EXPECTED_PAYMENT_TYPE}\n    Cancel Scheduled Payment\n    Close Browser","Description":"This test case checks the scheduled payment service functionalities for Omnicorp customers in a web application.","Testcase name":"Test Scheduled Payment Service Functionality Of Omnicorp Customers","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the customer service functionality of Sterlincooper customers.","Response":"*** Settings ***\nDocumentation    Test cases for testing the customer service functionality of Sterlincooper customers\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/customer_service\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${INVOICE_NUMBER}  inv123\n${EXPECTED_MESSAGE}  success\n${NOTES}  \"Customer requested an update\"\n\n*** Test Cases ***\nTest Customer Service Functionality Of Sterlincooper Customers\n    [Documentation]    Test case for the customer service functionality of Sterlincooper customers\n    Launch Browser    ${BROWSER}    ${URL}\n    Validate Open Invoice Is Displayed    ${INVOICE_NUMBER}\n    Filter Details    ${ACCOUNT_NUMBER}\n    Validate Prevent Override Is Displayed\n    Navigate To Resend Receipt Page\n    Cancel Send Invoice Receipt\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Enter Text In Notes    ${NOTES}\n    Validate Payment Method Is Cancelled\n    Validate Provider Response Message Is Displayed    ${EXPECTED_MESSAGE}\n    Enter ACH\/Echeck Details    checking    123456789    987654321    John Doe\n    Close Browser","Description":"This test case checks the customer service functionalities for Sterlincooper customers in a web application.","Testcase name":"Test Customer Service Functionality Of Sterlincooper Customers","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the failed login attempts functionality of Sterlincooper customers.","Response":"*** Settings ***\nDocumentation    Test cases for testing the failed login attempts functionality of Sterlincooper customers\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/login\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${EXPECTED_RECENT_ATTEMPTS}  3\n${EXPECTED_TOTAL_ATTEMPTS}  10\n${EXPECTED_FIRST_ATTEMPT}  2024-06-01\n${EXPECTED_LAST_ATTEMPT}  2024-06-14\n${INVOICE_NUMBER}  inv123\n\n*** Test Cases ***\nTest Failed Login Attempts Functionality Of Sterlincooper Customers\n    [Documentation]    Test case for the failed login attempts functionality of Sterlincooper customers\n    Launch Browser    ${BROWSER}    ${URL}\n    Login To PayNOW With Invalid Credentials    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Validate Number Of Recent Login Failed Attempts    ${ACCOUNT_NUMBER}    ${EXPECTED_RECENT_ATTEMPTS}\n    Validate Total Number Of Login Failed Attempts    ${ACCOUNT_NUMBER}    ${EXPECTED_TOTAL_ATTEMPTS}\n    Validate First Login Failed Attempt Is Displayed    ${ACCOUNT_NUMBER}    ${EXPECTED_FIRST_ATTEMPT}\n    Validate Last Login Failed Attempt Is Displayed    ${ACCOUNT_NUMBER}    ${EXPECTED_LAST_ATTEMPT}\n    Filter With Customer Number In Failed PayNOW Login    ${ACCOUNT_NUMBER}\n    Validate Filterd Customer Number Is Displayed    ${ACCOUNT_NUMBER}\n    Expand Customer Failed Login Details\n    Validate Customer Failed Login Details Are Expanded    sterlincooper\n    Collapse Customer Failed Login Details\n    Validate Customer Failed Login Details Are Collapsed    sterlincooper\n    Close Browser","Description":"This test case checks the failed login attempts functionalities for Sterlincooper customers in a web application.","Testcase name":"Test Failed Login Attempts Functionality Of Sterlincooper Customers","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the dashboard functionality of Sterlincooper dashboards.","Response":"*** Settings ***\nDocumentation    Test cases for testing the dashboard functionality of Sterlincooper dashboards web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/dashboard\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${EXPECTED_EMAIL}  email@example.com\n${EXPECTED_DATE}  2024-06-14\n${EXPECTED_SUBJECT}  Invoice Summary\n${EXPECTED_EMAILFORMAT}  valid@example.com\n${EXPECTED_PDFSTATUS}  attached\n${CUSTOMER}  customer123\n${FILTER_WITH}  filter123\n${EXPECTED_COUNT}  5\n${PAGE}  next\n${DAY}  7\n\n*** Test Cases ***\nTest Dashboard Functionality Of Sterlincooper Dashboards\n    [Documentation]    Test case for the dashboard functionality of Sterlincooper dashboards\n    Launch Browser    ${BROWSER}    ${URL}\n    Validate Details Are Displayed In Last Page\n    Validate Details Are Displayed In First Page\n    Send Invoice Email And Navigate To Email Summary    ${ACCOUNT_NUMBER}\n    Expand Details In Email Summary\n    Validate Email Summary Page Is Displayed    ${EXPECTED_DATE}\n    Filter With Customer Number In Email Details    ${FILTER_WITH}    ${ACCOUNT_NUMBER}\n    Validate Details Are Displayed In Next And Previous Pages    ${EXPECTED_COUNT}\n    Validate Email Format In Email Details    ${EXPECTED_EMAILFORMAT}\n    Navigate To Customer Details Page From Email Details    ${CUSTOMER}\n    Validate Email Details Are Displayed    ${EXPECTED_EMAIL}    ${EXPECTED_DATE}    ${EXPECTED_SUBJECT}\n    Reset Filter\n    Validate Email Details Are Expanded In Email Summary\n    Navigate To Customer Details Page From Email Summary\n    Collapse Details In Email Summary\n    Validate Email Details Are Collapsed In Email Summary\n    Navigate To Pages    ${PAGE}\n    Validate Reset Filter Details Are Displayed\n    Validate Email Sent Date And Subject    ${EXPECTED_SUBJECT}    ${EXPECTED_EMAIL}\n    Validate Email PDF Attachment Status    ${EXPECTED_PDFSTATUS}\n    Navigate To Email Summary Page    ${DAY}\n    Close Browser","Description":"This test case checks the dashboard functionalities for Sterlincooper dashboards in a web application.","Testcase name":"Test Dashboard Functionality Of Sterlincooper Dashboards","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the invoices functionality of Sterlincooper service.","Response":"*** Settings ***\nDocumentation    Test cases for testing the invoices functionality of Sterlincooper service web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/invoices\n${BROWSER}       chrome\n${INVOICE_NUMBER}  inv123\n${CUSTOMER_NUMBER}  customer123\n${EXPECTED_DATE}  2024-06-14\n${EXPECTED_STATUS}  success\n${EXPECTED_EMAIL}  email@example.com\n\n*** Test Cases ***\nTest Invoices Functionality Of Sterlincooper Service\n    [Documentation]    Test case for the invoices functionality of Sterlincooper service\n    Launch Browser    ${BROWSER}    ${URL}\n    Validate Transaction Source After Transaction Is Displayed\n    Expand Email Details\n    Validate Today And Yesterday Invoice Are Displayed    ${EXPECTED_DATE}\n    Validate Filtered Cusomer Number In Displayed Invoice    ${CUSTOMER_NUMBER}\n    Validate Financial Payment Details Are Displayed\n    Select Tab In Invoice Details Page\n    Send Email Invoice\n    Validate Sent Date And Provider Response Message Is Displayed    ${EXPECTED_STATUS}\n    Validate PayNOW Invoice Details Page Is Displayed\n    Enable Toggle Button\n    Validate Email Details Are Expanded\n    Validate Toggle Button Is Enabled\n    Validate Email Format Type Is Displayed\n    Validate Email Details Are Collapsed\n    Navigate To Details Page From Invoices\n    Collapse Email Details\n    Validate Email Address Is Displayed    ${EXPECTED_EMAIL}\n    Validate Filtered Invoice Number In Displayed Invoice    ${INVOICE_NUMBER}\n    Filter Invoice In Grid\n    Validate Filtered Invoice Is Displayed    ${INVOICE_NUMBER}\n    Filter Invoice Details With Invoice And Customer Number    ${INVOICE_NUMBER}    ${CUSTOMER_NUMBER}\n    Validate PDF Attachment Status Is Displayed\n    Validate Terms Amount Are Displayed In Financial Details\n    Validate Invoices Date For Last 7 Days And 30 Days    ${EXPECTED_DATE}\n    Validate Line Items Details Are Displayed\n    Navigate To Transaction Details From Pending Payments\n    Validate Invoice Details Are Displayed\n    Validate Invoice\n    Close Browser","Description":"This test case checks the invoices functionalities for Sterlincooper service in a web application.","Testcase name":"Test Invoices Functionality Of Sterlincooper Service","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the settings functionality of Sterlincooper service.","Response":"*** Settings ***\nDocumentation    Test cases for testing the settings functionality of Sterlincooper service web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/settings\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${INVOICE_NUMBER}  inv123\n${EXPECTED_FILENAME}  document.pdf\n${EXPECTED_MESSAGE}  success\n${FILE_NAME}  upload.pdf\n${ACTUAL_FILENAME}  uploaded.pdf\n${EXPECTED_DOCUMENT_TYPE}  pdf\n\n*** Test Cases ***\nTest Settings Functionality Of Sterlincooper Service\n    [Documentation]    Test case for the settings functionality of Sterlincooper service\n    Launch Browser    ${BROWSER}    ${URL}\n    Navigate To PayNOW    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Validate PDF Document Is Displayed In PayNOW    ${EXPECTED_FILENAME}\n    Validate PDF Is Deleted In Settings    ${EXPECTED_MESSAGE}\n    Validate Message In Settings    ${EXPECTED_MESSAGE}\n    Select Document Type In Settings\n    Upload File In Settings Tab    ${FILE_NAME}\n    Validate PDF Is Closed\n    Close PDF Document\n    Validate File Is Uploaded    ${ACTUAL_FILENAME}    ${EXPECTED_DOCUMENT_TYPE}\n    Delete PDF Attachment\n    Close Browser","Description":"This test case checks the settings functionalities for Sterlincooper service in a web application.","Testcase name":"Test Settings Functionality Of Sterlincooper Service","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing all transactions functionality of Sterlincooper service.","Response":"*** Settings ***\nDocumentation    Test cases for testing all transactions functionality of Sterlincooper service web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/transactions\n${BROWSER}       chrome\n${TRANSACTION_TAB}  details\n${COUNT}  10\n${AMOUNT}  1000\n${TRANSACTION_TYPE}  ACH\n${INVOICES_LIST}  [inv123, inv124]\n${MONTH}  June\n${EXPECTED_OPTION}  apply\n\n*** Test Cases ***\nTest All Transactions Functionality Of Sterlincooper Service\n    [Documentation]    Test case for the transactions functionality of Sterlincooper service\n    Launch Browser    ${BROWSER}    ${URL}\n    Select Tab In Transaction Details Page    ${TRANSACTION_TAB}\n    Validate Total Count And Amount Of ACH Transactions    ${COUNT}    ${AMOUNT}\n    Select Transaction Type    ${TRANSACTION_TYPE}\n    Select Confirm In Void Transaction Popup\n    Validate Invoices Displayed On Invoice Detail Page    ${INVOICES_LIST}\n    Validate Transactions Count In Previous Page\n    Validate Sorted Transactions\n    Validate Current And Previous Month Is Displayed    ${MONTH}\n    Validate Payment Application Option    ${EXPECTED_OPTION}\n    Login And Navigate To Transaction Details Page\n    Close Browser","Description":"This test case checks the transactions functionalities for Sterlincooper service in a web application.","Testcase name":"Test All Transactions Functionality Of Sterlincooper Service","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the payment status functionality of Sterlincooper service.","Response":"*** Settings ***\nDocumentation    Test cases for testing the payment status functionality of Sterlincooper service web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/payment_status\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${DATE}  2024-06-14\n${EXPECTED_STATUS}  scheduled\n${EXPECTED_PAYMENT_DATE}  2024-06-15\n${EXPECTED_PAYMENT_TYPE}  credit_card\n${DAY}  7\n\n*** Test Cases ***\nTest Payment Status Functionality Of Sterlincooper Service\n    [Documentation]    Test case for the payment status functionality of Sterlincooper service\n    Launch Browser    ${BROWSER}    ${URL}\n    Validate Last 7 Days And 30 Days Scheduled Payments    ${DAY}\n    Validate Today And Yesterday Scheduled Payments    ${DATE}\n    Create Scheduled Payment    ${ACCOUNT_NUMBER}\n    Select Payment Date    ${DATE}\n    Validate Last Month And This Month Date Scheduled Payments    ${DAY}\n    Validate Status In Scheduled Payments    ${EXPECTED_STATUS}\n    Validate Scheduled Payment Details Are Displayed    ${EXPECTED_PAYMENT_DATE}    ${EXPECTED_STATUS}    ${EXPECTED_PAYMENT_TYPE}\n    Cancel Scheduled Payment\n    Close Browser","Description":"This test case checks the payment status functionalities for Sterlincooper service in a web application.","Testcase name":"Test Payment Status Functionality Of Sterlincooper Service","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the virtual terminal functionality of Sterlincooper service.","Response":"*** Settings ***\nDocumentation    Test cases for testing the virtual terminal functionality of Sterlincooper service web application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/virtual_terminal\n${BROWSER}       chrome\n${ACCOUNT_NUMBER}  account123\n${CUSTOMER_NUMBER}  customer123\n${SAVED_PAYMENT_METHOD}  credit_card\n${EXPECTED_SURCHARGE}  10\n${STATE}  NY\n${EXPECTED_SURCHARGE_ZERO}  0\n${OPTION}  confirm\n\n*** Test Cases ***\nTest Virtual Terminal Functionality Of Sterlincooper Service\n    [Documentation]    Test case for the virtual terminal functionality of Sterlincooper service\n    Launch Browser    ${BROWSER}    ${URL}\n    Search Customer In Virtual Terminal    ${ACCOUNT_NUMBER}\n    Validate Searched Customer Number Is Displayed    ${CUSTOMER_NUMBER}\n    Process Transacton With Saved Payment Method    ${ACCOUNT_NUMBER}    ${SAVED_PAYMENT_METHOD}\n    Validate Surcharge    ${EXPECTED_SURCHARGE}\n    Select Multiple Invoices\n    Validate Surchage Exempt Is Applied\n    Select State In PayNOW    ${STATE}\n    Select State In Virtual Terminal    ${STATE}\n    Validate Surcharge Is Not Applied For Zero Surcharge    ${EXPECTED_SURCHARGE_ZERO}\n    Select Over Payment Confirmation    ${OPTION}\n    Navigate To PayNOW And Select State    ${STATE}\n    Close Browser","Description":"This test case checks the virtual terminal functionalities for Sterlincooper service in a web application.","Testcase name":"Test Virtual Terminal Functionality Of Sterlincooper Service","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the general common API functionality of clients.","Response":"*** Settings ***\nDocumentation    Test cases for testing the general common API functionality of clients\nLibrary          RequestsLibrary\n\n*** Variables ***\n${BASE_URL}      https:\/\/api.example.com\n${MERCHANT}      merchant123\n${BODY}          {\"key\": \"value\"}\n\n*** Test Cases ***\nTest General Common API Functionality Of Clients\n    [Documentation]    Test case for the general common API functionality of clients\n    Create Session    api_session    ${BASE_URL}\n    ${headers}=    Get JSON Headers    ${MERCHANT}\n    ${json_body}=    Convert To JSON    ${BODY}\n    ${response}=    Post Request    api_session    \/endpoint    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}","Description":"This test case checks the general common API functionalities for clients.","Testcase name":"Test General Common API Functionality Of Clients","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the general customer functionality of an API.","Response":"*** Settings ***\nDocumentation    Test cases for testing the general customer functionality of an API\nLibrary          RequestsLibrary\n\n*** Variables ***\n${BASE_URL}        https:\/\/api.example.com\n${MERCHANT_ID}     merchant123\n${MERCHANT_KEY}    key123\n${UNIQUE_VALUE}    unique456\n\n*** Test Cases ***\nTest General Customer Functionality Of An API\n    [Documentation]    Test case for the general customer functionality of an API\n    Create Session    api_session    ${BASE_URL}\n    ${billing_address}=    Create Billing Address Body    ${UNIQUE_VALUE}    ${MERCHANT_ID}\n    ${json_body}=    Create Customer Body    ${UNIQUE_VALUE}    ${MERCHANT_KEY}    ${MERCHANT_ID}\n    ${unique_value}=    Send Request To Create On Credit Hold Customer    ${MERCHANT_ID}\n    ${shipping_address}=    Create Shipping Address Body    ${UNIQUE_VALUE}    ${MERCHANT_ID}\n    ${unique_value}=    Send Request To Create Customer    ${MERCHANT_KEY}    ${MERCHANT_ID}\n    ${json_body}=    Create On Credit Hold Customer Body    ${UNIQUE_VALUE}    ${MERCHANT_KEY}    ${MERCHANT_ID}\n    ${response}=    Post Request    api_session    \/customers    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}","Description":"This test case checks the general customer functionalities for an API.","Testcase name":"Test General Customer Functionality Of An API","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the invoice services functionality of an API.","Response":"*** Settings ***\nDocumentation    Test cases for testing the invoice services functionality of an API\nLibrary          RequestsLibrary\n\n*** Variables ***\n${BASE_URL}          https:\/\/api.example.com\n${MERCHANT}          merchant123\n${UNIQUE_VALUE}      unique456\n${INVOICE_NUMBER}    inv789\n${DUE_AMOUNT}        1000\n${INVOICE_DUE_DATE}  2024-06-15\n\n*** Test Cases ***\nTest Invoice Services Functionality Of An API\n    [Documentation]    Test case for the invoice services functionality of an API\n    Create Session    api_session    ${BASE_URL}\n    ${json_body}=    Create Invoice Body    ${UNIQUE_VALUE}    ${INVOICE_NUMBER}    ${DUE_AMOUNT}    ${INVOICE_DUE_DATE}\n    ${response}=    Post Request    api_session    \/invoices    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}\n    ${json_body}=    Create Disputed Invoice Body    ${UNIQUE_VALUE}    ${INVOICE_NUMBER}    ${DUE_AMOUNT}    ${INVOICE_DUE_DATE}\n    ${response}=    Post Request    api_session    \/disputed_invoices    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}\n    ${company_details}=    Create Company Details Body\n    ${product_details}=    Create Product Details Body\n    ${ship_to_address}=    Create Ship To Address Body\n    ${bill_to_address}=    Create Bill To Address Body\n    ${response}=    Post Request    api_session    \/invoices    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}\n    @{invoices_list}=    Create Multiple Invoices Through API    ${MERCHANT}    ${UNIQUE_VALUE}    ${INVOICE_DUE_DATE}\n    FOR    ${invoice}    IN    @{invoices_list}\n        Log    ${invoice}\n    END","Description":"This test case checks the invoice services functionalities for an API.","Testcase name":"Test Invoice Services Functionality Of An API","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the process payment services functionality of an API.","Response":"*** Settings ***\nDocumentation    Test cases for testing the process payment services functionality of an API\nLibrary          RequestsLibrary\n\n*** Variables ***\n${BASE_URL}          https:\/\/api.example.com\n${MERCHANT}          merchant123\n${ACCOUNT_NUMBER}    account456\n${INVOICE_NUMBER}    inv789\n${CARD_NUMBER}       4111111111111111\n${AMOUNT}            1000\n${ROUTING_NUMBER}    123456789\n${REASON}            \"Payment for invoice\"\n\n*** Test Cases ***\nTest Process Payment Services Functionality Of An API\n    [Documentation]    Test case for the process payment services functionality of an API\n    Create Session    api_session    ${BASE_URL}\n    ${json_body}=    Create Process Invoice Payment Body For Credit Card    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}\n    ${response}=    Post Request    api_session    \/process_payment    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}\n    ${response_details}=    Get Response Details    ${response}\n    ${gateway_id}=    Get Gatewayid    ${response}\n    ${billing_address}=    Get Billing Information    ${response}\n    ${response}=    Send Request To Process Transaction For Multiple Invoices    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}\n    Should Be Equal As Strings    ${response.status_code}    200\n    ${response}=    Send Request To Process Payment Through ACH\/Echeck    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}\n    Should Be Equal As Strings    ${response.status_code}    200\n    ${response}=    Send Request To Process Payment For Credit Card    ${MERCHANT}    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${AMOUNT}\n    Should Be Equal As Strings    ${response.status_code}    200\n    ${headers}=    Get JSON Header For Credit Card Token\n    ${card_details}=    Get Card Details    ${CARD_NUMBER}\n    ${json_body}=    Create Process Invoice Payment Body For ACH\/Echeck    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}\n    ${response}=    Post Request    api_session    \/process_payment    headers=${headers}    data=${json_body}\n    Should Be Equal As Strings    ${response.status_code}    200\n    ${amount}=    Get Amount    ${response}\n    ${json_body}=    Create Request For Credit Card Token    ${card_details}\n    ${invoice_body}=    Create Invoice For Processing Payment    ${INVOICE_NUMBER}    ${REASON}\n    ${transaction_id}=    Get Id After Processing Transaction    ${response}\n    ${json_body}=    Create Process Invoice Body For Multiple Transactions    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${CARD_NUMBER}    ${ROUTING_NUMBER}    ${AMOUNT}\n    ${response}=    Send Request To Get Credit Card Token    ${CARD_NUMBER}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}","Description":"This test case checks the process payment services functionalities for an API.","Testcase name":"Test Process Payment Services Functionality Of An API","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing the token service functionality of an API.","Response":"*** Settings ***\nDocumentation    Test cases for testing the token service functionality of an API\nLibrary          RequestsLibrary\n\n*** Variables ***\n${BASE_URL}          https:\/\/api.example.com\n${INVOICE_LOCATION}  invoice_location\n${CUSTOMER_NUMBER}   customer_number\n\n*** Test Cases ***\nTest Token Service Functionality Of An API\n    [Documentation]    Test case for the token service functionality of an API\n    Create Session    api_session    ${BASE_URL}\n    ${invoice_token}=    Send Request To Get Invoice Token    ${INVOICE_LOCATION}\n    ${headers}=    Get Token Header\n    ${json_body}=    Create Body To Get PayNowSession Id    ${CUSTOMER_NUMBER}\n    ${header_value}=    Get Invoice Location    ${response}\n    ${response}=    Send Request To Get PayNowSession Id    ${CUSTOMER_NUMBER}\n    Should Be Equal As Strings    ${response.status_code}    200\n    Log    ${response.json()}\n    ${headers}=    Get Headers For PayNowSession Id\n    ${session_id}=    Get PayNowSession Id From Request Body    ${response}","Description":"This test case checks the token service functionalities for an API.","Testcase name":"Test Token Service Functionality Of An API","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount For LumpSum functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for lump sum functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With More Than Due Amount For LumpSum\n    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for lump sum functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With More Than Due Amount For LumpSum\n    Validate Transaction Failure","Description":"This test case checks the validation for processing transaction with more than due amount for lump sum functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With More Than Due Amount For LumpSum","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With More Than Due Amount for Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With More Than Due Amount for Specific Invoice\n    [Documentation] Test case for validating that the merchant is unable to process transaction with more than due amount for specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With More Than Due Amount for Specific Invoice\n    Validate Transaction Failure","Description":"This test case checks the validation for processing transaction with more than due amount for specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With More Than Due Amount for Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Searched With Customer Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Searched With Customer Number\n    [Documentation] Test case for validating that the merchant is able to view searched with customer number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Search With Customer Number\n    Validate Search Results","Description":"This test case checks the validation for viewing searched with customer number functionality of the PayNOW datadriver.","Testcase name":"Validate View Searched With Customer Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Transaction With Negative Amount Due In Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Process Transaction With Negative Amount Due In Specific Invoice\n    [Documentation] Test case for validating that the merchant is unable to process transaction with negative amount due in specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Process Transaction With Negative Amount Due In Specific Invoice\n    Validate Transaction Failure","Description":"This test case checks the validation for processing transaction with negative amount due in specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Transaction With Negative Amount Due In Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In Virtual Terminal functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Exempt Is Applied For Customer In Virtual Terminal\n    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Exempt Status In Virtual Terminal","Description":"This test case checks the validation for viewing surcharge exempt is applied for customer in virtual terminal functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Exempt Is Applied For Customer In Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge And Change In Total Amount After Selecting Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge And Change In Total Amount After Selecting Multiple Invoices\n    [Documentation] Test case for validating that the merchant is able to view surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Select Multiple Invoices\n    View Surcharge And Total Amount Change","Description":"This test case checks the validation for viewing surcharge and change in total amount after selecting multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge And Change In Total Amount After Selecting Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Surcharge Exempt Is Applied For Customer In PayNOW functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Exempt Is Applied For Customer In PayNOW\n    [Documentation] Test case for validating that the merchant is able to view surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Exempt Status In PayNOW","Description":"This test case checks the validation for viewing surcharge exempt is applied for customer in PayNOW functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Exempt Is Applied For Customer In PayNOW","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Custom Date Range And View Payment Status Summary And Payment Date In Grid functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to custom date range and view payment status summary and payment date in grid functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Custom Date Range And View Payment Status Summary And Payment Date In Grid\n    [Documentation] Test case for validating that the merchant is able to custom date range and view payment status summary and payment date in grid functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Set Custom Date Range\n    View Payment Status Summary And Payment Date In Grid","Description":"This test case checks the validation for custom date range and viewing payment status summary and payment date in grid functionality of the PayNOW datadriver.","Testcase name":"Validate Custom Date Range And View Payment Status Summary And Payment Date In Grid","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Filtered Invoice In Payment Status functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view filtered invoice in payment status functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Filtered Invoice In Payment Status\n    [Documentation] Test case for validating that the merchant is able to view filtered invoice in payment status functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Apply Invoice Filter\n    View Filtered Invoice In Payment Status","Description":"This test case checks the validation for viewing filtered invoice in payment status functionality of the PayNOW datadriver.","Testcase name":"Validate View Filtered Invoice In Payment Status","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Received Transactions Payment Status And Payment Information (i) In Payment Status functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Received Transactions Payment Status And Payment Information (i) In Payment Status\n    [Documentation] Test case for validating that the merchant is able to view received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Received Transactions Payment Status And Payment Information (i) In Payment Status","Description":"This test case checks the validation for viewing received transactions payment status and payment information (i) in payment status functionality of the PayNOW datadriver.","Testcase name":"Validate View Received Transactions Payment Status And Payment Information (i) In Payment Status","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Details Page By Clicking On Invoice Number In Payment Status functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Details Page By Clicking On Invoice Number In Payment Status\n    [Documentation] Test case for validating that the merchant is able to view invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click On Invoice Number In Payment Status\n    View Invoice Details Page","Description":"This test case checks the validation for viewing invoice details page by clicking on invoice number in payment status functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Details Page By Clicking On Invoice Number In Payment Status","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_SUMMARY}          invoice_summary\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigation To Customer Details\n    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice Summary Details ${INVOICE_SUMMARY}\n    Click On Customer Name\n    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}","Description":"This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Customer Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Format Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view email format details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Email Format Details\n    [Documentation] Test case for validating that merchant is able to view email format details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Email Format Details\n    Validate Email Format Details","Description":"This test case checks the validation for viewing email format details functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Email Format Details"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking on Customer Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigation to Customer Details by Customer Number\n    [Documentation] Test case for validating that merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click on Customer Number\n    Validate Navigation to Customer Details Page","Description":"This test case checks the validation for navigating to customer details page by clicking on customer number functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Navigation to Customer Details by Customer Number"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking on Customer Name functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details page by clicking on customer name functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigation to Customer Details by Customer Name\n    [Documentation] Test case for validating that merchant is able to navigate to customer details page by clicking on customer name functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click on Customer Name\n    Validate Navigation to Customer Details Page","Description":"This test case checks the validation for navigating to customer details page by clicking on customer name functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Navigation to Customer Details by Customer Name"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Pdf Attached Status In Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view pdf attached status in email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate PDF Attached Status in Email Details\n    [Documentation] Test case for validating that merchant is able to view pdf attached status in email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Email Details\n    Validate PDF Attached Status","Description":"This test case checks the validation for viewing pdf attached status in email details functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate PDF Attached Status in Email Details"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Verify Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to verify email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Verification of Email Details\n    [Documentation] Test case for validating that merchant is able to verify email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Email Details\n    Validate Email Verification","Description":"This test case checks the validation for verifying email details functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Verification of Email Details"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Expand And Collapse Email Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant is able to expand and collapse email details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL_DETAILS}            email_details\n\n*** Test Cases ***\nValidate Expand And Collapse Email Details\n    [Documentation] Test case for validating that Merchant is able to expand and collapse email details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Expand Email Details ${EMAIL_DETAILS}\n    Collapse Email Details ${EMAIL_DETAILS}","Description":"This test case checks the validation for expanding and collapsing email details functionality of the PayNOW datadriver.","Testcase name":"Validate Expand And Collapse Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Email Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant is able to view email details in email summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL_SUMMARY}            email_summary\n\n*** Test Cases ***\nValidate View Email Details In Email Summary\n    [Documentation] Test case for validating that Merchant is able to view email details in email summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Email Details In Email Summary ${EMAIL_SUMMARY}","Description":"This test case checks the validation for viewing email details in email summary functionality of the PayNOW datadriver.","Testcase name":"Validate View Email Details In Email Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Next And Previous Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant is able to view email details in next and previous page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL_PAGE}               email_page\n\n*** Test Cases ***\nValidate View Email Details In Next And Previous Page\n    [Documentation] Test case for validating that Merchant is able to view email details in next and previous page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Email Details In Next And Previous Page ${EMAIL_PAGE}","Description":"This test case checks the validation for viewing email details in next and previous page functionality of the PayNOW datadriver.","Testcase name":"Validate View Email Details In Next And Previous Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Details In Last And First Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant is able to view email details in last and first page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL_PAGE}               email_page\n\n*** Test Cases ***\nValidate View Email Details In Last And First Page\n    [Documentation] Test case for validating that Merchant is able to view email details in last and first page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Email Details In Last And First Page ${EMAIL_PAGE}","Description":"This test case checks the validation for viewing email details in last and first page functionality of the PayNOW datadriver.","Testcase name":"Validate View Email Details In Last And First Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Reset Filter functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant is able to reset filter functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${FILTER}                   filter\n\n*** Test Cases ***\nValidate Reset Filter\n    [Documentation] Test case for validating that Merchant is able to reset filter functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Reset Filter ${FILTER}","Description":"This test case checks the validation for resetting filter functionality of the PayNOW datadriver.","Testcase name":"Validate Reset Filter","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View All Active AutoPay Details functionality of the PayNOW datadriver.","Response":"*** Settings *** \nDocumentation          Test cases for validating that merchant is able to view all active AutoPay details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables *** \n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${ACTIVE_AUTOPAY_DETAILS}   active_autopay_details\n\n*** Test Cases *** \nValidate All Active AutoPay Details\n    [Documentation] Test case for validating that merchant is able to view all active AutoPay details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To AutoPay Details Page\n    Validate Active AutoPay Details ${ACTIVE_AUTOPAY_DETAILS}","Description":"This test case checks the validation for viewing all active AutoPay details for a merchant in the PayNOW datadriver.","Testcase name":"Validate All Active AutoPay Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Filter Auto Pay Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to filter Auto Pay details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${FILTER_CRITERIA}          filter_criteria\n${FILTERED_AUTOPAY_DETAILS} filtered_autopay_details\n\n*** Test Cases ***\nValidate Filter Auto Pay Details\n    [Documentation] Test case for validating that merchant is able to filter Auto Pay details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To AutoPay Details Page\n    Apply Filter ${FILTER_CRITERIA}\n    Validate Filtered AutoPay Details ${FILTERED_AUTOPAY_DETAILS}","Description":"This test case checks the validation for filtering Auto Pay details for a merchant in the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Filter Auto Pay Details"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel AutoPay functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to cancel AutoPay functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n${AUTOPAY_TO_CANCEL}    autopay_to_cancel\n${CANCELLED_AUTOPAY}    cancelled_autopay\n\n*** Test Cases ***\nValidate Cancel AutoPay\n    [Documentation] Test case for validating that merchant is able to cancel AutoPay functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To AutoPay Details Page\n    Cancel AutoPay ${AUTOPAY_TO_CANCEL}\n    Validate AutoPay Cancelled ${CANCELLED_AUTOPAY}","Description":"This test case checks the validation for cancelling AutoPay for a merchant in the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Cancel AutoPay"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${CUSTOMER_DETAILS_PAGE}    customer_details_page\n\n*** Test Cases ***\nValidate Navigation To Customer Details Page\n    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Page\n    Click On Customer Name\n    Validate Navigation To Customer Details Page ${CUSTOMER_DETAILS_PAGE}","Description":"This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Customer Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Able To Navigate To PayNOW From Invoice Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n\n*** Test Cases ***\nValidate Navigation From Invoice Details\n    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Details\n    Navigate To PayNOW From Invoice Details","Description":"This test case checks the validation for merchant's ability to navigate to PayNOW from invoice details functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation From Invoice Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To PayNOW From Customer Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to PayNOW from customer details functionality of the PayNOW datadriver.\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n\n*** Test Cases ***\nValidate Navigation From Customer Details\n    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from customer details functionality of the PayNOW datadriver.\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Customer Details\n    Navigate To PayNOW From Customer Details","Description":"This test case checks the validation for merchant's ability to navigate to PayNOW from customer details functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation From Customer Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To PayNOW From Email functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to PayNOW from email functionality of the PayNOW datadriver.\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n\n*** Test Cases ***\nValidate Navigation From Email\n    [Documentation] Test case for validating that merchant is able to navigate to PayNOW from email functionality of the PayNOW datadriver.\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Email\n    Navigate To PayNOW From Email","Description":"This test case checks the validation for merchant's ability to navigate to PayNOW from email functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation From Email","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Search Invoice Details With Invoice Number","Response":"*** Settings ***\nDocumentation          Validate Merchant Is Able To Search Invoice Details With Invoice Number\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\n${CUSTOMER_DETAILS}     customer_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Search Invoice Details With Invoice Number\n    [Documentation] Validate Merchant Is Able To Search Invoice Details With Invoice Number\n    Launch Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Search Invoice By Invoice Number\n    Validate Invoice Details Displayed","Description":"This test case checks the validation for merchant's ability to search invoice details with invoice number functionality.","Testcase name":"Validate Merchant Is Able To Search Invoice Details With Invoice Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Search Invoice Details With Customer Number","Response":"*** Settings ***\nDocumentation          Validate Merchant Is Able To Search Invoice Details With Customer Number\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\n${CUSTOMER_DETAILS}     customer_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Search Invoice Details With Customer Number\n    [Documentation] Validate Merchant Is Able To Search Invoice Details With Customer Number\n    Launch Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Search Invoice By Customer Number\n    Validate Invoice Details Displayed","Description":"This test case checks the validation for merchant's ability to search invoice details with customer number functionality.","Testcase name":"Validate Merchant Is Able To Search Invoice Details With Customer Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Search With Invoice And Customer Number","Response":"*** Settings ***\nDocumentation          Validate Merchant Is Able To Search With Invoice And Customer Number\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\n${CUSTOMER_DETAILS}     customer_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Search With Invoice And Customer Number\n    [Documentation] Validate Merchant Is Able To Search With Invoice And Customer Number\n    Launch Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Search Invoice By Invoice And Customer Number\n    Validate Invoice Details Displayed","Description":"This test case checks the validation for merchant's ability to search with invoice and customer number functionality.","Testcase name":"Validate Merchant Is Able To Search With Invoice And Customer Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Email Address In Email Detail","Response":"*** Settings ***\nDocumentation          Validate Merchant Is Able To View Email Address In Email Detail\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\n${CUSTOMER_DETAILS}     customer_details\n\n*** Test Cases ***\nValidate Merchant Is Able To View Email Address In Email Detail\n    [Documentation] Validate Merchant Is Able To View Email Address In Email Detail\n    Launch Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    View Email Detail\n    Validate Email Address Displayed","Description":"This test case checks the validation for merchant's ability to view email address in email detail functionality.","Testcase name":"Validate Merchant Is Able To View Email Address In Email Detail","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n${INVOICE_DETAILS}      invoice_details\n\n*** Test Cases ***\nValidate Sending Invoice Email\n    [Documentation] Test case for validating that Merchant Is Able To Send Invoice Email From Invoice Details Page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Details Page\n    Click Send Invoice Email\n    Validate Email Sent","Description":"This test case checks the validation for sending invoice email from invoice details page functionality of the PayNOW datadriver.","Testcase name":"Validate Sending Invoice Email","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n${INVOICE_DETAILS}      invoice_details\n\n*** Test Cases ***\nValidate Sending Invoice Email Copy\n    [Documentation] Test case for validating that Merchant Is Able To Send Invoice Email Copy From Invoice Details Page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Details Page\n    Click Send Invoice Email Copy\n    Validate Email Copy Sent","Description":"This test case checks the validation for sending invoice email copy from invoice details page functionality of the PayNOW datadriver.","Testcase name":"Validate Sending Invoice Email Copy","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}     merchant_details\n${INVOICE_DETAILS}      invoice_details\n\n*** Test Cases ***\nValidate Cancelling Send Invoice Email Popup\n    [Documentation] Test case for validating that Merchant Is Able To Cancel Send Invoice Email Popup functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Details Page\n    Click Cancel on Send Invoice Email Popup\n    Validate Popup Cancelled","Description":"This test case checks the validation for cancelling send invoice email popup functionality of the PayNOW datadriver.","Testcase name":"Validate Cancelling Send Invoice Email Popup","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Navigation To Virtual Terminal\n    [Documentation] Test case for validating that Merchant Is Able To Navigate To Virtual Terminal By Clicking On Pay Invoice in Invoice Details Tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Details Tab\n    Click Pay Invoice\n    Validate Navigation to Virtual Terminal","Description":"This test case checks the validation for navigating to virtual terminal by clicking on pay invoice in invoice details tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Virtual Terminal","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Navigation To Invoice Page\n    [Documentation] Test case for validating that Merchant Is Able Navigate To Invoice Page By Clicking On Customer View in Invoice Details Page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Details Page\n    Click Customer View\n    Validate Navigation to Invoice Page","Description":"This test case checks the validation for navigating to invoice page by clicking on customer view in invoice details page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Invoice Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Navigation To Invoice Details Page\n    [Documentation] Test case for validating that Merchant Is Able To Navigate To Invoice Details Page From Invoice Page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate to Invoice Page\n    Click on Invoice\n    Validate Navigation to Invoice Details Page","Description":"This test case checks the validation for navigating to invoice details page from invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Invoice Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_SUMMARY}          invoice_summary\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigation To Customer Details\n    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice Summary Details ${INVOICE_SUMMARY}\n    Click On Customer Name\n    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}","Description":"This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Customer Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/paynow\n${INVOICE_PAGE}        invoice_page\n${CUSTOMER_PAGE}       customer_page\n\n*** Test Cases ***\nValidate Navigate to Customer Details Page\n    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Invoice Page ${INVOICE_PAGE}\n    Navigate To Customer Details Page ${CUSTOMER_PAGE}","Description":"This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate Navigate to Customer Details Page"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Sent Date And Provider Response Message Of Email functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/paynow\n${EMAIL_PAGE}          email_page\n${SENT_DATE}           sent_date\n${RESPONSE_MSG}        response_msg\n\n*** Test Cases ***\nValidate View Sent Date and Response Message\n    [Documentation] Test case for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Email Page ${EMAIL_PAGE}\n    Verify Sent Date ${SENT_DATE}\n    Verify Provider Response Message ${RESPONSE_MSG}","Description":"This test case checks the validation for viewing sent date and provider response message of email functionality of the PayNOW datadriver.","Testcase name":null,"Testcase Name":"Validate View Sent Date and Response Message"},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Subject And Sent Address Of Email functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${EMAIL_PAGE}               email_page\n${SUBJECT}                  subject\n${SENT_ADDRESS}             sent_address\n\n*** Test Cases ***\nValidate View Subject and Sent Address\n    [Documentation] Test case for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Email Page ${EMAIL_PAGE}\n    Verify Email Subject ${SUBJECT}\n    Verify Sent Address ${SENT_ADDRESS}","Description":"This test case checks the validation for viewing subject and sent address of email functionality of the PayNOW datadriver.","Testcase name":"Validate View Subject and Sent Address","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Single Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_PAGE}             invoice_page\n${FORMAT_TYPE}              format_type\n\n*** Test Cases ***\nValidate View Format Type for Single Invoice\n    [Documentation] Test case for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Invoice Page ${INVOICE_PAGE}\n    Verify Format Type ${FORMAT_TYPE}","Description":"This test case checks the validation for viewing format type for single invoice functionality of the PayNOW datadriver.","Testcase name":"Validate View Format Type for Single Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_PAGE}             invoice_page\n${FORMAT_TYPE}              format_type\n\n*** Test Cases ***\nValidate View Format Type for Multiple Invoices\n    [Documentation] Test case for validating that the merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Invoice Page ${INVOICE_PAGE}\n    Verify Format Type ${FORMAT_TYPE}","Description":"This test case checks the validation for viewing format type for multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Format Type for Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Pending Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${PENDING_PAYMENTS}         pending_payments\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate Navigate to Transaction Details from Pending Payments\n    [Documentation] Test case for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Pending Payments ${PENDING_PAYMENTS}\n    Navigate To Transaction Details ${TRANSACTION_DETAILS}","Description":"This test case checks the validation for navigating to transaction details from pending payments functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate to Transaction Details from Pending Payments","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_SUMMARY}          invoice_summary\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate to Customer Details from Invoice Summary\n    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Go To Invoice Summary ${INVOICE_SUMMARY}\n    Navigate To Customer Details ${CUSTOMER_DETAILS}","Description":"This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate to Customer Details from Invoice Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page From Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${CUSTOMER_DETAILS_PAGE}    customer_details_page\n\n*** Test Cases ***\nValidate Navigation To Customer Details Page\n    [Documentation] Test case for validating that merchant is able to navigate to customer details page from invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Page\n    Click On Customer Name\n    Validate Navigation To Customer Details Page ${CUSTOMER_DETAILS_PAGE}","Description":"This test case checks the validation for navigating to customer details page from invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Customer Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Sent Date And Provider Response Message Of Email functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${EMAIL_DETAILS}            email_details\n${SENT_DATE}                sent_date\n${PROVIDER_RESPONSE}        provider_response\n\n*** Test Cases ***\nValidate Email Details\n    [Documentation] Test case for validating that merchant is able to view sent date and provider response message of email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Email Details ${EMAIL_DETAILS}\n    View Sent Date ${SENT_DATE}\n    View Provider Response Message ${PROVIDER_RESPONSE}","Description":"This test case checks the validation for viewing sent date and provider response message of email functionality of the PayNOW datadriver.","Testcase name":"Validate Email Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Subject And Sent Address Of Email functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${EMAIL_DETAILS}            email_details\n${SUBJECT}                  subject\n${SENT_ADDRESS}             sent_address\n\n*** Test Cases ***\nValidate Email Subject And Sent Address\n    [Documentation] Test case for validating that merchant is able to view subject and sent address of email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Email Details ${EMAIL_DETAILS}\n    View Subject ${SUBJECT}\n    View Sent Address ${SENT_ADDRESS}","Description":"This test case checks the validation for viewing subject and sent address of email functionality of the PayNOW datadriver.","Testcase name":"Validate Email Subject And Sent Address","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Single Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_DETAILS}          invoice_details\n${FORMAT_TYPE}              format_type\n\n*** Test Cases ***\nValidate Single Invoice Format Type\n    [Documentation] Test case for validating that merchant is able to view format type for single invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice Details ${INVOICE_DETAILS}\n    View Format Type ${FORMAT_TYPE}","Description":"This test case checks the validation for viewing format type for single invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Single Invoice Format Type","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Format Type For Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_DETAILS}          invoice_details\n${FORMAT_TYPE}              format_type\n\n*** Test Cases ***\nValidate Multiple Invoices Format Type\n    [Documentation] Test case for validating that merchant is able to view format type for multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice Details ${INVOICE_DETAILS}\n    View Format Type ${FORMAT_TYPE}","Description":"This test case checks the validation for viewing format type for multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Multiple Invoices Format Type","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details From Pending Payments functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${PENDING_PAYMENTS}         pending_payments\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate Navigation To Transaction Details\n    [Documentation] Test case for validating that merchant is able to navigate to transaction details from pending payments functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Pending Payments Details ${PENDING_PAYMENTS}\n    Click On Transaction Details\n    Validate Navigation To Transaction Details ${TRANSACTION_DETAILS}","Description":"This test case checks the validation for navigating to transaction details from pending payments functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Transaction Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details From Invoice Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVOICE_SUMMARY}          invoice_summary\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigation To Customer Details\n    [Documentation] Test case for validating that merchant is able to navigate to customer details from invoice summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Invoice Summary Details ${INVOICE_SUMMARY}\n    Click On Customer Name\n    Validate Navigation To Customer Details ${CUSTOMER_DETAILS}","Description":"This test case checks the validation for navigating to customer details from invoice summary functionality of the PayNOW datadriver.","Testcase name":"Validate Navigation To Customer Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able to Expand And Collapse Invoice Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to expand and collapse invoice details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Expand And Collapse Invoice Details\n    [Documentation] Test case for validating that merchant is able to expand and collapse invoice details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Expand Invoice Details\n    Validate Invoice Details Expanded ${INVOICE_DETAILS}\n    Collapse Invoice Details\n    Validate Invoice Details Collapsed ${INVOICE_DETAILS}","Description":"This test case checks the validation for expanding and collapsing invoice details functionality of the PayNOW datadriver.","Testcase name":"Validate Expand And Collapse Invoice Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Enable Only show past due invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to enable only show past due invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${PAST_DUE_INVOICES}        past_due_invoices\n\n*** Test Cases ***\nValidate Enable Only Show Past Due Invoices\n    [Documentation] Test case for validating that merchant is able to enable only show past due invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enable Only Show Past Due Invoices\n    Validate Only Past Due Invoices Shown ${PAST_DUE_INVOICES}","Description":"This test case checks the validation for enabling only show past due invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Enable Only Show Past Due Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In Next And Previous Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view invoices in next and previous page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICES_PAGE}            invoices_page\n\n*** Test Cases ***\nValidate View Invoices In Next And Previous Page\n    [Documentation] Test case for validating that merchant is able to view invoices in next and previous page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Next Page\n    Validate Invoices In Next Page ${INVOICES_PAGE}\n    Navigate To Previous Page\n    Validate Invoices In Previous Page ${INVOICES_PAGE}","Description":"This test case checks the validation for viewing invoices in next and previous page functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices In Next And Previous Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices In Last And First Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view invoices in last and first page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICES_PAGE}            invoices_page\n\n*** Test Cases ***\nValidate View Invoices In Last And First Page\n    [Documentation] Test case for validating that merchant is able to view invoices in last and first page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Last Page Link\n    Validate Last Page Invoices Displayed ${INVOICES_PAGE}\n    Click First Page Link\n    Validate First Page Invoices Displayed ${INVOICES_PAGE}","Description":"This test case checks the validation for viewing invoices in last and first page functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices In Last And First Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Filter Invoice Data In Invoice Details Grid functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to filter invoice data in invoice details grid functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${INVOICE_FILTER}           invoice_filter\n\n*** Test Cases ***\nValidate Filter Invoice Data\n    [Documentation] Test case for validating that merchant is able to filter invoice data in invoice details grid functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Apply Invoice Filter ${INVOICE_FILTER}\n    Validate Filtered Invoice Data Displayed ${INVOICE_FILTER}","Description":"This test case checks the validation for filtering invoice data in invoice details grid functionality of the PayNOW datadriver.","Testcase name":"Validate Filter Invoice Data","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Email Clicked Date And Count When It Is Clicked functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view the email clicked date and count when it is clicked functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL_CLICKED}            email_clicked\n\n*** Test Cases ***\nValidate View Email Clicked Date And Count\n    [Documentation] Test case for validating that merchant is able to view the email clicked date and count when it is clicked functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Email Clicked Date Link\n    Validate Email Clicked Date And Count Displayed ${EMAIL_CLICKED}","Description":"This test case checks the validation for viewing the email clicked date and count when it is clicked functionality of the PayNOW datadriver.","Testcase name":"Validate View Email Clicked Date And Count","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Line Items Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view line items details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${LINE_ITEMS}               line_items\n\n*** Test Cases ***\nValidate View Line Items Details\n    [Documentation] Test case for validating that merchant is able to view line items details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Line Items Link\n    Validate Line Items Details Displayed ${LINE_ITEMS}","Description":"This test case checks the validation for viewing line items details functionality of the PayNOW datadriver.","Testcase name":"Validate View Line Items Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Tracking Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view tracking details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${TRACKING_DETAILS}         tracking_details\n\n*** Test Cases ***\nValidate View Tracking Details\n    [Documentation] Test case for validating that merchant is able to view tracking details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Tracking Details Link\n    Validate Tracking Details Displayed ${TRACKING_DETAILS}","Description":"This test case checks the validation for viewing tracking details functionality of the PayNOW datadriver.","Testcase name":"Validate View Tracking Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Financial Payments Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view financial payments details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${FINANCIAL_PAYMENTS}       financial_payments\n\n*** Test Cases ***\nValidate View Financial Payments Details\n    [Documentation] Test case for validating that merchant is able to view financial payments details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Financial Payments Link\n    Validate Financial Payments Details Displayed ${FINANCIAL_PAYMENTS}","Description":"This test case checks the validation for viewing financial payments details functionality of the PayNOW datadriver.","Testcase name":"Validate View Financial Payments Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Pending Payments Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that merchant is able to view pending payments details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${PENDING_PAYMENTS}         pending_payments\n\n*** Test Cases ***\nValidate View Pending Payments Details\n    [Documentation] Test case for validating that merchant is able to view pending payments details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Pending Payments Link\n    Validate Pending Payments Details Displayed ${PENDING_PAYMENTS}","Description":"This test case checks the validation for viewing pending payments details functionality of the PayNOW datadriver.","Testcase name":"Validate View Pending Payments Details","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate account number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating account number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            ACH \/ eCheck\n${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS\n${ERROR_MESSAGE}             customer_details.Error_Message\n\n*** Test Cases ***\nValidate Account Number Functionality Of PayNOW\n    [Documentation]    Test case for validating account number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter ACH\/ECheck Details    ${ACH_ECHECK_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the account number validation functionality for the PayNOW datadriver.","Testcase name":"Validate Account Number Functionality Of PayNOW","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate invoice number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating invoice number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${SPECIFIC_INVOICE}          specific_invoice\n${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS\n${ERROR_MESSAGE}             specific invoice.Error_Message\n\n*** Test Cases ***\nValidate Invoice Number Functionality Of PayNOW\n    [Documentation]    Test case for validating invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Click On Add Invoice    1\n    Validate Invoice Details With Invalid Data    test_case_validation    ${SPECIFIC_INVOICE}\n    Select Payment Method    ${ACH_ECHECK_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the invoice number validation functionality for the PayNOW datadriver.","Testcase name":"Validate Invoice Number Functionality Of PayNOW","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate credit card number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating credit card number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            Credit Card\n${CREDITCARD_DETAILS}        creditcard_details\n${ERROR_MESSAGE}             creditcard_details.Error_Message\n\n*** Test Cases ***\nValidate Credit Card Number Functionality Of PayNOW\n    [Documentation]    Test case for validating credit card number functionality of the PayNOW datadriver\n    Generate Random Customer Details\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Values    ${CREDITCARD_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the credit card number validation functionality for the PayNOW datadriver.","Testcase name":"Validate Credit Card Number Functionality Of PayNOW","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save All Account Type In ACHorEcheck Payment Method For Future Use functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Save All Account Types In ACHorEcheck Payment Method For Future Use\n    [Documentation]    Test case for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    All Account Types\n    Validate Payment Method Saved Successfully","Description":"This test case checks the validation for saving all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver.","Testcase name":"Validate Save All Account Types In ACHorEcheck Payment Method For Future Use","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate routing number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating routing number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            ACH \/ eCheck\n${ACH_ECHECK_DETAILS}        echeck_details\n${ERROR_MESSAGE}             Ach.Error_Message\n\n*** Test Cases ***\nValidate Routing Number Functionality Of PayNOW\n    [Documentation]    Test case for validating routing number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter ACH\/ECheck Values    ${ACH_ECHECK_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the routing number validation functionality for the PayNOW datadriver.","Testcase name":"Validate Routing Number Functionality Of PayNOW","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate process payment with Visa Debit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating process payment with Visa Debit card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            Credit Card\n${CREDITCARD_DETAILS}        creditcard_details\n${ERROR_MESSAGE}             creditcard_details.Error_Message\n\n*** Test Cases ***\nValidate Process Payment With Visa Debit Card Functionality Of PayNOW\n    [Documentation]    Test case for validating process payment with Visa Debit card functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Values    ${CREDITCARD_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the process payment functionality with Visa Debit card for the PayNOW datadriver.","Testcase name":"Validate Process Payment With Visa Debit Card Functionality Of PayNOW","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is unable to login into Paynow with invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to log in to PayNOW with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${ACCOUNT_NUMBER}            login_details.Account_Number\n${INVOICE_NUMBER}            login_details.Invoice_Number\n${ERROR_MESSAGE}             login_details.Error_Message\n${ACCOUNT_NO}                login_details.Account_No\n${CUSTOMER_NAME}             login_details.Customer_Name\n\n*** Test Cases ***\nValidate Customer Is Unable To Login With Invalid Account Number And Valid Or Invalid Invoice Number\n    [Documentation]    Test case for validating that the customer is unable to log in to PayNOW with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Validate Error Message Is Displayed    ${ERROR_MESSAGE}\n    Validate Account Number Is Displayed    ${ACCOUNT_NO}    ${CUSTOMER_NAME}","Description":"This test case checks the validation for customer login with an invalid account number and valid or invalid invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Unable To Login With Invalid Account Number And Valid Or Invalid Invoice Number","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is unable to login without invoice number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to log in without an invoice number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${ACCOUNT_NUMBER}            login_details.Account_Number\n${ERROR_MESSAGE}             login_details.Error_Message1\n\n*** Test Cases ***\nValidate Customer Is Unable To Login Without Invoice Number\n    [Documentation]    Test case for validating that the customer is unable to log in without an invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${OMNICORP_MERCHANT}\n    Enter Account Number And Invoice Number    ${ACCOUNT_NUMBER}\n    Validate Error Message For Empty Details    ${ACCOUNT_NUMBER}\n    Validate Error Message Is Displayed    ${ERROR_MESSAGE}","Description":"This test case checks the validation for customer login without an invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Unable To Login Without Invoice Number","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate merchant is able to schedule payment with master credit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to schedule payment with Master Credit Card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_NUMBER}            invoice_number\n${CUSTOMER_DETAILS}          customer_details\n${CREDIT_CARD_NUMBER}        Scheduled_Payments.Creditcard_Number\n${EXPIRY_DATE}               Scheduled_Payments.Expiry_Date\n${CVV}                       Scheduled_Payments.CVV\n${SCHEDULED_STATUS}          Scheduled_Payments.Status\n\n*** Test Cases ***\nValidate Merchant Is Able To Schedule Payment With Master Credit Card\n    [Documentation]    Test case for validating that the merchant is able to schedule payment with Master Credit Card functionality of the PayNOW datadriver\n    Launch PayNow Application    ${OMNICORP_MERCHANT}\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${OMNICORP_MERCHANT}\n    Select Payment Method    Credit Card\n    Enter Credit Card Details    ${CREDIT_CARD_NUMBER}    ${EXPIRY_DATE}    ${CVV}\n    Select Payment Date    today+1\n    Create Schedule Payment\n    Send Event To Process Schedule Payment    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Validate Scheduled Payment Status    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    ${SCHEDULED_STATUS}","Description":"This test case checks the validation for scheduling payment with Master Credit Card functionality of the PayNOW datadriver.","Testcase name":"Validate Merchant Is Able To Schedule Payment With Master Credit Card","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is able to process payment for CONNETICUT State (CT) with Credit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to process payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${STERLING_COOPER_MERCHANT}  STERLING_COOPER_MERCHANT\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_NUMBER}            invoice_number\n${STATES}                    states\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            Credit Card\n${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS\n${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage\n\n*** Test Cases ***\nValidate Customer Is Able To Process Payment For Connecticut State With Credit Card\n    [Documentation]    Test case for validating that the customer is able to process payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver\n    Send Request To Create Customer    ${STERLING_COOPER_MERCHANT}\n    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${STERLING_COOPER_MERCHANT}\n    Launch PayNow Application    ${STERLING_COOPER_MERCHANT}\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Enter Customer Details    ${STATES}    ${STERLING_COOPER_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}\n    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}","Description":"This test case checks the validation for processing payment for Connecticut State (CT) with Credit Card functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Able To Process Payment For Connecticut State With Credit Card","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is able to process payment for MAINE State (ME) with Credit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to process payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_NUMBER}            invoice_number\n${STATES}                    states\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            97.99\n${PAYMENT_METHOD}            Credit Card\n${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS\n${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage\n\n*** Test Cases ***\nValidate Customer Is Able To Process Payment For Maine State With Credit Card\n    [Documentation]    Test case for validating that the customer is able to process payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver\n    Send Request To Create Customer    ${OMNICORP_MERCHANT}\n    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}\n    Launch PayNow Application    ${OMNICORP_MERCHANT}\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Enter Customer Details    ${STATES}    ${OMNICORP_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}\n    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the validation for processing payment for Maine State (ME) with Credit Card functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Able To Process Payment For Maine State With Credit Card","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is able to process payment for MAINE State (ME) 2 with Credit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to process payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_NUMBER}            invoice_number\n${STATES}                    states\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            97.99\n${PAYMENT_METHOD}            Credit Card\n${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS\n${SURCHARGE_PERCENTAGE}      states.Surcharge_Percentage\n\n*** Test Cases ***\nValidate Customer Is Able To Process Payment For Maine State 2 With Credit Card\n    [Documentation]    Test case for validating that the customer is able to process payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver\n    Send Request To Create Customer    ${OMNICORP_MERCHANT}\n    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}\n    Launch PayNow Application    ${OMNICORP_MERCHANT}\n    Enter Account Number And Invoice    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Enter Customer Details    ${STATES}    ${OMNICORP_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}\n    Validate Surcharge Percentage Should Be Equal    ${SURCHARGE_PERCENTAGE}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the validation for processing payment for Maine State (ME) 2 with Credit Card functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Able To Process Payment For Maine State 2 With Credit Card","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_NUMBER}            invoice_number\n${PAYMENT_DETAILS_DAY}       Payment_details.Day\n${CARD_NUMBER}               4111111111111111\n\n*** Test Cases ***\nValidate Customer Is Able To Schedule AutoPay Payments On A Sunday Of The Week\n    [Documentation]    Test case for validating that the customer is able to schedule autopay payments on a Sunday of the week functionality of the PayNOW datadriver\n    Send Request To Create Customer    ${OMNICORP_MERCHANT}\n    Send Request To Create Invoice For Customer    ${ACCOUNT_NUMBER}    ${OMNICORP_MERCHANT}\n    Login To PayNOW And Navigate To Autopay    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}\n    Select Specific Day Of The Week    ${PAYMENT_DETAILS_DAY}\n    Select Invoices Due For The Payment\n    Enter Customer And Credit Card Details For Autopay    ${CARD_NUMBER}\n    Validate Created AutoPay Details For Specific Day    Days of Week    ${PAYMENT_DETAILS_DAY}\n    Send Request To Create AutoPay For Specific Day    ${ACCOUNT_NUMBER}    ${CARD_NUMBER}    ${PAYMENT_DETAILS_DAY}\n    Validate Created AutoPay Details For Specific Day    All Invoices Due    ${PAYMENT_DETAILS_DAY}\n    Validate AutoPay Origin In Scheduled Payments    ${ACCOUNT_NUMBER}    ${INVOICE_NUMBER}    AutoPay","Description":"This test case checks the validation for scheduling autopay payments on a Sunday of the week functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Able To Schedule AutoPay Payments On A Sunday Of The Week","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate customer is unable to process payment by a decline card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to process payment by a declined card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            Credit Card\n${CARD_DETAILS}              card_details\n${ERROR_MESSAGE}             card_details.Error_Message\n\n*** Test Cases ***\nValidate Customer Is Unable To Process Payment By A Declined Card\n    [Documentation]    Test case for validating that the customer is unable to process payment by a declined card functionality of the PayNOW datadriver\n    Launch PayNow Application    ${NON_INTEGRATED_MERCHANT}\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Values    ${CARD_DETAILS}\n    Validate Errors After Clicking On Process Invoice    ${ERROR_MESSAGE}","Description":"This test case checks the validation for processing payment by a declined card functionality of the PayNOW datadriver.","Testcase name":"Validate Customer Is Unable To Process Payment By A Declined Card","Testcase Name":null},{"Prompt":"Generate a Robot Framework test case for testing to validate non integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that a non-integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${NON_INTEGRATED_MERCHANT}   NON_INTEGRATED_MERCHANT\n${CUSTOMER_DETAILS}          customer_details\n${PAYMENT_TYPE}              Lump Sum\n${LUMPSUM_AMOUNT}            1\n${PAYMENT_METHOD}            Credit Card\n${CREDIT_CARD_DETAILS}       CREDIT_CARD_DETAILS\n${ACH_ECHECK_DETAILS}        ACH_ECHECK_DETAILS\n\n*** Test Cases ***\nValidate Non Integrated Customer Is Able To Process The Last Statement Payment Using Credit Card\n    [Documentation]    Test case for validating that a non-integrated customer is able to process the last statement payment using credit card functionality of the PayNOW datadriver\n    Generate Random Customer Details\n    Enter Customer Details    ${CUSTOMER_DETAILS}    ${NON_INTEGRATED_MERCHANT}\n    Select Payment Type    ${PAYMENT_TYPE}\n    Enter Lumpsum Amount    ${LUMPSUM_AMOUNT}\n    Select Payment Method    ${PAYMENT_METHOD}\n    Enter Credit Card Details    ${CREDIT_CARD_DETAILS}\n    Validate Total Charges Under Summary Of Payment    $1.03\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated\n    Select Payment Method    ACH \/ eCheck\n    Enter ACH\/ECheck Details    ${ACH_ECHECK_DETAILS}\n    Process Invoice Payment\n    Validate Payment Receipt Is Generated","Description":"This test case checks the validation for processing the last statement payment using credit card functionality of the PayNOW datadriver by a non-integrated customer.","Testcase name":"Validate Non Integrated Customer Is Able To Process The Last Statement Payment Using Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Customer Is Able To Expand And Collapse Line Items With '+ & -' Icons In invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to expand and collapse line items with '+ & -' icons in invoice page functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate Expand And Collapse Line Items In Invoice Page\n    [Documentation]    Test case for validating that the customer is able to expand and collapse line items with '+ & -' icons in invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Validate Expand Line Item    ${INVOICE_DETAILS}\n    Validate Collapse Line Item    ${INVOICE_DETAILS}","Description":"This test case checks the validation for expanding and collapsing line items with '+ & -' icons in the invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Expand And Collapse Line Items In Invoice Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Add Two Or More ACHoreCheck Payment Method Of Same Account Type For Future Use functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to add two or more ACHoreCheck payment method of same account type for future use functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Add Multiple ACHoreCheck Payment Methods For Future Use\n    [Documentation]    Test case for validating that integrated customer is able to add two or more ACHoreCheck payment method of same account type for future use functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHoreCheck Payment Method    ${ACH_DETAILS}\n    Validate Payment Method Added Successfully\n    Add Another ACHoreCheck Payment Method    ${ACH_DETAILS}\n    Validate Both Payment Methods Are Saved","Description":"This test case checks the validation for adding two or more ACHoreCheck payment methods of the same account type for future use functionality of the PayNOW datadriver.","Testcase name":"Validate Add Multiple ACHoreCheck Payment Methods For Future Use","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck For Future Use With Account Type - Business Savings functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Save ACHorEcheck For Future Use With Business Savings\n    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Business Savings\n    Validate Payment Method Saved Successfully","Description":"This test case checks the validation for saving ACHorEcheck for future use with account type - Business Savings functionality of the PayNOW datadriver.","Testcase name":"Validate Save ACHorEcheck For Future Use With Business Savings","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck for future Use With Account Type - Personal Checking functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Save ACHorEcheck For Future Use With Personal Checking\n    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Personal Checking\n    Validate Payment Method Saved Successfully","Description":"This test case checks the validation for saving ACHorEcheck for future use with account type - Personal Checking functionality of the PayNOW datadriver.","Testcase name":"Validate Save ACHorEcheck For Future Use With Personal Checking","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save ACHorEcheck for future Use With Account Type - Personal Savings functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Save ACHorEcheck For Future Use With Personal Savings\n    [Documentation]    Test case for validating that integrated customer is able to save ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    Personal Savings\n    Validate Payment Method Saved Successfully","Description":"This test case checks the validation for saving ACHorEcheck for future use with account type - Personal Savings functionality of the PayNOW datadriver.","Testcase name":"Validate Save ACHorEcheck For Future Use With Personal Savings","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save All Account Type In ACHorEcheck Payment Method For Future Use functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${ACH_DETAILS}               ach_details\n\n*** Test Cases ***\nValidate Save All Account Types In ACHorEcheck Payment Method For Future Use\n    [Documentation]    Test case for validating that integrated customer is able to save all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add ACHorEcheck Payment Method    ${ACH_DETAILS}    All Account Types\n    Validate Payment Method Saved Successfully","Description":"This test case checks the validation for saving all account types in ACHorEcheck payment method for future use functionality of the PayNOW datadriver.","Testcase name":"Validate Save All Account Types In ACHorEcheck Payment Method For Future Use","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Not Able To Process Partial Payment For More Than Two Invoices Without Giving Notes For All functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is not able to process partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate Not Able To Process Partial Payment For More Than Two Invoices Without Notes\n    [Documentation]    Test case for validating that the customer is not able to process partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select More Than Two Invoices\n    Enter Partial Payment Amounts\n    Attempt To Process Payment Without Notes\n    Validate Error Message Displayed    ${INVOICE_DETAILS}","Description":"This test case checks the validation for processing partial payment for more than two invoices without giving notes for all functionality of the PayNOW datadriver.","Testcase name":"Validate Not Able To Process Partial Payment For More Than Two Invoices Without Notes","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Change Amount To Pay To A Negative Value Or Value More Than Amount Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to change amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate Unable To Change Amount To Pay To Negative Or More Than Amount Due\n    [Documentation]    Test case for validating that the customer is unable to change amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select Invoice\n    Attempt To Change Amount To Negative Value\n    Validate Error Message Displayed    ${INVOICE_DETAILS}\n    Attempt To Change Amount To More Than Amount Due\n    Validate Error Message Displayed    ${INVOICE_DETAILS}","Description":"This test case checks the validation for changing amount to pay to a negative value or value more than amount due functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Change Amount To Pay To Negative Or More Than Amount Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Checkbox For An Invoice Gets Unchecked When Zero Amount To Pay Is Entered For That Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the checkbox for an invoice gets unchecked when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate Checkbox Unchecked When Zero Amount To Pay Entered\n    [Documentation]    Test case for validating that the checkbox for an invoice gets unchecked when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select Invoice\n    Enter Zero Amount To Pay\n    Validate Checkbox Gets Unchecked    ${INVOICE_DETAILS}","Description":"This test case checks the validation for checkbox getting unchecked for an invoice when zero amount to pay is entered for that invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Checkbox Unchecked When Zero Amount To Pay Entered","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Checkbox For An Invoice Gets Checkedorticked When A Non-zero Amount Is Entered In 'Amount To Pay' For That Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the checkbox for an invoice gets checked\/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate Checkbox Checked When Non-zero Amount Entered\n    [Documentation]    Test case for validating that the checkbox for an invoice gets checked\/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select Invoice\n    Enter Non-zero Amount To Pay\n    Validate Checkbox Gets Checked    ${INVOICE_DETAILS}","Description":"This test case checks the validation for the checkbox getting checked\/ticked when a non-zero amount is entered in 'Amount To Pay' for that invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Checkbox Checked When Non-zero Amount Entered","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customers Is Able To View All Invoices Associated With The Account Number In Open Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customers are able to view all invoices associated with the account number in open invoices functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${ACCOUNT_NUMBER}            account_number\n${INVOICE_DETAILS}           invoice_details\n\n*** Test Cases ***\nValidate View All Invoices Associated With Account Number\n    [Documentation]    Test case for validating that the customers are able to view all invoices associated with the account number in open invoices functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Account Number    ${ACCOUNT_NUMBER}\n    Navigate To Open Invoices Page\n    Validate All Invoices Displayed    ${INVOICE_DETAILS}","Description":"This test case checks the validation for viewing all invoices associated with the account number in open invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View All Invoices Associated With Account Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable To Login With invoice Without Entering Valid Invoice Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVALID_INVOICE_NUMBER}    invalid_invoice_number\n\n*** Test Cases ***\nValidate Enter PayNOW Without Invoice Number And Unable To Login With Invalid Invoice\n    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Attempt To Login Without Invoice Number\n    Validate Unable To Login    ${INVALID_INVOICE_NUMBER}\n    Attempt To Login With Invalid Invoice Number\n    Validate Unable To Login    ${INVALID_INVOICE_NUMBER}","Description":"This test case checks the validation for entering PayNOW without invoice number and unable to login with invoice without entering valid invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Enter PayNOW Without Invoice Number And Unable To Login With Invalid Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable To Process Payment For Invalid Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVALID_INVOICE_NUMBER}    invalid_invoice_number\n\n*** Test Cases ***\nValidate Enter PayNOW Without Invoice Number And Unable To Process Invalid Invoices\n    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Attempt To Process Payment Without Invoice Number\n    Validate Unable To Process Payment    ${INVALID_INVOICE_NUMBER}\n    Attempt To Process Payment For Invalid Invoice\n    Validate Unable To Process Payment    ${INVALID_INVOICE_NUMBER}","Description":"This test case checks the validation for entering PayNOW without invoice number and unable to process payment for invalid invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Enter PayNOW Without Invoice Number And Unable To Process Invalid Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Enter PayNOW Without Invoice Number And Unable to Process Payment By Loading Invalid Account Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to enter PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${INVALID_ACCOUNT_NUMBER}    invalid_account_number\n\n*** Test Cases ***\nValidate Enter PayNOW Without Invoice Number And Unable To Process Payment With Invalid Account Number\n    [Documentation]    Test case for validating that the customer is able to enter PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Attempt To Process Payment Without Invoice Number\n    Validate Unable To Process Payment    ${INVALID_ACCOUNT_NUMBER}\n    Attempt To Process Payment With Invalid Account Number\n    Validate Unable To Process Payment    ${INVALID_ACCOUNT_NUMBER}","Description":"This test case checks the validation for entering PayNOW without invoice number and unable to process payment by loading invalid account number functionality of the PayNOW datadriver.","Testcase name":"Validate Enter PayNOW Without Invoice Number And Unable To Process Payment With Invalid Account Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Enter Into Paynow With Valid Credentials After Three Previous Failed Login Attempts functionality of the PayNOW datadriver.","Response":"*** Settings *** \nDocumentation   Test cases for validating that the customer is able to enter into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver\nLibrary         SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${VALID_CREDENTIALS}        valid_credentials\n${INVALID_CREDENTIALS}      invalid_credentials\n\n*** Test Cases ***\nValidate Enter Paynow With Valid Credentials After Three Failed Login Attempts\n    [Documentation]             Test case for validating that the customer is able to enter into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver\n    Launch PayNow Application   ${URL}\n    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}\n    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}\n    Attempt Login With Invalid Credentials ${INVALID_CREDENTIALS}\n    Attempt Login With Valid Credentials ${VALID_CREDENTIALS}\n    Validate Successful Login","Description":"This test case checks the validation for entering into PayNOW with valid credentials after three previous failed login attempts functionality of the PayNOW datadriver.","Testcase name":"Validate Enter Paynow With Valid Credentials After Three Failed Login Attempts","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Surcharge Cache Is Cleared When Customer Switches Payment Methods From Saved Credit Card To ACHorECheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the surcharge cache is cleared when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CREDIT_CARD_DETAILS}      credit_card_details\n${ACH_DETAILS}              ach_details\n\n*** Test Cases ***\nValidate Surcharge Cache Cleared When Switching Payment Methods\n    [Documentation] Test case for validating that the surcharge cache is cleared when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Payment Method ${CREDIT_CARD_DETAILS}\n    Validate Surcharge Applied\n    Switch To ACHorECheck Payment Method ${ACH_DETAILS}\n    Validate Surcharge Cache Cleared","Description":"This test case checks the validation for clearing the surcharge cache when the customer switches payment methods from saved credit card to ACHorECheck functionality of the PayNOW datadriver.","Testcase name":"Validate Surcharge Cache Cleared When Switching Payment Methods","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Discount Amount Is Applied On Total Due Amount If Payment Is Made Before The Terms Discount Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer discount amount is applied on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DISCOUNT_DETAILS}         discount_details\n\n*** Test Cases ***\nValidate Discount Applied Before Terms Discount Date\n    [Documentation] Test case for validating that the customer discount amount is applied on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Validate Total Due Amount ${DISCOUNT_DETAILS}\n    Make Payment Before Discount Date\n    Validate Discount Applied","Description":"This test case checks the validation for applying customer discount amount on total due amount if payment is made before the terms discount date functionality of the PayNOW datadriver.","Testcase name":"Validate Discount Applied Before Terms Discount Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Surcharge Is Applied As Per The State And This Is Added With Payment Amount To Get The Total Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the surcharge is applied as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${STATE_SURCHARGE_DETAILS}  state_surcharge_details\n\n*** Test Cases ***\nValidate Surcharge Applied As Per State\n    [Documentation] Test case for validating that the surcharge is applied as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select State ${STATE_SURCHARGE_DETAILS}\n    Validate Surcharge Applied\n    Validate Total Amount Including Surcharge","Description":"This test case checks the validation for applying surcharge as per the state and this is added with payment amount to get the total amount functionality of the PayNOW datadriver.","Testcase name":"Validate Surcharge Applied As Per State","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Current Due Amount Invoice Are Selected When Customer Click On Current Due Amount Link In Outstanding Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all current due amount invoices are selected when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CURRENT_DUE_INVOICES}     current_due_invoices\n\n*** Test Cases ***\nValidate Current Due Amount Invoices Selected\n    [Documentation] Test case for validating that all current due amount invoices are selected when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click Current Due Amount Link\n    Validate All Current Due Invoices Selected ${CURRENT_DUE_INVOICES}","Description":"This test case checks the validation for selecting all current due amount invoices when customer clicks on current due amount link in outstanding invoice functionality of the PayNOW datadriver.","Testcase name":"Validate Current Due Amount Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Invoices Due for 1-30 Days Are Selected When Customer Clicks On 1-30 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices due for 1-30 days are selected when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DUE_1_30_INVOICES}        due_1_30_invoices\n\n*** Test Cases ***\nValidate 1-30 Days Due Invoices Selected\n    [Documentation] Test case for validating that all invoices due for 1-30 days are selected when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click 1-30 Amount Link\n    Validate All 1-30 Days Due Invoices Selected ${DUE_1_30_INVOICES}","Description":"This test case checks the validation for selecting all invoices due for 1-30 days when customer clicks on 1-30 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate 1-30 Days Due Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Invoices Due For 31-60 Days Are Selected When Customer Clicks On 31-60 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices due for 31-60 days are selected when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DUE_31_60_INVOICES}       due_31_60_invoices\n\n*** Test Cases ***\nValidate 31-60 Days Due Invoices Selected\n    [Documentation] Test case for validating that all invoices due for 31-60 days are selected when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click 31-60 Amount Link\n    Validate All 31-60 Days Due Invoices Selected ${DUE_31_60_INVOICES}","Description":"This test case checks the validation for selecting all invoices due for 31-60 days when customer clicks on 31-60 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate 31-60 Days Due Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Invoices Due For 61-90 Days Are Selected When Customer Clicks On 61-90 Amount link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DUE_61_90_INVOICES}       due_61_90_invoices\n\n*** Test Cases ***\nValidate 61-90 Days Due Invoices Selected\n    [Documentation] Test case for validating that all invoices due for 61-90 days are selected when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click 61-90 Amount Link\n    Validate All 61-90 Days Due Invoices Selected ${DUE_61_90_INVOICES}","Description":"This test case checks the validation for selecting all invoices due for 61-90 days when customer clicks on 61-90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate 61-90 Days Due Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Invoices Due For Over 90 Days Are Selected When Customer Clicks On Over 90 Amount Link In Summary Of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices due for over 90 days are selected when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DUE_OVER_90_INVOICES}     due_over_90_invoices\n\n*** Test Cases ***\nValidate Over 90 Days Due Invoices Selected\n    [Documentation] Test case for validating that all invoices due for over 90 days are selected when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click Over 90 Amount Link\n    Validate All Over 90 Days Due Invoices Selected ${DUE_OVER_90_INVOICES}","Description":"This test case checks the validation for selecting all invoices due for over 90 days when customer clicks on over 90 amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Over 90 Days Due Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate All Invoice Are Selected When Customer Clicks On Total Amount Link In Summary of Outstanding Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that all invoices are selected when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${TOTAL_INVOICES}           total_invoices\n\n*** Test Cases ***\nValidate Total Amount Invoices Selected\n    [Documentation] Test case for validating that all invoices are selected when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click Total Amount Link\n    Validate All Invoices Selected ${TOTAL_INVOICES}","Description":"This test case checks the validation for selecting all invoices when customer clicks on total amount link in summary of outstanding invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Total Amount Invoices Selected","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Customer Is Able To Expand And Collapse Line Items In Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to expand and collapse line items in invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Expand And Collapse Line Items\n    [Documentation] Test case for validating that the customer is able to expand and collapse line items in invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Expand Line Items ${INVOICE_DETAILS}\n    Collapse Line Items ${INVOICE_DETAILS}\n    Validate Expand And Collapse Functionality","Description":"This test case checks the validation for expanding and collapsing line items in invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Expand And Collapse Line Items","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Login Into Paynow With Empty Account Number And Invoice Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to login into Paynow with empty account number and invoice number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${EMPTY_CREDENTIALS}        empty_credentials\n\n*** Test Cases ***\nValidate Unable To Login With Empty Credentials\n    [Documentation] Test case for validating that the customer is unable to login into Paynow with empty account number and invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Attempt Login With Empty Credentials ${EMPTY_CREDENTIALS}\n    Validate Login Failure","Description":"This test case checks the validation for login failure with empty account number and invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Login With Empty Credentials","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Click on Payment Secured Link And Close It functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to click on payment secured link and close it functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_SECURED_LINK}     payment_secured_link\n\n*** Test Cases ***\nValidate Click And Close Payment Secured Link\n    [Documentation] Test case for validating that the integrated customer is able to click on payment secured link and close it functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click Payment Secured Link ${PAYMENT_SECURED_LINK}\n    Close Payment Secured Link\n    Validate Link Closure","Description":"This test case checks the validation for clicking and closing the payment secured link functionality of the PayNOW datadriver.","Testcase name":"Validate Click And Close Payment Secured Link","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Save Credit Card Payment Method For Future Use functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to save credit card payment method for future use functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CREDIT_CARD_DETAILS}      credit_card_details\n\n*** Test Cases ***\nValidate Save Credit Card For Future Use\n    [Documentation] Test case for validating that the integrated customer is able to save credit card payment method for future use functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Credit Card Details ${CREDIT_CARD_DETAILS}\n    Save Credit Card For Future Use\n    Validate Credit Card Saved","Description":"This test case checks the validation for saving credit card payment method for future use functionality of the PayNOW datadriver.","Testcase name":"Validate Save Credit Card For Future Use","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Able To Add Two or More Credit Cards For Future Use functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to add two or more credit cards for future use functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CREDIT_CARD_1_DETAILS}    credit_card_1_details\n${CREDIT_CARD_2_DETAILS}    credit_card_2_details\n\n*** Test Cases ***\nValidate Add Multiple Credit Cards For Future Use\n    [Documentation] Test case for validating that the integrated customer is able to add two or more credit cards for future use functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter First Credit Card Details ${CREDIT_CARD_1_DETAILS}\n    Save First Credit Card For Future Use\n    Enter Second Credit Card Details ${CREDIT_CARD_2_DETAILS}\n    Save Second Credit Card For Future Use\n    Validate Multiple Credit Cards Saved","Description":"This test case checks the validation for adding two or more credit cards for future use functionality of the PayNOW datadriver.","Testcase name":"Validate Add Multiple Credit Cards For Future Use","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Click On 'Find Routing Number' In ACHorEcheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to click on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${FIND_ROUTING_NUMBER_LINK} find_routing_number_link\n\n*** Test Cases ***\nValidate Click On 'Find Routing Number' Link\n    [Documentation] Test case for validating that the integrated customer is able to click on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Click On 'Find Routing Number' Link ${FIND_ROUTING_NUMBER_LINK}\n    Validate Routing Number Link Clicked","Description":"This test case checks the validation for clicking on 'Find Routing Number' in ACHorEcheck functionality of the PayNOW datadriver.","Testcase name":"Validate Click On 'Find Routing Number' Link","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That The Customer Is Able To View Paid Payment Status On Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view paid payment status on invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate View Paid Payment Status On Invoice Page\n    [Documentation] Test case for validating that the customer is able to view paid payment status on invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    View Paid Payment Status ${INVOICE_DETAILS}\n    Validate Paid Payment Status Viewed","Description":"This test case checks the validation for viewing paid payment status on invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate View Paid Payment Status On Invoice Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able Resume The Process Payment After Resolving Errors functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to resume the process payment after resolving errors functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Resume Process Payment After Resolving Errors\n    [Documentation] Test case for validating that the customer is able to resume the process payment after resolving errors functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Attempt Process Payment ${INVOICE_DETAILS}\n    Resolve Errors\n    Resume Process Payment\n    Validate Process Payment Resumed","Description":"This test case checks the validation for resuming the process payment after resolving errors functionality of the PayNOW datadriver.","Testcase name":"Validate Resume Process Payment After Resolving Errors","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Gounified Website From PayNOW Application functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to Gounified website from PayNOW application functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${GOUNIFIED_URL}            gounified_url\n\n*** Test Cases ***\nValidate Navigate To Gounified Website\n    [Documentation] Test case for validating that the customer is able to navigate to Gounified website from PayNOW application functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Gounified Website ${GOUNIFIED_URL}\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to Gounified website from PayNOW application functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Gounified Website","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To PayNOW Application From Payment Receipt Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to PayNOW application from payment receipt page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${RECEIPT_PAGE}             receipt_page\n\n*** Test Cases ***\nValidate Navigate To PayNOW From Receipt Page\n    [Documentation] Test case for validating that the customer is able to navigate to PayNOW application from payment receipt page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Receipt Page ${RECEIPT_PAGE}\n    Navigate To PayNOW Application\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to PayNOW application from payment receipt page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To PayNOW From Receipt Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Paid Invoices Depending On Selected Start Date And End Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view paid invoices depending on selected start date and end date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View Paid Invoices By Date Range\n    [Documentation] Test case for validating that the customer is able to view paid invoices depending on selected start date and end date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Paid Invoices\n    Validate Paid Invoices Displayed","Description":"This test case checks the validation for viewing paid invoices depending on selected start date and end date functionality of the PayNOW datadriver.","Testcase name":"Validate View Paid Invoices By Date Range","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Process Payment By Using Saved Credit Card Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to process payment by using saved credit card payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SAVED_CREDIT_CARD}        saved_credit_card\n\n*** Test Cases ***\nValidate Process Payment Using Saved Credit Card\n    [Documentation] Test case for validating that the customer is able to process payment by using saved credit card payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Saved Credit Card ${SAVED_CREDIT_CARD}\n    Process Payment\n    Validate Payment Processed","Description":"This test case checks the validation for processing payment by using saved credit card payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Using Saved Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Edit Only The Nickname Of The Customer In The Saved Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to edit only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SAVED_PAYMENT_METHOD}     saved_payment_method\n${NEW_NICKNAME}             new_nickname\n\n*** Test Cases ***\nValidate Edit Nickname In Saved Payment Method\n    [Documentation] Test case for validating that the customer is able to edit only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Saved Payment Method ${SAVED_PAYMENT_METHOD}\n    Edit Nickname ${NEW_NICKNAME}\n    Validate Nickname Edited","Description":"This test case checks the validation for editing only the nickname of the customer in the saved payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Edit Nickname In Saved Payment Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Close(X) The Delete Payment Method Confirmation Pop-Up Window functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to close(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DELETE_CONFIRM_POPUP}     delete_confirm_popup\n\n*** Test Cases ***\nValidate Close Delete Payment Method Popup\n    [Documentation] Test case for validating that the customer is able to close(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Trigger Delete Payment Method Popup ${DELETE_CONFIRM_POPUP}\n    Close Delete Payment Method Popup\n    Validate Popup Closed","Description":"This test case checks the validation for closing(X) the delete payment method confirmation pop-up window functionality of the PayNOW datadriver.","Testcase name":"Validate Close Delete Payment Method Popup","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Process Payment By Using Saved ACHorECheck Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to process payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SAVED_ACH_METHOD}         saved_ach_method\n\n*** Test Cases ***\nValidate Process Payment Using Saved ACH Method\n    [Documentation] Test case for validating that the customer is able to process payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Saved ACHorECheck Method ${SAVED_ACH_METHOD}\n    Process Payment\n    Validate Payment Processed","Description":"This test case checks the validation for processing payment by using saved ACHorECheck payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Using Saved ACH Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment For Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to process payment for multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Process Payment For Multiple Invoices\n    [Documentation] Test case for validating that the integrated customer is able to process payment for multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Access Multiple Invoices ${INVOICE_DETAILS}\n    Process Payment\n    Validate Payment Successfully Processed","Description":"This test case checks the validation for processing payment for multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment For Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Invoice Number Gets Checked After Clicking Pay Invoice Button On Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the invoice number gets checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Invoice Number Checked After Clicking Pay Invoice Button\n    [Documentation] Test case for validating that the invoice number gets checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Click Pay Invoice Button ${INVOICE_DETAILS}\n    Validate Invoice Number Checked","Description":"This test case checks the validation for invoice number getting checked after clicking pay invoice button on invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Invoice Number Checked After Clicking Pay Invoice Button","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment Through Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to process payment through credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CREDIT_CARD_DETAILS}      credit_card_details\n\n*** Test Cases ***\nValidate Process Payment Through Credit Card\n    [Documentation] Test case for validating that the integrated customer is able to process payment through credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Credit Card Payment Method ${CREDIT_CARD_DETAILS}\n    Process Payment\n    Validate Payment Processed","Description":"This test case checks the validation for processing payment through credit card functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Through Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process Payment Through ACHorECheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to process payment through ACHorECheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${ACH_DETAILS}              ach_details\n\n*** Test Cases ***\nValidate Process Payment Through ACHorECheck\n    [Documentation] Test case for validating that the integrated customer is able to process payment through ACHorECheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select ACHorECheck Payment Method ${ACH_DETAILS}\n    Process Payment\n    Validate Payment Processed","Description":"This test case checks the validation for processing payment through ACHorECheck functionality of the PayNOW datadriver.","Testcase name":"Validate Process Payment Through ACHorECheck","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Unable To Process Payment More Than Due Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is unable to process payment more than due amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Unable To Process Payment More Than Due Amount\n    [Documentation] Test case for validating that the integrated customer is unable to process payment more than due amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Attempt Process Payment More Than Due Amount ${INVOICE_DETAILS}\n    Validate Payment Failure","Description":"This test case checks the validation for being unable to process payment more than due amount functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Payment More Than Due Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details\n\n*** Test Cases ***\nValidate Process The Lump Sum Payment\n    [Documentation] Test case for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}\n    Validate Payment Processed","Description":"This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.","Testcase name":"Validate Process The Lump Sum Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Load Unpaid Invoice When Entered Into Paynow Without Invoice Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to load unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${UNPAID_INVOICE_DETAILS}   unpaid_invoice_details\n\n*** Test Cases ***\nValidate Load Unpaid Invoice Without Invoice Number\n    [Documentation] Test case for validating that the customer is able to load unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Load Unpaid Invoice ${UNPAID_INVOICE_DETAILS}\n    Validate Unpaid Invoice Loaded","Description":"This test case checks the validation for loading unpaid invoice when entered into Paynow without invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Load Unpaid Invoice Without Invoice Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Total Amount Is Updated As Per The Changes In Invoices Due Amount functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Total Amount Updated As Per Changes In Invoices Due Amount\n    [Documentation] Test case for validating that the total amount is updated as per the changes in invoices due amount functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Update Invoices Due Amount ${INVOICE_DETAILS}\n    Validate Total Amount Updated","Description":"This test case checks the validation for total amount updating as per the changes in invoices due amount functionality of the PayNOW datadriver.","Testcase name":"Validate Total Amount Updated As Per Changes In Invoices Due Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Only Filtered Invoices Are Displayed As Per The Filter Conditions functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that only filtered invoices are displayed as per the filter conditions functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${FILTER_CONDITIONS}        filter_conditions\n\n*** Test Cases ***\nValidate Only Filtered Invoices Displayed As Per Filter Conditions\n    [Documentation] Test case for validating that only filtered invoices are displayed as per the filter conditions functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Apply Filter Conditions ${FILTER_CONDITIONS}\n    Validate Filtered Invoices Displayed","Description":"This test case checks the validation for only filtered invoices being displayed as per the filter conditions functionality of the PayNOW datadriver.","Testcase name":"Validate Only Filtered Invoices Displayed As Per Filter Conditions","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Select Pages From Dropdown In Specific Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to select pages from dropdown in specific invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DROPDOWN_OPTIONS}         dropdown_options\n\n*** Test Cases ***\nValidate Select Pages From Dropdown In Specific Invoices\n    [Documentation] Test case for validating that the customer is able to select pages from dropdown in specific invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Pages From Dropdown ${DROPDOWN_OPTIONS}\n    Validate Pages Selected","Description":"This test case checks the validation for selecting pages from dropdown in specific invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Select Pages From Dropdown In Specific Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Invoice Check Box Should Be Checked By Default When It Passed Due Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the invoice check box should be checked by default when it passed due date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Invoice Check Box Checked By Default When Passed Due Date\n    [Documentation] Test case for validating that the invoice check box should be checked by default when it passed due date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Validate Invoice Check Box Checked","Description":"This test case checks the validation for invoice check box being checked by default when it passed due date functionality of the PayNOW datadriver.","Testcase name":"Validate Invoice Check Box Checked By Default When Passed Due Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Payment History Depending On Selected Start Date And End Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view payment history depending on selected start date and end date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View Payment History By Date Range\n    [Documentation] Test case for validating that the customer is able to view payment history depending on selected start date and end date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Payment History\n    Validate Payment History Displayed","Description":"This test case checks the validation for viewing payment history depending on selected start date and end date functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment History By Date Range","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Download PDF From Invoice Page And Verify The Data functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to download PDF from invoice page and verify the data functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n${PDF_DATA}                 pdf_data\n\n*** Test Cases ***\nValidate Download PDF And Verify Data\n    [Documentation] Test case for validating that the customer is able to download PDF from invoice page and verify the data functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Download PDF ${INVOICE_DETAILS}\n    Verify PDF Data ${PDF_DATA}\n    Validate PDF Data Correctly Matched","Description":"This test case checks the validation for downloading PDF from invoice page and verifying the data functionality of the PayNOW datadriver.","Testcase name":"Validate Download PDF And Verify Data","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate That Customer Is Able To Navigate To Invoice Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to invoice page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Page\n    [Documentation] Test case for validating that the customer is able to navigate to invoice page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to invoice page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Login Into Paynow With Empty Invoice Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to login into Paynow with empty invoice number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Login With Empty Invoice Number\n    [Documentation] Test case for validating that the customer is able to login into Paynow with empty invoice number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Leave Invoice Number Empty\n    Attempt Login\n    Validate Login Successful","Description":"This test case checks the validation for logging into Paynow with empty invoice number functionality of the PayNOW datadriver.","Testcase name":"Validate Login With Empty Invoice Number","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Verify Paid Invoices After Processing Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to verify paid invoices after processing payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Verify Paid Invoices After Processing Payment\n    [Documentation] Test case for validating that the customer is able to verify paid invoices after processing payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Process Payment ${INVOICE_DETAILS}\n    Verify Paid Invoices\n    Validate Paid Invoices Verified","Description":"This test case checks the validation for verifying paid invoices after processing payment functionality of the PayNOW datadriver.","Testcase name":"Validate Verify Paid Invoices After Processing Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With Negative Amount Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process payment with negative amount due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEGATIVE_AMOUNT}          negative_amount\n\n*** Test Cases ***\nValidate Unable To Process Payment With Negative Amount Due\n    [Documentation] Test case for validating that the customer is unable to process payment with negative amount due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Negative Amount ${NEGATIVE_AMOUNT}\n    Attempt Process Payment\n    Validate Payment Failure","Description":"This test case checks the validation for being unable to process payment with negative amount due functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Payment With Negative Amount Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Select One Of The Saved Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to select one of the saved payment methods functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${SAVED_PAYMENT_METHOD}     saved_payment_method\n\n*** Test Cases ***\nValidate Select One Of The Saved Payment Method\n    [Documentation] Test case for validating that the customer is able to select one of the saved payment methods functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Saved Payment Method ${SAVED_PAYMENT_METHOD}\n    Validate Payment Method Selected","Description":"This test case checks the validation for selecting one of the saved payment methods functionality of the PayNOW datadriver.","Testcase name":"Validate Select One Of The Saved Payment Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Last 30 Days Payment History functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view last 30 days payment history functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View Last 30 Days Payment History\n    [Documentation] Test case for validating that the customer is able to view last 30 days payment history functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Payment History\n    Validate Payment History Displayed","Description":"This test case checks the validation for viewing last 30 days payment history functionality of the PayNOW datadriver.","Testcase name":"Validate View Last 30 Days Payment History","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View This Month Payment History functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view this month's payment history functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View This Month Payment History\n    [Documentation] Test case for validating that the customer is able to view this month's payment history functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Payment History\n    Validate Payment History Displayed","Description":"This test case checks the validation for viewing this month's payment history functionality of the PayNOW datadriver.","Testcase name":"Validate View This Month Payment History","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Last Month Payment History functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view last month's payment history functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View Last Month Payment History\n    [Documentation] Test case for validating that the customer is able to view last month's payment history functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Payment History\n    Validate Payment History Displayed","Description":"This test case checks the validation for viewing last month's payment history functionality of the PayNOW datadriver.","Testcase name":"Validate View Last Month Payment History","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to select all invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Select All Invoices\n    [Documentation] Test case for validating that the integrated customer is able to select all invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select All Invoices\n    Validate All Invoices Selected","Description":"This test case checks the validation for selecting all invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Select All Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Due Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to select all due invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Select All Due Invoices\n    [Documentation] Test case for validating that the integrated customer is able to select all due invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select All Due Invoices\n    Validate All Due Invoices Selected","Description":"This test case checks the validation for selecting all due invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Select All Due Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Select All Invoice On Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to select all invoice on page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Select All Invoice On Page\n    [Documentation] Test case for validating that the integrated customer is able to select all invoice on page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select All Invoice On Page\n    Validate All Invoice On Page Selected","Description":"This test case checks the validation for selecting all invoice on page functionality of the PayNOW datadriver.","Testcase name":"Validate Select All Invoice On Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Unselect All Invoices On Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to unselect all invoices on page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unselect All Invoices On Page\n    [Documentation] Test case for validating that the integrated customer is able to unselect all invoices on page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Unselect All Invoices On Page\n    Validate All Invoices On Page Unselected","Description":"This test case checks the validation for unselecting all invoices on page functionality of the PayNOW datadriver.","Testcase name":"Validate Unselect All Invoices On Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Specific Invoice Details In The Open Invoices Table functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating specific invoice details in the open invoices table functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Specific Invoice Details In Open Invoices Table\n    [Documentation] Test case for validating specific invoice details in the open invoices table functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Open Invoices Table\n    Validate Specific Invoice Details ${INVOICE_DETAILS}","Description":"This test case checks the validation for specific invoice details in the open invoices table functionality of the PayNOW datadriver.","Testcase name":"Validate Specific Invoice Details In Open Invoices Table","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Payment History Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to payment history tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate To Payment History Tab\n    [Documentation] Test case for validating that the customer is able to navigate to payment history tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment History Tab\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to payment history tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Payment History Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Select Today Date From Date Range functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to select today's date from date range functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${TODAY_DATE}               today_date\n\n*** Test Cases ***\nValidate Select Today Date From Date Range\n    [Documentation] Test case for validating that the customer is able to select today's date from date range functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Today's Date ${TODAY_DATE}\n    Validate Date Selected","Description":"This test case checks the validation for selecting today's date from date range functionality of the PayNOW datadriver.","Testcase name":"Validate Select Today Date From Date Range","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Select Yesterday's Date From Date Range functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to select yesterday's date from date range functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${YESTERDAY_DATE}           yesterday_date\n\n*** Test Cases ***\nValidate Select Yesterday's Date From Date Range\n    [Documentation] Test case for validating that the customer is able to select yesterday's date from date range functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Yesterday's Date ${YESTERDAY_DATE}\n    Validate Date Selected","Description":"This test case checks the validation for selecting yesterday's date from date range functionality of the PayNOW datadriver.","Testcase name":"Validate Select Yesterday's Date From Date Range","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To See Selected Invoices Count functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to see selected invoices count functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate See Selected Invoices Count\n    [Documentation] Test case for validating that the customer is able to see selected invoices count functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Invoices\n    Validate Selected Invoices Count Displayed","Description":"This test case checks the validation for seeing selected invoices count functionality of the PayNOW datadriver.","Testcase name":"Validate See Selected Invoices Count","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Cancel Login With Invoice Pop-Up functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to cancel login with invoice pop-up functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Cancel Login With Invoice Pop-Up\n    [Documentation] Test case for validating that the customer is able to cancel login with invoice pop-up functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Trigger Login With Invoice Pop-Up\n    Cancel Pop-Up\n    Validate Pop-Up Cancelled","Description":"This test case checks the validation for canceling login with invoice pop-up functionality of the PayNOW datadriver.","Testcase name":"Validate Cancel Login With Invoice Pop-Up","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Integrated Customer Is Able To Process The Lump Sum Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${LUMP_SUM_PAYMENT_DETAILS} lump_sum_payment_details\n\n*** Test Cases ***\nValidate Process The Lump Sum Payment\n    [Documentation] Test case for validating that the integrated customer is able to process the lump sum payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Process Lump Sum Payment ${LUMP_SUM_PAYMENT_DETAILS}\n    Validate Payment Processed","Description":"This test case checks the validation for processing the lump sum payment functionality of the PayNOW datadriver.","Testcase name":"Validate Process The Lump Sum Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In Current Days Past Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the amount due is appropriately updated in current days past due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CURRENT_DAYS_PAST_DUE}    current_days_past_due\n\n*** Test Cases ***\nValidate Amount Due Updated In Current Days Past Due\n    [Documentation] Test case for validating that the amount due is appropriately updated in current days past due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Past Due Invoices\n    Validate Amount Due Updated ${CURRENT_DAYS_PAST_DUE}","Description":"This test case checks the validation for amount due being appropriately updated in current days past due functionality of the PayNOW datadriver.","Testcase name":"Validate Amount Due Updated In Current Days Past Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 1-31 Days Past Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the amount due is appropriately updated in 1-31 days past due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DAYS_PAST_DUE}            days_past_due\n\n*** Test Cases ***\nValidate Amount Due Updated In 1-31 Days Past Due\n    [Documentation] Test case for validating that the amount due is appropriately updated in 1-31 days past due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Past Due Invoices\n    Validate Amount Due Updated ${DAYS_PAST_DUE}","Description":"This test case checks the validation for amount due being appropriately updated in 1-31 days past due functionality of the PayNOW datadriver.","Testcase name":"Validate Amount Due Updated In 1-31 Days Past Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 31-60 Days Past Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the amount due is appropriately updated in 31-60 days past due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DAYS_PAST_DUE}            days_past_due\n\n*** Test Cases ***\nValidate Amount Due Updated In 31-60 Days Past Due\n    [Documentation] Test case for validating that the amount due is appropriately updated in 31-60 days past due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Past Due Invoices\n    Validate Amount Due Updated ${DAYS_PAST_DUE}","Description":"This test case checks the validation for amount due being appropriately updated in 31-60 days past due functionality of the PayNOW datadriver.","Testcase name":"Validate Amount Due Updated In 31-60 Days Past Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In 61-90 Days Past Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the amount due is appropriately updated in 61-90 days past due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DAYS_PAST_DUE}            days_past_due\n\n*** Test Cases ***\nValidate Amount Due Updated In 61-90 Days Past Due\n    [Documentation] Test case for validating that the amount due is appropriately updated in 61-90 days past due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Past Due Invoices\n    Validate Amount Due Updated ${DAYS_PAST_DUE}","Description":"This test case checks the validation for amount due being appropriately updated in 61-90 days past due functionality of the PayNOW datadriver.","Testcase name":"Validate Amount Due Updated In 61-90 Days Past Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Amount Due Is Appropriately Updated In Over 90 Days Past Due functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the amount due is appropriately updated in over 90 days past due functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DAYS_PAST_DUE}            days_past_due\n\n*** Test Cases ***\nValidate Amount Due Updated In Over 90 Days Past Due\n    [Documentation] Test case for validating that the amount due is appropriately updated in over 90 days past due functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Past Due Invoices\n    Validate Amount Due Updated ${DAYS_PAST_DUE}","Description":"This test case checks the validation for amount due being appropriately updated in over 90 days past due functionality of the PayNOW datadriver.","Testcase name":"Validate Amount Due Updated In Over 90 Days Past Due","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Fully Paid Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process fully paid invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Unable To Process Fully Paid Invoices\n    [Documentation] Test case for validating that the customer is unable to process fully paid invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Fully Paid Invoices ${INVOICE_DETAILS}\n    Validate Unable To Process","Description":"This test case checks the validation for being unable to process fully paid invoices functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Fully Paid Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To View Last 7 Days Payment History functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view last 7 days payment history functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate View Last 7 Days Payment History\n    [Documentation] Test case for validating that the customer is able to view last 7 days payment history functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    View Payment History\n    Validate Payment History Displayed","Description":"This test case checks the validation for viewing last 7 days payment history functionality of the PayNOW datadriver.","Testcase name":"Validate View Last 7 Days Payment History","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With Decline Check functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process payment with decline check functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CHECK_DETAILS}            check_details\n\n*** Test Cases ***\nValidate Unable To Process Payment With Decline Check\n    [Documentation] Test case for validating that the customer is unable to process payment with decline check functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Process Payment With Decline Check ${CHECK_DETAILS}\n    Validate Payment Declined","Description":"This test case checks the validation for being unable to process payment with decline check functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Process Payment With Decline Check","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Payment History Is Updated As Soon As Payment Receipt Generated functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the payment history is updated as soon as payment receipt generated functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_RECEIPT_DETAILS}  payment_receipt_details\n\n*** Test Cases ***\nValidate Payment History Updated As Soon As Receipt Generated\n    [Documentation] Test case for validating that the payment history is updated as soon as payment receipt generated functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Generate Payment Receipt ${PAYMENT_RECEIPT_DETAILS}\n    Validate Payment History Updated","Description":"This test case checks the validation for payment history being updated as soon as payment receipt generated functionality of the PayNOW datadriver.","Testcase name":"Validate Payment History Updated As Soon As Receipt Generated","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Delete Saved Payment Method functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to delete saved payment method functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_METHOD_DETAILS}   payment_method_details\n\n*** Test Cases ***\nValidate Delete Saved Payment Method\n    [Documentation] Test case for validating that the customer is able to delete saved payment method functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Saved Payment Methods\n    Delete Saved Payment Method ${PAYMENT_METHOD_DETAILS}\n    Validate Payment Method Deleted","Description":"This test case checks the validation for deleting saved payment method functionality of the PayNOW datadriver.","Testcase name":"Validate Delete Saved Payment Method","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Customer Is Able To Navigate To Next Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to navigate to the next page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Navigate To Next Page\n    [Documentation] Test case for validating that the customer is able to navigate to the next page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Next Page\n    Validate Navigation Successful","Description":"This test case checks the validation for navigating to the next page functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Next Page","Testcase Name":null},{"Prompt":{"0":"Generate a robot framework test case for testing the ability to Validate Customer Is Able To Receive Payment Reminders functionality of the BillPro system.","1":"Generate a robot framework test case for testing to Validate Customer Is Able to Update Billing Information functionality of the BillNOW datadriver.","2":"Generate a robot framework test case for testing the validation to ensure that the maximum allowable payment amount is enforced by the PayNOW datadriver.","3":"Generate a robot framework test case for testing to Validate User is Unable to Access Locked Features with Basic Subscription functionality of the MyService platform.","4":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Personal Information functionality of the MyAccount datadriver.","5":"Generate a robot framework test case for testing to Validate Customer Unable To Add Duplicate Email Addresses functionality of the MyPay system.","6":"Generate a robot framework test case for testing the functionality to Validate Customer Is Able To Update Billing Address in the PremiumPay service.","7":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method Information functionality of the PayNOW datadriver.","8":"Generate a robot framework test case for testing to validate customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver.","9":"Generate a robot framework test case for testing to Validate Customer Is Unable To Download Receipt Without Providing Email functionality of the BillPay datadriver.","10":"Generate a robot framework test case for testing to Validate Customer Unable To Create Weekly AutoPay Schedule For Invalid Account functionality of the PayAuto service.","11":"Generate a robot framework test case for testing to Validate User Is Able To Update Billing Address Functionality in the PayNOW datadriver.","12":"Generate a robot framework test case for testing to Validate Customer Is Able To Set Up Recurring Payments On A Weekly Basis functionality of the PayNOW datadriver.","13":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method Details functionality of the PayMATE datadriver.","14":"Generate a Robot Framework test case for testing to Validate Customer Is Able To Receive Payment Confirmation Email functionality of the EZCheckout driver.","15":"Generate a robot framework test case for testing to validate user navigation to the contact support page functionality of the AppNOW application.","16":"Generate a robot framework test case for testing to Validate Customer CAN Add New Address On Checkout functionality of the ShopNOW datadriver.","17":"Generate a robot framework test case for testing to Validate the User Registration functionality of the ShopEZ datadriver.","18":"Generate a robot framework test case for testing to Validate Customer Is Able To Download and Print Invoice functionality of the PayNOW datadriver.","19":"Generate a robot framework test case for testing the functionality of viewing account balance immediately after login in the BankApp app.","20":"Generate a robot framework test case for testing to Validate Customer Is Unable To Apply Discount Code After Expiration functionality of the ShopEasy datadriver.","21":"Generate a robot framework test case for testing to Validate Admin Can Generate Monthly Reporting functionality of the CommerceX datadriver.","22":"Generate a robot framework test case for testing to Validate Customer Is Able To Opt-In For Monthly Email Invoices feature of the InvoicePortal datadriver.","23":"Generate a robot framework test case for testing to Validate User Cannot Exceed Maximum Login Attempts After Multiple Invalid Password Inputs functionality of the OnlineBank Module.","24":"Generate a robot framework test case for testing to validate adding a new item to the customer's wishlist on the eCommerce site.","25":"Generate a robot framework test case for testing to Validate User Can Successfully Register With Valid Credentials functionality of the QuickPay platform.","26":"Generate a robot framework test case for testing to validate the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver.","27":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Bank Account Details functionality of the Financial App platform.","28":"Generate a robot framework test case for testing to Validate Customer Is Unable To Register With Invalid Email Address in the registration functionality of the DefSecure application.","29":"Generate a robot framework test case for testing to Validate User Is Able To Retrieve Forgotten Password functionality of the ResetPassword datadriver.","30":"Generate a robot framework test case for testing to Validate Customer Is Unable To Update Personal Details Without Confirmation functionality of the UserProfileManager.","31":"Generate a robot framework test case for validating the successful logout functionality of the BillingNow data application.","32":"Generate a robot framework test case for testing to Validate Incorrect Username\/Password Behavior functionality of the SecurePay datadriver.","33":"Generate a robot framework test case for testing the login functionality with an expired password for the MyPay app.","34":"Generate a robot framework test case for testing the user ability to generate a monthly report of all transactions on the platform.","35":"Generate a robot framework test case for testing to validate that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver.","36":"Generate a robot framework test case for testing to Validate Customer Unable To View Payment History functionality of the InvoiceNOW datadriver.","37":"Generate a robot framework test case to validate if the user can view detailed transaction history on the Transactions page of the BillingNow datadriver.","38":"Generate a Robot Framework test case for testing to Validate User Account Lockout After Multiple Failed Login Attempts functionality of the SecureBanking datadriver.","39":"Generate a robot framework test case for testing to Validate User Unable To Sign In With Incorrect Password functionality of the LoginService.","40":"Generate a Robot Framework test case for testing to Validate User Registration With Email Verification functionality of the SignUp module.","41":"Generate a Robot Framework test case for testing to Validate User Is Able To Reset Password Through Email functionality of the PayNOW datadriver.","42":"Generate a robot framework test case for testing to Validate the Update Personal Information functionality of the UserProfile datadriver.","43":"Generate a robot framework test case for testing to Validate Customer Can Successfully Update Their Personal Profile Information Through The MightyPay datadriver.","44":"Generate a robot framework test case for testing to validate user can update personal information from the profile page functionality of the NewApp datadriver.","45":"Generate a robot framework test case to validate waiver of transaction fees for government-issued debit cards functionality of the ServiceX system.","46":"Generate a robot framework test case for testing to Validate Customer Ability to Update Personal Information functionality of the MyAccount manager.","47":"Generate a robot framework test case for testing to Validate Customer Is Able To Apply Promotional Code During Checkout functionality of the PayNow datadriver.","48":"Generate a robot framework test case for testing to Validate User Unable To Reset Password With Invalid Email functionality of the SecureNOW application.","49":"Generate a robot framework test case for testing to Validate Customer Unable to Subscribe to Monthly Plan Without Credit Card functionality of the PremiumSubscription system.","50":"Generate a robot framework test case for testing to Validate User Registration With Email Verification functionality of the SignUp system.","51":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Information For Existing Account functionality of the BillFast system.","52":"Generate a robot framework test case for testing to Validate User is unable to Register a New Account with an already Registered Email functionality of the UserAccount datadriver.","53":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Saved Credit Card Details functionality of the PayLater datadriver.","54":"Generate a robot framework test case for testing to Validate Merchant Is Able To Offer Discount For Early Payment functionality of the PayFIRST datadriver.","55":"Generate a robot framework test case for testing the functionality to validate that customers can update their profile information in the MyAccount datadriver.","56":"Generate a robot framework test case for testing the functionality that validates customer is unable to cancel a confirmed payment in the MyAccount datadriver.","57":"Generate a robot framework test case for testing to Validate User Registration With Valid Email functionality of the MyApp datadriver.","58":"Generate a robot framework test case for testing to Validate User Is Unable To Access Premium Features Without Subscription on the MyService platform.","59":"Generate a robot framework test case for testing to Validate Customer Is Able To Add New Payment Method functionality of the QuickPay application.","60":"Generate a robot framework test case for testing to Validate User Is Able To Update Profile Information functionality of the MyBankApp datadriver.","61":"Generate a robot framework test case for testing to Validate User's Ability to Reset Password Through an Email Verification Code functionality of the GoUnified system.","62":"Generate a robot framework test case for testing to Validate Customer Receives Notification For Upcoming Payment functionality of the PayNOW datadriver.","63":"Generate a robot framework test case for testing to validate user registration with valid and invalid Email Address on the MyCompany platform.","64":"Generate a robot framework test case for testing to Validate User Unable To Reset Password With Invalid Email Address functionality of the SecureLogin system.","65":"Generate a robot framework test case for testing to Validate User Is Unable To Place Order With Expired Credit Card functionality of the Checkout process.","66":"Generate a robot framework test case for testing to Validate Customer Is Able To Pay Multiple Invoices With Different Payment Methods functionality of the SuperPay datadriver.","67":"Generate a robot framework test case for testing to Validate Customer Is Able To Download Transaction Report in CSV format on the Payment Portal.","68":"Generate a robot framework test case for testing to Validate User Login with Incorrect Password functionality of the CompanyPortal system.","69":"Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule Same-Day Payment Transfer In The BANKPAY system.","70":"Generate a robot framework test case for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform.","71":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the SuperPay datadriver.","72":"Generate a robot framework test case for testing to Validate Customer Can Edit Payment Details After Scheduling Payment functionality of the PayBuddy system.","73":"Generate a robot framework test case for testing to validate customer is able to update saved credit card details functionality of the PayNOW datadriver.","74":"Generate a robot framework test case for testing to Validate Merchant Is Able To Change Invoice Due Date functionality of the MerchEasy payment system.","75":"Generate a robot framework test case for testing to Validate Customer Can Modify Shipping Address Before Order Confirmation on the ShopNow platform.","76":"Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Registered Email functionality of the MyBankNow application.","77":"Generate a robot framework test case for testing to Validate That Merchant Is Able To Update Customer Information functionality of the PayNOW datadriver.","78":"Generate a robot framework test case for testing to Validate User Is Unable To Update Sensitive Information Without Authentication functionality of the DataSecure system.","79":"Generate a robot framework test case for testing to Validate Customer Is Able To Save Their Preferred Shipping Address functionality of the ShopMaster datadriver.","80":"Generate a robot framework test case for testing to Validate User Login With Invalid Credentials functionality of the PayOnTime datadriver.","81":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Billing Information functionality of the PayNOW datadriver.","82":"Generate a Robot Framework test case for testing the functionality of customer authorization workflow within the SecurePay application.","83":"Generate a robot framework test case for testing to validate customer is able to update profile information in the user settings module.","84":"Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password After Failed Login Attempts functionality of the PayLATER datadriver.","85":"Generate a robot framework test case for testing to Validate Shopping Cart Applies Coupons Correctly in the OnlineStore system.","86":"Generate a robot framework test case for testing to Validate User Is Able To Register With Valid Credentials functionality of the RegisterNow datadriver.","87":"Generate a robot framework test case for testing to Validate User Registration With Valid Credentials functionality of the MobileApp datadriver.","88":"Generate a robot framework test case for testing the validation to ensure Customer Is Unable To Proceed With Payment Without Providing CVV Number when using a credit card functionality.","89":"Generate a robot framework test case for testing to Validate Customer Is Able To Upload Documents For Invoice functionality of the InvoiceManager datadriver.","90":"Generate a Robot Framework test case for testing to Validate Customer Is Able To Apply Discount Coupon functionality of the PayNOW datadriver.","91":"Generate a robot framework test case for testing the ability to filter transactions based on payment type for customers on the ECommerce portal.","92":"Generate a robot framework test case for testing to Validate Customer Can Track Refund Status In Their Account functionality of the PayNOW datadriver.","93":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Payment Method For A Recurring Payment functionality of the DirectPAY datadriver.","94":"Generate a robot framework test case for testing to Validate User Is Able To Create And Save Recurring Payments functionality of the PayTECH datadriver.","95":"Generate a robot framework test case for testing to Validate Customer Is Able To Export Transaction Report As CSV Functionality of the ExportMagic datadriver.","96":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the SecurePay service.","97":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the PayNOW datadriver.","98":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password functionality of the Account Management system.","99":"Generate a robot framework test case for testing to Validate Customer Can Update Contact Information functionality of the PayNOW datadriver.","100":"Generate a Robot Framework test case for testing to Validate User Is Unable To Delete Account With An Outstanding Balance functionality of the FinanceApp datadriver.","101":"Generate a robot framework test case for testing to Validate User Authentication With Two-Factor Authentication functionality of the SecureAuthApp datadriver.","102":"Generate a robot framework test case for testing to validate Customer Is Unable To Schedule Payment For Invoices Older Than One Year functionality of the PayRepay application.","103":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Contact Information functionality of the AccountManager datadriver.","104":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Existing Payment Method functionality of the BillNow datadriver.","105":"Generate a robot framework test case for validating the functionality that ensures a Customer Can Update Their Profile Information in the Account Management section of the FoodNow application.","106":"Generate a robot framework test case for testing to Validate User Can Reset Password Using Email functionality of the UserManagementSystem.","107":"Generate a robot framework test case for testing to validate user is able to reset password functionality of the PayFast datadriver.","108":"Generate a robot framework test case for testing to Validate Customer Can Create Recurring Payment For Weekly Invoices functionality of the BillNow datadriver.","109":"Generate a robot framework test case for testing the functionality of validating successful login and viewing account balance in the Bank Transactions system.","110":"Generate a robot framework test case for testing to Validate Custom Discount Offer During Checkout functionality of the QuickPay system.","111":"Generate a robot framework test case for testing to Validate Customer Can Successfully Split Payment Across Multiple Invoices functionality of the PaymentSystem datadriver.","112":"Generate a robot framework test case for testing the validation of users being unable to register a new account with an already used email address functionality.","113":"Generate a robot framework test case for testing to Validate Non-Integrated Customer Is Able To View Available Balance Before Making Payment functionality of the PayNOW datadriver.","114":"Generate a robot framework test case for testing to validate customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver.","115":"Generate a robot framework test case for testing to validate the functionality of user registration with an email confirmation on the MyApp application.","116":"Generate a robot framework test case for testing to Validate User Able To Reset Password Via Email functionality of the SecureBank platform.","117":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment With An Expired Credit Card functionality of the SecurePay datadriver.","118":"Generate a robot framework test case for testing the functionality that validates if the customer is able to update billing information after a payment has been processed in the PayNOW datadriver.","119":"Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Weekly Sales Reports functionality of the PayNOW datadriver.","120":"Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout functionality of the BillingNow module.","121":"Generate a robot framework test case for testing the functionality to ensure customers can update their email address in Digipay application.","122":"Generate a robot framework test case for testing to Validate Customer Is Able To Create A New User Account Functionality of the MyApp datadriver.","123":"Generate a robot framework test case for testing to Validate Customer Receives Email Notification After Successful Payment Completion functionality of the PayFORWARD datadriver.","124":"Generate a robot framework test case for testing to Validate User Is Able To Update Account Information functionality of the BankPro datadriver.","125":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password Using Forgot Password Functionality in the MyBank Application.","126":"Generate a robot framework test case for testing to Ensure User Account Lockout After Multiple Failed Login Attempts functionality of the SecurePay system.","127":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password From Forgot Password Link functionality of the MyAccount portal.","128":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the EcomPAY datadriver.","129":"Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout Workflow of the ShopEasy datadriver.","130":"Generate a robot framework test case for testing to validate customer is unable to view transaction summary without required permissions functionality of the ShopEasy application.","131":"Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule Recurring Payments On Holidays functionality of the EasyPay datadriver.","132":"Generate a robot framework test case for testing to Validate Merchant Is Able To Set Up Recurring Payments functionality of the BillPay datadriver.","133":"Generate a robot framework test case for testing to Validate Customer Is Able To Apply Discount Code During Checkout functionality of the ShopEasy datadriver.","134":"Generate a robot framework test case for testing to Validate Customer Is Unable To Schedule A Recurring Payment With An Expired Card functionality of the QuickPay system.","135":"Generate a robot framework test case for testing to validate that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver.","136":"Generate a robot framework test case for testing the validation of Secure Password Policy enforcement in the new user registration functionality of the SecureAuth platform.","137":"Generate a robot framework test case for testing the validation of adding items to the shopping cart for the eShop application.","138":"Generate a robot framework test case for testing to Validate Customer Is Able To View Payment Summary Page functionality of the InvoiceHub datadriver.","139":"Generate a robot framework test case for testing to Validate Customer Can Create Subscription For Recurring Orders functionality of the ShopSmart datadriver.","140":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Profile Information functionality of the ProfileManager system.","141":"Generate a robot framework test case for testing the Validate Customer Cannot Add More Than Three Recipients To An Invoice functionality of the PayLater datadriver.","142":"Generate a robot framework test case for testing to Validate Customer Is Unable To Add Bank Account Without Routing Number functionality of the OmniBank datadriver.","143":"Generate a robot framework test case for testing to Validate Customer Can Update Billing Address functionality of the PaymentPortal.","144":"Generate a robot framework test case for testing the validation of customers being unable to exceed payment limits using the PayEASY system.","145":"Generate a robot framework test case for testing to Validate Customer Is Able To Save Payment Method As Default functionality of the PayGLOBAl datadriver.","146":"Generate a robot framework test case for testing to validate user cannot reset password without valid email functionality of the SecureAccess datadriver.","147":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Profile Information functionality of the AccountManager system.","148":"Generate a robot framework test case for validating successful login functionality using valid credentials of the BankApp system.","149":"Generate a robot framework test case for testing to Validate User Unable To Schedule Payment For Expired Invoices functionality of the BillPay datadriver.","150":"Generate a robot framework test case for testing to Validate Customer Is Unable To Exceed Transaction Limit functionality of the QuickPay datadriver.","151":"Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Monthly Financial Reports functionality of the FinSERV datadriver.","152":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password Through Email functionality of the SecureApp datadriver.","153":"Generate a robot framework test case for testing to Validate User Is Unable To Register With Invalid Email Address functionality of the MyApp datadriver.","154":"Generate a robot framework test case for testing to Validate Customer Is Unable To Add Items To Cart That Are Out Of Stock functionality of the eCommerceWebapp.","155":"Generate a Robot Framework test case for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application.","156":"Generate a robot framework test case for testing to validate customer is able to update the payment method details functionality of the PaymentGateway datadriver.","157":"Create a robot framework test case for testing to Verify User Is Unable To Reset Password With Invalid Email Address functionality of the SecureAccess module.","158":"Generate a robot framework test case for testing to validate that the user cannot login with an expired session token in an e-commerce platform.","159":"Generate a robot framework test case for testing the functionality of viewing list of upcoming orders in the OrderManagement System.","160":"Generate a robot framework test case for testing to Validate User Registration with Valid and Invalid Data functionality of the PayNOW datadriver.","161":"Generate a robot framework test case for testing to Validate User Is Able To Change Their Password functionality of the MyBanking application.","162":"Generate a robot framework test case for testing the validation of customer unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system.","163":"Generate a robot framework test case for testing to Validate Customer Is Unable To Register With Invalid Email Functionality of the PayNOW datadriver.","164":"Generate a robot framework test case for testing the ability to reset user passwords via the Forgot Password feature of the SecureLogin application.","165":"Generate a Robot Framework test case for testing to Validate User Can Add Multiple Products To Shopping Cart functionality of the eCommerce platform.","166":"Generate a robot framework test case for testing to Validate Merchant Is Able To Initiate Refund For Cancelled Orders functionality of the OrderNow datadriver.","167":"Generate a Robot Framework test case for testing to Validate Customer Unable to Complete Payment Without Adding a Billing Address functionality of the PayFaster platform.","168":"Generate a Robot Framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the PaymentApp datadriver.","169":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password via Email functionality of the MyAccount service.","170":"Generate a robot framework test case for testing to validate that Customer Is Able To Reset Their Password functionality of the AccountManagement datadriver.","171":"Generate a robot framework test case for testing to Validate Customer Is Unable To Make a Purchase Over Their Credit Limit functionality of the SecureShop datadriver.","172":"Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Monthly Transaction Report functionality of the PayREPORT system.","173":"Generate a robot framework test case for testing to Validate User Registration functionality of the MyService datadriver.","174":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Shipping Address for an Order functionality of the ShopEZ data engine.","175":"Generate a robot framework test case for testing the Add New Customer functionality of the User Management module.","176":"Generate a robot framework test case for checking the ability of the customer to update their billing information on the MyAccount page functionality.","177":"Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Email functionality of the MyAPP datadriver.","178":"Generate a robot framework test case for validating that a customer cannot login with an expired account in the MyBank application.","179":"Generate a robot framework test case for testing to Validate Merchant Is Able To Generate Daily Sales Reports functionality of the SalesTracker application.","180":"Generate a robot framework test case for testing to Validate User Is Able To Recover Password Using Registered Email functionality of the E-Shop datadriver.","181":"Generate a robot framework test case for testing to Validate Customer Can Generate Invoice Report functionality of the InvoiceNow datadriver.","182":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Information After Making A Purchase functionality of the ShopEase platform.","183":"Generate a robot framework test case for testing to Validate Customer Is Able To Generate Invoice Reports functionality of the ReportGEN datadriver.","184":"Generate a robot framework test case for validating the creation of a new user account functionality of the MetroPay datadriver.","185":"Generate a robot framework test case for validating the functionality where a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days.","186":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Scheduled Payment Date functionality of the SysFIN datadriver.","187":"Generate a robot framework test case for testing to Validate Customer Is Able To View Detailed Invoice History functionality of the InvoiceViewer datadriver.","188":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Updated Balance After Processing Refund functionality of the QuickPay datadriver.","189":"Generate a robot framework test case for testing the validation of customer's ability to reset their password via email verification functionality of the SecurePAY system.","190":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the PayNOW datadriver.","191":"Generate a robot framework test case for testing to validate customer data encryption functionality of the PaymentSecure datadriver.","192":"Generate a robot framework test case for testing the functionality of system logging out idle users automatically after a specified time period in the SecurePay app.","193":"Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Email functionality of the PayNOW datadriver.","194":"Generate a robot framework test case for testing the validation of the user registration process on the client's web application.","195":"Generate a robot framework test case for testing the Check Cart Total Calculation functionality of the OnlineShopping datadriver.","196":"Generate a robot framework test case for testing to Validate Customer Can Successfully Use Account Recovery functionality of the SafeBank application.","197":"Generate a robot framework test case for testing to ensure Customer Can Successfully Update Email Address on Profile Page functionality of the PayNOW User Profile module.","198":"Generate a robot framework test case for testing to Validate Customer Is Able To Logout Successfully functionality of the SecurePay application.","199":"Generate a robot framework test case for testing to Validate Customer Is Able To Change Shipping Address Before Order Confirmation functionality of the ShopNOW application.","200":"Generate a robot framework test case for testing to Validate User Registration With Valid Details functionality of the SampleApp datadriver.","201":"Generate a robot framework test case to validate the ability for customers to update their billing address in customer settings functionality.","202":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Email Address functionality of the PayNOW datadriver.","203":"Generate a robot framework test case for testing to Validate User Can Update Profile Information functionality of the MyProfile datadriver.","204":"Generate a robot framework test case for testing to Validate Customer Unable To Make Payment With Expired Credit Card functionality of the PayNOW datadriver.","205":"Generate a robot framework test case for testing to Validate Customer Is Able To View Payment History Over The Last Six Months functionality of the PayNOW datadriver.","206":"Generate a robot framework test case for testing to Validate Payment Reminder Notifications Are Sent Through SMS functionality of the BillNotify datadriver.","207":"Generate a robot framework test case for testing to Validate Customer Is Unable To Add More Than Three Payment Methods functionality of the MoneyApp datadriver.","208":"Generate a robot framework test case for testing to Validate Refund Of Payment functionality of the PayNOW datadriver.","209":"Generate a robot framework test case for testing the functionality of validating user login to the MartSecure application with both valid and invalid credentials.","210":"Generate a robot framework test case for testing the Download and Print Invoice functionality of the ManagePAY datadriver.","211":"Generate a robot framework test case for testing to Validate User Password Reset Through Email functionality of the SecureAuth application.","212":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Using Expired Credit Card functionality of the FinPay datadriver.","213":"Create a Robot Framework test case for verifying the functionality to ensure users can update their profile details on the MyAccount application.","214":"Generate a robot framework test case for testing to Validate Customer Is Able To Reschedule AutoPay For A Future Date functionality of the AutoPAY system.","215":"Generate a robot framework test case for testing to Validate Customer Is Able To Reset Password Using Registered Email functionality of the PayRESET datadriver.","216":"Generate a robot framework test case for testing to Validate User Can Update Personal Information functionality of the MyApp system.","217":"Generate a robot framework test case for testing the validation to ensure customers can update their profile information in the UserPortal system.","218":"Generate a robot framework test case for testing to Validate User Is Able To Change Email Address In Profile functionality of the MyAccount data driver.","219":"Generate a robot framework test case for testing to Validate Customer Is Unable To Apply Discount Code For Invoices That Are Already Discounted functionality of the PaymentPlus datadriver.","220":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Their Billing Address In The Profile functionality of the AccountManagement system.","221":"Generate a robot framework test case for testing the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver.","222":"Generate a robot framework test case for testing to Validate User Is Unable To Reset Password Without Security Questions functionality of the SecureNow datadriver.","223":"Generate a robot framework test case for testing to Validate Customer Unable To Process Refunds On Transactions Older Than 180 Days functionality of the PayNOW datadriver.","224":"Generate a robot framework test case for testing the validation of an admin user being able to create new user accounts in the UserManagement system.","225":"Generate a robot framework test case for validating the functionality of user registration and login process for the 'QuickPay' application.","226":"Generate a robot framework test case for testing the validation of successful order placement with multiple items in the ShoppingCart application.","227":"Generate a robot framework test case for testing to Validate Customer Is Able To Generate Monthly Financial Reports functionality of the PayNOW datadriver.","228":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Shipping Address While Checkout functionality of the ShopNow datadriver.","229":"Generate a robot framework test case for validating customer login functionality using two-factor authentication in the SecurePay application.","230":"Generate a robot framework test case for testing the validation of Customer Ability to Receive Payment Confirmation Email functionality of the PayNOW app.","231":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the BillTech datadriver.","232":"Generate a robot framework test case for testing the validation of customer being unable to update expired credit card functionality in the PayFLOW application.","233":"Generate a robot framework test case for testing the validation of Customer Being Able to Update their Profile Information functionality of the PayNOW application.","234":"Generate a robot framework test case for testing to Validate Merchant Is Able To Override Default Tax Calculation functionality of the ShopEZ datadriver.","235":"Generate a robot framework test case for testing to Validate User Can Update Profile Information functionality of the eBanking platform.","236":"Generate a robot framework test case for testing to Validate Customer Is Unable To View Transactions Without Logging In functionality of the FinanceApp datadriver.","237":"Generate a robot framework test case for testing to Validate Customer Can Update Personal Information In Their Profile functionality of the MyProfile data driver.","238":"Generate a robot framework test case for testing the Book Appointment feature of the HealthCare App to validate the customer is unable to book an appointment with an unavailable doctor.","239":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Process Payment Without Providing Customer ID functionality of the QuickPay datadriver.","240":"Generate a robot framework test case for testing the validation for generating monthly user activity report functionality of the ReportMaster datadriver.","241":"Generate a robot framework test case for testing to Validate User Unable To Login With Invalid Credentials functionality of the BankNOW application.","242":"Generate a robot framework test case for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal.","243":"Generate a robot framework test case for testing to validate customer can change and update billing address functionality of the PayNOW datadriver.","244":"Generate a robot framework test case for testing the Validate Customer Can Update Their Billing Address functionality of the EasyBill system.","245":"Generate a robot framework test case for testing to Validate Customer Is Unable To Create Recurring Payment For Expired Card functionality of the TransactX system.","246":"Generate a robot framework test case for testing to Validate Customer Is Able To Modify Saved AutoPay Schedule functionality of the BillNow datadriver.","247":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password Via Email functionality of the SecurePAY datadriver.","248":"Generate a robot framework test case for testing to Validate User Is Able To Change Password functionality of the SecurePay datadriver.","249":"Generate a robot framework test case for testing to Validate Customer Is Able To Download Payment Receipt As PDF from the PayNOW portal.","250":"Generate a robot framework test case for testing the validation to ensure that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver.","251":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Details On The Dashboard functionality of the CommerceHub datadriver.","252":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Edit Submitted Payment Requests functionality of the QuickPay datadriver.","253":"Generate a robot framework test case for testing to Validate Customer Is Able To Update Billing Address functionality of the BillPay datadriver.","254":"Generate a robot framework test case for testing to Validate Customer Is Unable To Process Payment Without Entering Correct Security Code functionality of the EasyPay datadriver.","255":"Generate a robot framework test case for testing the ability to update customer profile details functionality of the AccountManager module.","256":"Generate a robot framework test case for testing to Validate Merchant Unable to Export Transaction History Without Date Range functionality of the FinancialApp.","257":"Generate a robot framework test case for testing the functionality of validating a customer's ability to view detailed transaction history within the last six months in the Transacto app.","258":"Generate a robot framework test case for testing to Validate User Is Able To Reset Password Via Email functionality of the MyPaymentApp datadriver.","259":"Generate a robot framework test case for testing to Validate Customer Is Able To Change Password Functionality of the SecureLogin datadriver.","260":"Generate a robot framework test case for testing the validation for users being unable to update their profile without entering a valid email address on the Profile Update page.","261":"Generate a robot framework test case for testing to validate that users are unable to reset their password without providing a valid email address in the MyPortal application.","262":"Generate a robot framework test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver.","263":"Generate a robot framework test case for testing to Validate Customer Unable To Process Refund For Closed Account functionality of the PayNEL datadriver.","264":"Generate a robot framework test case for testing the validation for retrieving the order history for a specific customer in the ShopFast datadriver.","265":"Generate a robot framework test case for testing to Validate User Is Able To Change Email Notifications Settings functionality of the BillMaster datadriver."},"Response":{"0":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to receive payment reminders functionality of the BillPro system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billpro\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_REMINDER_DETAILS} payment_reminder_details\n\n*** Test Cases ***\nValidate Customer Is Able To Receive Payment Reminders\n    [Documentation]    Test case for validating that the customer is able to receive payment reminders functionality of the BillPro system\n    Launch BillPro Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Setup Payment Reminder ${PAYMENT_REMINDER_DETAILS}\n    Trigger Payment Reminder Notification\n    Validate Payment Reminder Received","1":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing information functionality of the BillNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billnow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_INFO}         new_billing_info\n\n*** Test Cases ***\nValidate Update Billing Information\n    [Documentation]         Test case for validating that the customer is able to update billing information functionality of the BillNOW datadriver\n    Launch BillNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Information Section\n    Update Billing Information ${NEW_BILLING_INFO}\n    Save Updated Billing Information\n    Validate Billing Information Updated","2":"*** Settings ***\nDocumentation          Test cases for validating that the maximum allowable payment amount is enforced by the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_AMOUNT}           payment_amount\n${MAX_PAYMENT_AMOUNT}       10000\n\n*** Test Cases ***\nValidate Maximum Allowable Payment Amount Enforcement\n    [Documentation] Test case for validating that the maximum allowable payment amount is enforced by the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Payment Amount ${PAYMENT_AMOUNT}\n    Submit Payment\n    Validate Maximum Payment Amount Enforced ${MAX_PAYMENT_AMOUNT}","3":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to access locked features with a basic subscription functionality of the MyService platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/myservice\n${USER_DETAILS}         user_details_basic_subscription\n\n*** Test Cases ***\nValidate User Unable To Access Locked Features With Basic Subscription\n    [Documentation]    Test case for validating that the user is unable to access locked features with a basic subscription functionality of the MyService platform\n    Launch MyService Application    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Attempt Access To Locked Features\n    Validate Access Denied","4":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update personal information functionality of the MyAccount datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${CUSTOMER_DETAILS}         customer_details\n${NEW_PERSONAL_INFO}        new_personal_info\n\n*** Test Cases ***\nValidate Customer Is Able To Update Personal Information\n    [Documentation] Test case for validating that the customer is able to update personal information functionality of the MyAccount datadriver\n    Launch MyAccount Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Personal Information Page\n    Update Personal Information ${NEW_PERSONAL_INFO}\n    Save Updated Personal Information\n    Validate Updated Information Is Saved","5":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to add duplicate email addresses functionality of the MyPay system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/mypay\n${CUSTOMER_DETAILS}     customer_details\n${EMAIL}                email\n\n*** Test Cases ***\nValidate Customer Unable To Add Duplicate Email Addresses\n    [Documentation]    Test case for validating that the customer is unable to add duplicate email addresses functionality of the MyPay system\n    Launch MyPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Add Email Address ${EMAIL}\n    Attempt To Add Duplicate Email Address ${EMAIL}\n    Validate Duplicate Email Error Message","6":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the PremiumPay service\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/premiumpay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PremiumPay service\n    Launch PremiumPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Page\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","7":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update payment method information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_METHOD_INFO}      payment_method_info\n\n*** Test Cases ***\nValidate Update Payment Method Information\n    [Documentation] Test case for validating that the customer is able to update payment method information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Methods Section\n    Update Payment Method Information ${PAYMENT_METHOD_INFO}\n    Validate Payment Method Information Updated","8":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paylater\n${INVALID_EMAIL}            invalid_email\n\n*** Test Cases ***\nValidate Customer Unsuccessful Password Reset With Invalid Email\n    [Documentation] Test case for validating that the customer is unable to reset password with an invalid email address functionality of the PayLATER datadriver\n    Launch PayLater Application ${URL}\n    Navigate To Reset Password Page\n    Enter Email Address ${INVALID_EMAIL}\n    Submit Reset Password Request\n    Validate Error Message Displayed","9":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to download receipt without providing email functionality of the BillPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billpay\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable To Download Receipt Without Providing Email\n    [Documentation] Test case for validating that the customer is unable to download receipt without providing email functionality of the BillPay datadriver\n    Launch BillPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Download Receipt Without Providing Email\n    Validate Download Receipt Failed Due To Missing Email","10":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to create a weekly autopay schedule for invalid account functionality of the PayAuto service\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payauto\n${CUSTOMER_DETAILS}         customer_details_invalid_account\n\n*** Test Cases ***\nValidate Unable To Create Weekly AutoPay Schedule For Invalid Account\n    [Documentation] Test case for validating that the customer is unable to create a weekly autopay schedule for invalid account functionality of the PayAuto service\n    Launch PayAuto Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Try To Set Up Weekly AutoPay Schedule\n    Validate AutoPay Schedule Creation Failure","11":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to update billing address functionality in the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Update Billing Address\n    [Documentation] Test case for validating that the user is able to update billing address functionality in the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Section\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Save Updated Billing Address\n    Validate Billing Address Updated","12":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to set up recurring payments on a weekly basis functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Recurring Payments Setup On Weekly Basis\n    [Documentation] Test case for validating that the customer is able to set up recurring payments on a weekly basis functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Recurring Payments Section\n    Set Up Weekly Recurring Payment\n    Confirm Recurring Payment Setup\n    Validate Recurring Payment Setup Success","13":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update payment method details functionality of the PayMATE datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymate\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_METHOD_DETAILS}   payment_method_details\n\n*** Test Cases ***\nValidate Update Payment Method Details\n    [Documentation] Test case for validating that the customer is able to update payment method details functionality of the PayMATE datadriver\n    Launch PayMATE Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Method Section\n    Update Payment Method Details ${PAYMENT_METHOD_DETAILS}\n    Validate Payment Method Updated Successfully","14":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to receive payment confirmation email functionality of the EZCheckout driver\nLibrary                SeleniumLibrary\nLibrary                BuiltIn\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ezcheckout\n${CUSTOMER_EMAIL}           customer_email@example.com\n\n*** Test Cases ***\nValidate Customer Receives Payment Confirmation Email\n    [Documentation] Test case for validating that the customer is able to receive payment confirmation email functionality of the EZCheckout driver\n    Launch EZCheckout Application ${URL}\n    Complete Purchase As Customer\n    Validate Payment Confirmation Email Sent To ${CUSTOMER_EMAIL}\n\n*** Keywords ***\nLaunch EZCheckout Application\n    [Arguments]    ${url}\n    Open Browser    ${url}    Chrome\n    Maximize Browser Window\n\nComplete Purchase As Customer\n    [Arguments]       ${customer_email}\n    Input Text        id=email_input        ${customer_email}\n    # Additional steps to fill in necessary purchase information (e.g., add items to cart, provide payment details)\n    Click Button      id=complete_purchase_button\n    Wait Until Page Contains Element      id=confirmation_message     timeout=10s\n\nValidate Payment Confirmation Email Sent To\n    [Arguments]         ${customer_email}\n    # Implement checking of email inbox. This can depend on the specific setup e.g., using an email library or integration.\n    # Placeholder for actual email validation step.\n    Log                 Payment confirmation email was sent to ${customer_email}","15":"*** Settings ***\nDocumentation          Test cases for validating user navigation to the contact support page functionality of the AppNOW application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/appnow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate User Navigation To Contact Support Page\n    [Documentation] Test case for validating user navigation to the contact support page functionality of the AppNOW application\n    Launch AppNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Contact Support Page\n    Validate Contact Support Page Displayed","16":"*** Settings ***\nDocumentation          Test cases for validating that the customer can add new address on checkout functionality of the ShopNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopnow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_ADDRESS_DETAILS}      new_address_details\n\n*** Test Cases ***\nValidate Add New Address On Checkout\n    [Documentation] Test case for validating that the customer can add new address on checkout functionality of the ShopNOW datadriver\n    Launch ShopNOW Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Proceed To Checkout\n    Add New Address ${NEW_ADDRESS_DETAILS}\n    Validate New Address Added","17":"*** Settings ***\nDocumentation          Test cases for validating the user registration functionality of the ShopEZ datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopez\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Registration\n    [Documentation] Test case for validating the user registration functionality of the ShopEZ datadriver\n    Launch ShopEZ Application ${URL}\n    Enter User Registration Details ${USER_DETAILS}\n    Submit Registration Form\n    Validate Successful Registration Message","18":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to download and print invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Download And Print Invoice\n    [Documentation] Test case for validating that the customer is able to download and print invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Download Invoice ${INVOICE_DETAILS}\n    Print Invoice ${INVOICE_DETAILS}\n    Validate Invoice Downloaded And Printed","19":"*** Settings ***\nDocumentation    Test cases for validating the functionality of viewing account balance immediately after login in the BankApp app.\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/bankapp\n${USERNAME}                  test_user\n${PASSWORD}                  secret_password\n${ACCOUNT_BALANCE_LOCATOR}   balance_element\n\n*** Test Cases ***\nValidate Viewing Account Balance After Login\n    [Documentation]    Test case for validating that the user can view their account balance immediately after logging in to the BankApp app.\n    Launch BankApp Application    ${URL}\n    Login To BankApp    ${USERNAME}    ${PASSWORD}\n    Wait Until Page Contains Element    ${ACCOUNT_BALANCE_LOCATOR}\n    Validate Account Balance Is Visible    ${ACCOUNT_BALANCE_LOCATOR}","20":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to apply discount code after expiration functionality of the ShopEasy datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopeasy\n${CUSTOMER_DETAILS}         customer_details\n${DISCOUNT_CODE}            expired_code\n${ERROR_MESSAGE}            \"This discount code has expired\"\n\n*** Test Cases ***\nValidate Customer Unable To Apply Expired Discount Code\n    [Documentation] Test case for validating that the customer is unable to apply discount code after expiration functionality of the ShopEasy datadriver\n    Launch ShopEasy Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Add Items To Cart\n    Navigate To Checkout Page\n    Apply Discount Code ${DISCOUNT_CODE}\n    Validate Error Message Displayed ${ERROR_MESSAGE}","21":"*** Settings ***\nDocumentation          Test cases for validating that the admin can generate monthly reporting functionality of the CommerceX datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/commercex\n${ADMIN_CREDENTIALS}        admin_credentials\n${START_DATE}               start_date\n${END_DATE}                 end_date\n\n*** Test Cases ***\nValidate Admin Can Generate Monthly Reporting\n    [Documentation] Test case for validating that the admin can generate monthly reporting functionality of the CommerceX datadriver\n    Launch CommerceX Application ${URL}\n    Enter Admin Credentials ${ADMIN_CREDENTIALS}\n    Navigate To Reports Section\n    Select Start Date ${START_DATE}\n    Select End Date ${END_DATE}\n    Generate Monthly Report\n    Validate Monthly Report Generated","22":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to opt-in for monthly email invoices feature of the InvoicePortal datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/invoiceportal\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Is Able To Opt-In For Monthly Email Invoices\n    [Documentation] Test case for validating that the customer is able to opt-in for monthly email invoices feature of the InvoicePortal datadriver\n    Launch InvoicePortal Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Opt-In For Monthly Email Invoices\n    Validate Opt-In Confirmation","23":"*** Settings ***\nDocumentation          Test case for validating that the user cannot exceed maximum login attempts after multiple invalid password inputs functionality of the OnlineBank Module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/onlinebank\n${USER_CREDENTIALS}         user_credentials\n${INVALID_PASSWORD}         incorrect_password\n\n*** Test Cases ***\nValidate Maximum Login Attempts\n    [Documentation] Test case for validating that the user cannot exceed maximum login attempts after multiple invalid password inputs functionality of the OnlineBank Module\n    Launch OnlineBank Application ${URL}\n    Enter User Credentials ${USER_CREDENTIALS} with ${INVALID_PASSWORD} multiple times\n    Validate Login Attempts Exceeded Message\n","24":"*** Settings ***\nDocumentation          Test cases for validating the addition of a new item to the customer's wishlist on the eCommerce site\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\n${CUSTOMER_LOGIN_CREDENTIALS}    login_credentials\n${PRODUCT_DETAILS}               product_details\n\n*** Test Cases ***\nValidate Adding New Item To Wishlist\n    [Documentation] Test case for validating the addition of a new item to the customer's wishlist on the eCommerce site\n    Launch eCommerce Application ${URL}\n    Login To Customer Account ${CUSTOMER_LOGIN_CREDENTIALS}\n    Search For Product ${PRODUCT_DETAILS}\n    Add Product To Wishlist\n    Validate Product Added To Wishlist","25":"*** Settings ***\nDocumentation    Test cases for validating that the user can successfully register with valid credentials functionality of the QuickPay platform\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${USERNAME}                valid_username\n${EMAIL}                   valid_email@example.com\n${PASSWORD}                valid_password\n\n*** Test Cases ***\nValidate User Can Successfully Register With Valid Credentials\n    [Documentation] Test case for validating that the user can successfully register with valid credentials functionality of the QuickPay platform\n    Launch Browser    chrome    ${URL}\n    Navigate To Registration Page\n    Enter Registration Details    ${USERNAME}    ${EMAIL}    ${PASSWORD}\n    Submit Registration Form\n    Validate Registration Success\n    Close Browser","26":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                   https:\/\/example.com\/mybank\n${CUSTOMER_DETAILS}      customer_details\n${NEGATIVE_BALANCE_ACC}  negative_balance_acc\n${TARGET_ACC}            target_acc\n\n*** Test Cases ***\nValidate Unable To Transfer Funds With Negative Balance\n    [Documentation] Test case for validating that the customer is unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver\n    Launch MyBank Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Source Account With Negative Balance ${NEGATIVE_BALANCE_ACC}\n    Select Target Account ${TARGET_ACC}\n    Attempt Funds Transfer\n    Validate Transfer Failure","27":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update bank account details functionality of the Financial App platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/financialapp\n${CUSTOMER_LOGIN}           customer_login\n${BANK_ACCOUNT_DETAILS}     bank_account_details\n\n*** Test Cases ***\nValidate Update Bank Account Details\n    [Documentation] Test case for validating that the customer is able to update bank account details functionality of the Financial App platform\n    Launch Financial App ${URL}\n    Login As Customer ${CUSTOMER_LOGIN}\n    Navigate To Bank Account Section\n    Update Bank Account Details ${BANK_ACCOUNT_DETAILS}\n    Validate Bank Account Updated","28":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to register with an invalid email address in the registration functionality of the DefSecure application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/defsecure\n${INVALID_EMAIL}            invalid_email@example\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Unable To Register With Invalid Email Address\n    [Documentation] Test case for validating that the customer is unable to register with an invalid email address in the registration functionality of the DefSecure application\n    Launch DefSecure Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Invalid Email Address ${INVALID_EMAIL}\n    Submit Registration Form\n    Validate Error Message Displayed","29":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to retrieve forgotten password functionality of the ResetPassword datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/resetpassword\n${USER_DETAILS}             user_details\n${NOTIFICATION_DETAILS}     notification_details\n\n*** Test Cases ***\nValidate User Able To Retrieve Forgotten Password\n    [Documentation] Test case for validating that the user is able to retrieve forgotten password functionality of the ResetPassword datadriver\n    Launch ResetPassword Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Forgot Password Request\n    Check Notification For Password Reset ${NOTIFICATION_DETAILS}\n    Validate Password Reset Successful","30":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to update personal details without confirmation functionality of the UserProfileManager\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/userprofilemananger\n${CUSTOMER_DETAILS}         customer_details\n${UPDATE_DETAILS}           update_details\n\n*** Test Cases ***\nValidate Unable To Update Personal Details Without Confirmation\n    [Documentation] Test case for validating that the customer is unable to update personal details without confirmation functionality of the UserProfileManager\n    Launch UserProfileManager Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Update Personal Details Without Confirmation ${UPDATE_DETAILS}\n    Validate Unable To Update Personal Details","31":"*** Settings ***\nDocumentation    Test cases for validating the successful logout functionality of the BillingNow data application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                https:\/\/example.com\/billingnow\n${USER_CREDENTIALS}   user_credentials\n\n*** Test Cases ***\nValidate Successful Logout Functionality\n    [Documentation]    Test case for validating the successful logout functionality of the BillingNow data application\n    Launch BillingNow Application    ${URL}\n    Login To Application             ${USER_CREDENTIALS}\n    Perform Logout\n    Validate Successful Logout","32":"*** Settings ***\nDocumentation          Test cases for validating the incorrect username\/password behavior functionality of the SecurePay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${INVALID_CREDENTIALS}      invalid_credentials\n\n*** Test Cases ***\nValidate Incorrect Username Password Behavior\n    [Documentation] Test case for validating the incorrect username\/password behavior functionality of the SecurePay datadriver\n    Launch SecurePay Application ${URL}\n    Enter Invalid Credentials ${INVALID_CREDENTIALS}\n    Attempt Login\n    Validate Incorrect Login Behavior","33":"*** Settings ***\nDocumentation          Test cases for testing the login functionality with an expired password for the MyPay app\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mypay\n${EXPIRED_PASSWORD_DETAILS} expired_password_details\n\n*** Test Cases ***\nValidate Login With Expired Password\n    [Documentation] Test case for testing the login functionality with an expired password for the MyPay app\n    Launch MyPay Application ${URL}\n    Enter Expired Password Details ${EXPIRED_PASSWORD_DETAILS}\n    Attempt Login\n    Validate Expired Password Message","34":"*** Settings ***\nDocumentation    Test cases for validating the user ability to generate a monthly report of all transactions on the platform\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/transactions\n${USER_DETAILS}              user_details\n\n*** Test Cases ***\nValidate Generate Monthly Report of All Transactions\n    [Documentation]    Test case for validating the user ability to generate a monthly report of all transactions on the platform\n    Launch Transactions Application    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Navigate To Reports Section\n    Select Monthly Report Option\n    Generate Report\n    Validate Report Generated Successfully","35":"*** Settings ***\nDocumentation          Test cases for validating that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ordernow\n${ORDER_DETAILS}            order_details\n${TRACKING_INFO}            tracking_info\n\n*** Test Cases ***\nValidate Shipping Tracking Information Updated For FedEx Orders\n    [Documentation] Test case for validating that the shipping tracking information is updated correctly for orders shipped through FedEx in the OrderNow datadriver\n    Launch OrderNow Application ${URL}\n    Enter Order Details ${ORDER_DETAILS}\n    Ship Order Through FedEx ${TRACKING_INFO}\n    Validate Tracking Information Updated","36":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to view payment history functionality of the InvoiceNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/invoicenow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable To View Payment History\n    [Documentation] Test case for validating that the customer is unable to view payment history functionality of the InvoiceNOW datadriver\n    Launch InvoiceNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Navigate To Payment History Page\n    Validate Payment History Not Accessible","37":"*** Settings ***\nDocumentation          Test cases for validating that the user can view detailed transaction history on the Transactions page of the BillingNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billingnow\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Can View Detailed Transaction History\n    [Documentation] Test case for validating that the user can view detailed transaction history on the Transactions page of the BillingNow datadriver\n    Launch BillingNow Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Transactions Page\n    Open Detailed Transaction History\n    Validate Transaction History Displayed","38":"*** Settings ***\nDocumentation          Test cases for validating the user account lockout after multiple failed login attempts functionality of the SecureBanking datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securebanking\n${USER_CREDENTIALS}         user_credentials\n\n*** Test Cases ***\nValidate User Account Lockout After Multiple Failed Login Attempts\n    [Documentation] Test case for validating the user account lockout after multiple failed login attempts functionality of the SecureBanking datadriver\n    Launch SecureBanking Application ${URL}\n    Enter User Credentials ${USER_CREDENTIALS[\"username\"]} incorrect_password_1\n    Validate Login Failed\n    Enter User Credentials ${USER_CREDENTIALS[\"username\"]} incorrect_password_2\n    Validate Login Failed\n    Enter User Credentials ${USER_CREDENTIALS[\"username\"]} incorrect_password_3\n    Validate Account Lockout Message Displayed","39":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to sign in with incorrect password functionality of the LoginService\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/login\n${USER_DETAILS}             user_details\n${INCORRECT_PASSWORD}       incorrect_password\n\n*** Test Cases ***\nValidate User Unable To Sign In With Incorrect Password\n    [Documentation] Test case for validating that the user is unable to sign in with incorrect password functionality of the LoginService\n    Launch Login Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Enter Incorrect Password ${INCORRECT_PASSWORD}\n    Click Sign In Button\n    Validate Sign In Failed","40":"*** Settings ***\nDocumentation          Test cases for validating that the user registration with email verification functionality of the SignUp module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/signup\n${USER_DETAILS}             user_details\n${EMAIL_VERIFICATION_LINK}  email_verification_link\n\n*** Test Cases ***\nValidate User Registration With Email Verification\n    [Documentation] Test case for validating that the user registration with email verification functionality of the SignUp module\n    Launch SignUp Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Registration Form\n    Check Email For Verification Link ${EMAIL_VERIFICATION_LINK}\n    Click On Email Verification Link ${EMAIL_VERIFICATION_LINK}\n    Validate Registration Completed","41":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password through email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${USER_EMAIL}               user_email\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate User Is Able To Reset Password Through Email\n    [Documentation] Test case for validating that the user is able to reset password through email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Navigate To Password Reset Page\n    Enter User Email ${USER_EMAIL}\n    Submit Password Reset Request\n    Open Password Reset Email ${USER_EMAIL}\n    Click Password Reset Link From Email\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit New Password\n    Validate Password Reset Successfully","42":"*** Settings ***\nDocumentation          Test cases for validating the update personal information functionality of the UserProfile datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/userprofile\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate Update Personal Information\n    [Documentation] Test case for validating the update personal information functionality of the UserProfile datadriver\n    Launch UserProfile Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Update Personal Information ${USER_DETAILS}\n    Validate Personal Information Updated","43":"*** Settings ***\nDocumentation          Test cases for validating that the customer can successfully update their personal profile information through the MightyPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mightypay\n${CUSTOMER_PROFILE_DETAILS} customer_profile_details\n\n*** Test Cases ***\nValidate Update Customer Personal Profile Information\n    [Documentation] Test case for validating that the customer can successfully update their personal profile information through the MightyPay datadriver\n    Launch MightyPay Application ${URL}\n    Enter Customer Login Details ${CUSTOMER_PROFILE_DETAILS}\n    Navigate To Personal Profile Page\n    Update Personal Profile Information ${CUSTOMER_PROFILE_DETAILS}\n    Save Updated Information\n    Validate Profile Information Updated","44":"*** Settings ***\nDocumentation          Test cases for validating that the user can update personal information from the profile page functionality of the NewApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/newapp\n${USER_LOGIN_DETAILS}       user_login_details\n${PERSONAL_INFORMATION}     personal_information\n\n*** Test Cases ***\nValidate User Can Update Personal Information From Profile Page\n    [Documentation] Test case for validating that the user can update personal information from the profile page functionality of the NewApp datadriver\n    Launch NewApp Application ${URL}\n    Enter User Login Details ${USER_LOGIN_DETAILS}\n    Navigate To Profile Page\n    Update Personal Information ${PERSONAL_INFORMATION}\n    Validate Personal Information Updated","45":"*** Settings ***\nDocumentation    Test cases for validating the waiver of transaction fees for government-issued debit cards functionality of the ServiceX system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/servicex\n${CUSTOMER_DETAILS}         customer_details\n${DEBIT_CARD_DETAILS}       debit_card_details\n${EXPECTED_FEES}            0\n\n*** Test Cases ***\nValidate Waiver of Transaction Fees for Government-Issued Debit Cards\n    [Documentation] Test case for validating the waiver of transaction fees for government-issued debit cards functionality of the ServiceX system\n    Launch ServiceX Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Debit Card Details ${DEBIT_CARD_DETAILS}\n    Process Payment\n    Validate Transaction Fees Waived ${EXPECTED_FEES}","46":"*** Settings ***\nDocumentation          Test cases for validating the customer's ability to update personal information functionality of the MyAccount manager\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                          https:\/\/example.com\/myaccount\n${CUSTOMER_LOGIN_DETAILS}       customer_login_details\n${PERSONAL_INFORMATION}         personal_information\n\n*** Test Cases ***\nValidate Customer Ability To Update Personal Information\n    [Documentation] Test case for validating the customer's ability to update personal information functionality of the MyAccount manager\n    Launch MyAccount Manager ${URL}\n    Enter Customer Login Details ${CUSTOMER_LOGIN_DETAILS}\n    Navigate To Personal Information Section\n    Update Personal Information ${PERSONAL_INFORMATION}\n    Validate Personal Information Updated","47":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to apply promotional code during checkout functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PROMOTIONAL_CODE}         promotional_code\n\n*** Test Cases ***\nValidate Apply Promotional Code During Checkout\n    [Documentation]    Test case for validating that the customer is able to apply promotional code during checkout functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Proceed To Checkout\n    Enter Promotional Code    ${PROMOTIONAL_CODE}\n    Apply Promotional Code\n    Validate Discount Applied","48":"*** Settings ***\nDocumentation    Test cases for validating that the user is unable to reset password with invalid email functionality of the SecureNOW application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/securenow\n${INVALID_EMAIL}       invalid_email@example.com\n\n*** Test Cases ***\nValidate User Unable To Reset Password With Invalid Email\n    [Documentation]    Test case for validating that the user is unable to reset password with invalid email functionality of the SecureNOW application\n    Launch SecureNOW Application    ${URL}\n    Navigate To Reset Password Page\n    Enter Invalid Email Address    ${INVALID_EMAIL}\n    Submit Reset Password Request\n    Validate Error Message Is Displayed","49":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to subscribe to a monthly plan without a credit card functionality of the PremiumSubscription system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/premiumsubscription\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Unable to Subscribe to Monthly Plan Without Credit Card\n    [Documentation] Test case for validating that the customer is unable to subscribe to a monthly plan without a credit card functionality of the PremiumSubscription system\n    Launch PremiumSubscription System ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Subscribe Without Credit Card\n    Validate Error Message","50":"*** Settings ***\nDocumentation          Test cases for validating that the user registration with email verification functionality of the SignUp system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/signup\n${USER_DETAILS}             user_details\n${EMAIL_VERIFICATION_LINK}  email_verification_link\n\n*** Test Cases ***\nValidate User Registration With Email Verification\n    [Documentation] Test case for validating that the user registration with email verification functionality of the SignUp system\n    Launch SignUp Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Registration Form\n    Check Email For Verification Link ${EMAIL_VERIFICATION_LINK}\n    Click Verification Link ${EMAIL_VERIFICATION_LINK}\n    Validate Email Verified","51":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing information for an existing account functionality of the BillFast system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billfast\n${CUSTOMER_ACCOUNT_DETAILS} customer_account_details\n${UPDATED_BILLING_INFO}     updated_billing_info\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Information For Existing Account\n    [Documentation] Test case for validating that the customer is able to update billing information for an existing account functionality of the BillFast system\n    Launch BillFast Application ${URL}\n    Login Customer Account ${CUSTOMER_ACCOUNT_DETAILS}\n    Navigate To Update Billing Information Section\n    Enter New Billing Information ${UPDATED_BILLING_INFO}\n    Save Updated Billing Information\n    Validate Billing Information Updated","52":"*** Settings ***\nDocumentation    Test cases for validating that the user is unable to register a new account with an already registered email functionality of the UserAccount datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                https:\/\/example.com\/register\n${REGISTERED_EMAIL}   registered_email@example.com\n${PASSWORD}           Password123!\n${EXPECTED_ERROR}     This email is already registered.\n\n*** Test Cases ***\nValidate User Is Unable To Register With Registered Email\n    [Documentation] Test case for validating that the user is unable to register a new account with an already registered email functionality of the UserAccount datadriver\n    Launch Browser    ${BROWSER}    ${URL}\n    Input Registration Details    ${REGISTERED_EMAIL}    ${PASSWORD}\n    Submit Registration Form\n    Validate Error Message Displayed    ${EXPECTED_ERROR}\n    Close Browser","53":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update saved credit card details functionality of the PayLater datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paylater\n${CUSTOMER_DETAILS}         customer_details\n${NEW_CREDIT_CARD_DETAILS}  new_credit_card_details\n\n*** Test Cases ***\nValidate Update Saved Credit Card Details\n    [Documentation] Test case for validating that the customer is able to update saved credit card details functionality of the PayLater datadriver\n    Launch PayLater Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Saved Credit Card Section\n    Update Credit Card Details ${NEW_CREDIT_CARD_DETAILS}\n    Validate Credit Card Details Updated","54":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to offer a discount for early payment functionality of the PayFIRST datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payfirst\n${MERCHANT_DETAILS}         merchant_details\n${DISCOUNT_DETAILS}         discount_details\n\n*** Test Cases ***\nValidate Offer Discount For Early Payment\n    [Documentation] Test case for validating that the merchant is able to offer a discount for early payment functionality of the PayFIRST datadriver\n    Launch PayFirst Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Enter Discount Details ${DISCOUNT_DETAILS}\n    Apply Discount For Early Payment\n    Validate Discount Applied","55":"*** Settings ***\nDocumentation          Test cases for validating that customers can update their profile information in the MyAccount datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${CUSTOMER_DETAILS}         customer_details\n${PROFILE_INFO}             profile_info\n\n*** Test Cases ***\nValidate Customer Can Update Profile Information\n    [Documentation] Test case for validating that customers can update their profile information in the MyAccount datadriver\n    Launch MyAccount Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Profile Information ${PROFILE_INFO}\n    Validate Profile Update Successful","56":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to cancel a confirmed payment in the MyAccount datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Customer Unable To Cancel Confirmed Payment\n    [Documentation] Test case for validating that the customer is unable to cancel a confirmed payment in the MyAccount datadriver\n    Launch MyAccount Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Confirm Payment ${PAYMENT_DETAILS}\n    Attempt To Cancel Payment\n    Validate Unable To Cancel Confirmed Payment","57":"*** Settings ***\nDocumentation    Test case for validating that the user registration with a valid email functionality of the MyApp datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/myapp\n${USER_DETAILS}        user_details\n${VALID_EMAIL}         user@example.com\n${PASSWORD}            user_password\n\n*** Test Cases ***\nValidate User Registration With Valid Email\n    [Documentation]  Test case for validating that the user registration with a valid email functionality of the MyApp datadriver\n    Launch Application    ${URL}\n    Click Register Link\n    Enter User Details    ${USER_DETAILS}\n    Enter Email    ${VALID_EMAIL}\n    Enter Password    ${PASSWORD}\n    Submit Registration Form\n    Validate Registration Success Message Displayed","58":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to access premium features without a subscription on the MyService platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myservice\n${USER_DETAILS}             user_details\n${PREMIUM_FEATURE}          premium_feature\n\n*** Test Cases ***\nValidate User Unable To Access Premium Features Without Subscription\n    [Documentation] Test case for validating that the user is unable to access premium features without a subscription on the MyService platform\n    Launch MyService Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Attempt To Access Premium Feature ${PREMIUM_FEATURE}\n    Validate Access Denied Without Subscription","59":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to add a new payment method functionality of the QuickPay application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_PAYMENT_METHOD}       new_payment_method_details\n\n*** Test Cases ***\nValidate Customer Is Able To Add New Payment Method\n    [Documentation] Test case for validating that the customer is able to add a new payment method functionality of the QuickPay application\n    Launch QuickPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Methods Page\n    Add New Payment Method ${NEW_PAYMENT_METHOD}\n    Validate New Payment Method Added","60":"*** Settings ***\nDocumentation          Test cases for validating the user is able to update profile information functionality of the MyBankApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mybankapp\n${USER_DETAILS}             user_details\n${NEW_PROFILE_INFO}         new_profile_info\n\n*** Test Cases ***\nValidate User Is Able To Update Profile Information\n    [Documentation] Test case for validating the user is able to update profile information functionality of the MyBankApp datadriver\n    Launch MyBankApp Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Profile Section\n    Update Profile Information ${NEW_PROFILE_INFO}\n    Validate Profile Information Updated","61":"*** Settings ***\nDocumentation          Test cases for validating the user's ability to reset password through an email verification code functionality of the GoUnified system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/gounified\n${USER_EMAIL}               user_email\n${NEW_PASSWORD}             new_password\n${VERIFICATION_CODE}        verification_code\n\n*** Test Cases ***\nValidate User's Ability to Reset Password Through an Email Verification Code\n    [Documentation] Test case for validating the user's ability to reset password through an email verification code functionality of the GoUnified system\n    Launch GoUnified Application ${URL}\n    Click Forgot Password Link\n    Enter User Email ${USER_EMAIL}\n    Click Send Verification Code\n    Retrieve Verification Code ${USER_EMAIL}\n    Enter Verification Code ${VERIFICATION_CODE}\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit Password Reset\n    Validate Password Reset Success","62":"*** Settings ***\nDocumentation          Test cases for validating that the customer receives notification for upcoming payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Receives Notification For Upcoming Payment\n    [Documentation] Test case for validating that the customer receives notification for upcoming payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Schedule Upcoming Payment\n    Validate Notification Received For Upcoming Payment","63":"*** Settings ***\nDocumentation          Test cases for validating user registration with valid and invalid email address on the MyCompany platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/register\n${VALID_EMAIL}         valid.email@example.com\n${INVALID_EMAIL}       invalidemail.com\n${USER_DETAILS}        user_details\n\n*** Test Cases ***\nValidate User Registration With Valid And Invalid Email Address\n    [Documentation]    Test case for validating user registration with valid and invalid email address on the MyCompany platform\n    Launch Browser     chrome    ${URL}\n    Validate Registration With Valid Email Address\n    Validate Registration With Invalid Email Address\n\nValidate Registration With Valid Email Address\n    [Documentation]    Test case for validating user registration with a valid email address on the MyCompany platform\n    Input User Details ${USER_DETAILS}    ${VALID_EMAIL}\n    Click Register Button\n    Validate Successful Registration Message\n\nValidate Registration With Invalid Email Address\n    [Documentation]    Test case for validating user registration with an invalid email address on the MyCompany platform\n    Input User Details ${USER_DETAILS}    ${INVALID_EMAIL}\n    Click Register Button\n    Validate Error Message For Invalid Email","64":"*** Settings ***\nDocumentation    Test cases for validating that the user is unable to reset password with an invalid email address functionality of the SecureLogin system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                         https:\/\/example.com\/securelogin\n${INVALID_EMAIL_ADDRESS}       invalid_email@example.com\n${ERROR_MESSAGE}               Invalid email address\n\n*** Test Cases ***\nValidate User Unable To Reset Password With Invalid Email Address\n    [Documentation]    Test case for validating that the user is unable to reset password with an invalid email address functionality of the SecureLogin system\n    Launch SecureLogin Application    ${URL}\n    Click On Forgot Password Link\n    Enter Invalid Email Address    ${INVALID_EMAIL_ADDRESS}\n    Click On Reset Password Button\n    Validate Error Message Should Be Displayed    ${ERROR_MESSAGE}","65":"*** Settings ***\nDocumentation           Test cases for validating that the user is unable to place order with expired credit card functionality of the Checkout process\nLibrary                 SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/checkout\n${USER_DETAILS}         user_details\n${EXPIRED_CARD}         expired_card\n\n*** Test Cases ***\nValidate Unable To Place Order With Expired Credit Card\n    [Documentation]     Test case for validating that the user is unable to place order with expired credit card functionality of the Checkout process\n    Launch Checkout Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Enter Credit Card Details ${EXPIRED_CARD}\n    Attempt To Place Order\n    Validate Order Placement Denied","66":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to pay multiple invoices with different payment methods functionality of the SuperPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/superpay\n${CUSTOMER_DETAILS}         customer_details\n${INVOICES}                 invoices\n${PAYMENT_METHODS}          payment_methods\n\n*** Test Cases ***\nValidate Pay Multiple Invoices With Different Payment Methods\n    [Documentation] Test case for validating that the customer is able to pay multiple invoices with different payment methods functionality of the SuperPay datadriver\n    Launch SuperPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Multiple Invoices ${INVOICES}\n    Choose Different Payment Methods ${PAYMENT_METHODS}\n    Confirm And Validate Payments","67":"*** Settings ***\nDocumentation          Test case for validating that the customer is able to download the transaction report in CSV format on the Payment Portal\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentportal\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Download Transaction Report In CSV Format\n    [Documentation] Test case for validating that the customer is able to download the transaction report in CSV format on the Payment Portal\n    Launch Payment Portal ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Transaction Report Page\n    Download Transaction Report In CSV Format\n    Validate CSV Report Downloaded Successfully","68":"*** Settings ***\nDocumentation          Test cases for validating user login with incorrect password functionality of the CompanyPortal system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/companyportal\n${USERNAME}                 user_name\n${INCORRECT_PASSWORD}       incorrect_password\n\n*** Test Cases ***\nValidate User Login with Incorrect Password\n    [Documentation] Test case for validating user login with incorrect password functionality of the CompanyPortal system\n    Launch CompanyPortal Application ${URL}\n    Enter Username ${USERNAME}\n    Enter Incorrect Password ${INCORRECT_PASSWORD}\n    Attempt Login\n    Validate Login Failed Message","69":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to schedule same-day payment transfer functionality in the BANKPAY system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/bankpay\n${CUSTOMER_DETAILS}         customer_details\n${TRANSFER_DETAILS}         transfer_details\n\n*** Test Cases ***\nValidate Unable To Schedule Same-Day Payment Transfer\n    [Documentation] Test case for validating that the customer is unable to schedule same-day payment transfer functionality in the BANKPAY system\n    Launch BankPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Try To Schedule Same Day Transfer ${TRANSFER_DETAILS}\n    Validate Error Message Displayed","70":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shoponline\n${CUSTOMER_EMAIL}           customer@example.com\n${RESET_LINK}               reset_link\n${NEW_PASSWORD}             new_password\n${CONFIRMATION_MESSAGE}     Your password has been successfully reset\n\n*** Test Cases ***\nValidate Customer Is Able To Reset Their Password Using Forgot Password Functionality\n    [Documentation]    Test case for validating that the customer is able to reset their password using the 'Forgot Password' functionality of the ShopOnline platform\n    Launch ShopOnline Application    ${URL}\n    Click On Forgot Password Link\n    Enter Customer Email For Resetting Password    ${CUSTOMER_EMAIL}\n    Submit Forgot Password Request\n    Retrieve Password Reset Link From Email    ${CUSTOMER_EMAIL}    ${RESET_LINK}\n    Navigate To Password Reset Link    ${RESET_LINK}\n    Enter New Password    ${NEW_PASSWORD}\n    Confirm New Password    ${NEW_PASSWORD}\n    Submit New Password\n    Validate Password Reset Confirmation Message Appears    ${CONFIRMATION_MESSAGE}","71":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the SuperPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/superpay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the SuperPay datadriver\n    Launch SuperPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Section\n    Enter New Billing Address ${NEW_BILLING_ADDRESS}\n    Submit Billing Address Update\n    Validate Billing Address Updated Successfully","72":"*** Settings ***\nDocumentation    Test cases for validating that customer can edit payment details after scheduling payment functionality of the PayBuddy system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paybuddy\n${CUSTOMER_DETAILS}         customer_details\n${INITIAL_PAYMENT_DETAILS}  initial_payment_details\n${EDITED_PAYMENT_DETAILS}   edited_payment_details\n\n*** Test Cases ***\nValidate Customer Can Edit Payment Details After Scheduling Payment\n    [Documentation]    Test case for validating that customer can edit payment details after scheduling payment functionality of the PayBuddy system\n    Launch PayBuddy Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Schedule Payment    ${INITIAL_PAYMENT_DETAILS}\n    Edit Scheduled Payment Details    ${EDITED_PAYMENT_DETAILS}\n    Validate Payment Details Edited Successfully","73":"*** Settings ***\nDocumentation    Test cases for validating that customer is able to update saved credit card details functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                   https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}      customer_details\n${CREDIT_CARD_DETAILS}   new_credit_card_details\n\n*** Test Cases ***\nValidate Customer Can Update Saved Credit Card Details\n    [Documentation]    Test case for validating that customer is able to update saved credit card details functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Saved Payment Methods\n    Select Credit Card To Update\n    Update Credit Card Details    ${CREDIT_CARD_DETAILS}\n    Validate Credit Card Details Updated Successfully","74":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to change the invoice due date functionality of the MerchEasy payment system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mercheasy\n${MERCHANT_CREDENTIALS}     merchant_credentials\n${INVOICE_ID}               invoice123\n${NEW_DUE_DATE}             2023-12-31\n\n*** Test Cases ***\nValidate Merchant Is Able To Change Invoice Due Date\n    [Documentation] Test case for validating that the merchant is able to change the invoice due date functionality of the MerchEasy payment system\n    Launch MerchEasy Application ${URL}\n    Enter Merchant Credentials ${MERCHANT_CREDENTIALS}\n    Navigate To Invoice Page ${INVOICE_ID}\n    Update Invoice Due Date ${NEW_DUE_DATE}\n    Validate Due Date Updated","75":"*** Settings ***\nDocumentation          Test case for validating that the customer can modify shipping address before order confirmation on the ShopNow platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopnow\n${CUSTOMER_DETAILS}         customer_details\n${SHIPPING_ADDRESS}         new_shipping_address\n${ORDER_DETAILS}            order_details\n\n*** Test Cases ***\nValidate Modify Shipping Address Before Order Confirmation\n    [Documentation] Test case for validating that the customer can modify shipping address before order confirmation on the ShopNow platform\n    Launch ShopNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Order Details ${ORDER_DETAILS}\n    Modify Shipping Address ${SHIPPING_ADDRESS}\n    Confirm Modified Address Before Order Confirmation\n    Validate Order Confirmation With Modified Shipping Address","76":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to reset password using registered email functionality of the MyBankNow application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mybanknow\n${CUSTOMER_EMAIL}           customer_email\n\n*** Test Cases ***\nValidate Customer Is Able To Reset Password Using Registered Email\n    [Documentation]    Test case for validating that the customer is able to reset password using registered email functionality of the MyBankNow application\n    Launch MyBankNow Application ${URL}\n    Navigate To Forgot Password Page\n    Enter Registered Email ${CUSTOMER_EMAIL}\n    Click Submit\n    Validate Password Reset Email Sent","77":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to update customer information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${CUSTOMER_UPDATE_DETAILS}  customer_update_details\n\n*** Test Cases ***\nValidate Update Customer Information\n    [Documentation] Test case for validating that the merchant is able to update customer information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Update Customer Information ${CUSTOMER_UPDATE_DETAILS}\n    Validate Customer Information Updated","78":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to update sensitive information without authentication functionality of the DataSecure system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/datasecure\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate Unable To Update Sensitive Information Without Authentication\n    [Documentation] Test case for validating that the user is unable to update sensitive information without authentication functionality of the DataSecure system\n    Launch DataSecure Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Attempt To Update Sensitive Information Without Authentication\n    Validate Update Is Not Allowed","79":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to save their preferred shipping address functionality of the ShopMaster datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopmaster\n${CUSTOMER_CREDENTIALS}     customer_credentials\n${PREFERRED_ADDRESS}        preferred_address\n\n*** Test Cases ***\nValidate Customer Is Able To Save Their Preferred Shipping Address\n    [Documentation] Test case for validating that the customer is able to save their preferred shipping address functionality of the ShopMaster datadriver\n    Launch ShopMaster Application ${URL}\n    Enter Customer Credentials ${CUSTOMER_CREDENTIALS}\n    Navigate To Account Settings\n    Enter Preferred Shipping Address ${PREFERRED_ADDRESS}\n    Save Address\n    Validate Preferred Shipping Address Is Saved","80":"*** Settings ***\nDocumentation          Test cases for validating user login with invalid credentials functionality of the PayOnTime datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payontime\n${INVALID_CREDENTIALS}      invalid_credentials\n\n*** Test Cases ***\nValidate User Login With Invalid Credentials\n    [Documentation] Test case for validating user login with invalid credentials functionality of the PayOnTime datadriver\n    Launch PayOnTime Application ${URL}\n    Enter Invalid Credentials ${INVALID_CREDENTIALS}\n    Attempt Login\n    Validate Login Failed Message","81":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update their billing information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_INFO}         new_billing_info\n\n*** Test Cases ***\nValidate Update Billing Information\n    [Documentation] Test case for validating that the customer is able to update their billing information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Information Section\n    Update Billing Information ${NEW_BILLING_INFO}\n    Save Changes\n    Validate Billing Information Updated","82":"*** Settings ***\nDocumentation          Test cases for testing the functionality of customer authorization workflow within the SecurePay application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${CUSTOMER_DETAILS}         customer_details\n${AUTHORIZATION_DETAILS}    authorization_details\n\n*** Test Cases ***\nValidate Customer Authorization Workflow\n    [Documentation] Test case for testing the functionality of customer authorization workflow within the SecurePay application\n    Launch SecurePay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Initiate Authorization Workflow ${AUTHORIZATION_DETAILS}\n    Validate Authorization Successful","83":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update profile information in the user settings module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/user-settings\n${CUSTOMER_LOGIN_DETAILS}   customer_login_details\n${PROFILE_INFORMATION}      profile_information\n\n*** Test Cases ***\nValidate Customer Can Update Profile Information\n    [Documentation] Test case for validating that the customer is able to update profile information in the user settings module\n    Launch User Settings Module ${URL}\n    Login As Customer ${CUSTOMER_LOGIN_DETAILS}\n    Navigate To Profile Information Page\n    Update Profile Information ${PROFILE_INFORMATION}\n    Save Updated Profile Information\n    Validate Profile Information Updated Properly","84":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reset password after failed login attempts functionality of the PayLATER datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paylater\n${CUSTOMER_DETAILS}         customer_details\n${RESET_DETAILS}            reset_details\n\n*** Test Cases ***\nValidate Reset Password After Failed Login Attempts\n    [Documentation] Test case for validating that the customer is able to reset password after failed login attempts functionality of the PayLATER datadriver\n    Launch PayLater Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Failed Logins\n    Initiate Password Reset ${RESET_DETAILS}\n    Validate Password Reset Successful","85":"*** Settings ***\nDocumentation          Test cases for validating that the shopping cart applies coupons correctly in the OnlineStore system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/online-store\n${USER_DETAILS}             user_details\n${COUPON_CODE}              coupon_code\n${EXPECTED_DISCOUNT}        expected_discount\n\n*** Test Cases ***\nValidate Shopping Cart Applies Coupons Correctly\n    [Documentation] Test case for validating that the shopping cart applies coupons correctly in the OnlineStore system\n    Launch Online Store Application ${URL}\n    Login As User ${USER_DETAILS}\n    Add Items To Shopping Cart\n    Apply Coupon Code ${COUPON_CODE}\n    Validate Discount Applied ${EXPECTED_DISCOUNT}","86":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to register with valid credentials functionality of the RegisterNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/registernow\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Registration With Valid Credentials\n    [Documentation] Test case for validating that the user is able to register with valid credentials functionality of the RegisterNow datadriver\n    Launch RegisterNow Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Registration Form\n    Validate Registration Success Message","87":"*** Settings ***\nDocumentation          Test cases for validating the user registration with valid credentials functionality of the MobileApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mobileapp\n${USER_REGISTRATION_DETAILS}    user_registration_details\n\n*** Test Cases ***\nValidate User Registration With Valid Credentials\n    [Documentation] Test case for validating the user registration with valid credentials functionality of the MobileApp datadriver\n    Launch MobileApp Application ${URL}\n    Enter User Registration Details ${USER_REGISTRATION_DETAILS}\n    Submit Registration Form\n    Validate Successful Registration Message","88":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to proceed with payment without providing CVV number when using a credit card functionality\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${CREDIT_CARD_DETAILS}      credit_card_details\n\n*** Test Cases ***\nValidate Payment Without CVV\n    [Documentation] Test case for validating that the customer is unable to proceed with payment without providing CVV number when using a credit card functionality\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Credit Card Details Without CVV ${CREDIT_CARD_DETAILS}\n    Attempt Payment Without CVV\n    Validate Payment Failure","89":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to upload documents for invoice functionality of the InvoiceManager datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/invoicemanager\n${CUSTOMER_DETAILS}    customer_details\n${INVOICE_ID}          invoice123\n${DOCUMENT_PATH}       \/path\/to\/document.pdf\n\n*** Test Cases ***\nValidate Customer Is Able To Upload Documents For Invoice\n    [Documentation] Test case for validating that the customer is able to upload documents for invoice functionality of the InvoiceManager datadriver\n    Launch InvoiceManager Application ${URL}\n    Login As Customer ${CUSTOMER_DETAILS}\n    Navigate To Invoice ${INVOICE_ID}\n    Upload Document ${DOCUMENT_PATH}\n    Validate Document Uploaded Successfully","90":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to apply discount coupon functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DISCOUNT_COUPON}          discount_coupon\n\n*** Test Cases ***\nValidate Customer Is Able To Apply Discount Coupon\n    [Documentation] Test case for validating that the customer is able to apply discount coupon functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Apply Discount Coupon ${DISCOUNT_COUPON}\n    Validate Discount Applied","91":"*** Settings ***\nDocumentation    Test cases for testing the ability to filter transactions based on payment type for customers on the ECommerce portal\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}               https:\/\/example.com\/ecommerce\n${CUSTOMER_DETAILS}  customer_details\n${PAYMENT_TYPE}      CreditCard\n\n*** Test Cases ***\nFilter Transactions Based On Payment Type\n    [Documentation]    Test case for testing the ability to filter transactions based on payment type for customers on the ECommerce portal\n    Launch ECommerce Portal    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Transactions Page\n    Select Payment Type Filter    ${PAYMENT_TYPE}\n    Validate Transactions Filtered By Payment Type","92":"*** Settings ***\nDocumentation    Test cases for validating that the customer can track refund status in their account functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                    https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}       customer_details\n${REFUND_ID}              refund_id\n\n*** Test Cases ***\nValidate Customer Can Track Refund Status In Their Account\n    [Documentation]    Test case for validating that the customer can track refund status in their account functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details       ${CUSTOMER_DETAILS}\n    Navigate To Refund Status Page\n    Enter Refund ID              ${REFUND_ID}\n    Validate Refund Status","93":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update payment method for a recurring payment functionality of the DirectPAY datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/directpay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_PAYMENT_METHOD}       new_payment_method\n\n*** Test Cases ***\nValidate Update Recurring Payment Method\n    [Documentation] Test case for validating that the customer is able to update payment method for a recurring payment functionality of the DirectPAY datadriver\n    Launch DirectPAY Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Recurring Payments Section\n    Update Payment Method ${NEW_PAYMENT_METHOD}\n    Validate Payment Method Updated","94":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to create and save recurring payments functionality of the PayTECH datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paytech\n${USER_DETAILS}             user_details\n${RECURRING_PAYMENT_DETAILS} recurring_payment_details\n\n*** Test Cases ***\nValidate User Is Able To Create And Save Recurring Payments\n    [Documentation] Test case for validating that the user is able to create and save recurring payments functionality of the PayTECH datadriver\n    Launch PayTech Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Create Recurring Payment ${RECURRING_PAYMENT_DETAILS}\n    Save Recurring Payment\n    Validate Recurring Payment Saved","95":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to export transaction report as CSV functionality of the ExportMagic datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/exportmagic\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Export Transaction Report As CSV\n    [Documentation] Test case for validating that the customer is able to export transaction report as CSV functionality of the ExportMagic datadriver\n    Launch ExportMagic Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Reports Section\n    Select Transaction Report\n    Export Report As CSV\n    Validate CSV File Downloaded Successfully","96":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password functionality of the SecurePay service\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Is Able To Reset Password\n    [Documentation] Test case for validating that the user is able to reset password functionality of the SecurePay service\n    Launch SecurePay Application ${URL}\n    Navigate To Reset Password Page\n    Enter User Details ${USER_DETAILS}\n    Submit Reset Password Request\n    Validate Password Reset Email Sent","97":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${USER_DETAILS}             user_details\n${RESET_PASSWORD_DETAILS}   reset_password_details\n\n*** Test Cases ***\nValidate User Is Able To Reset Password\n    [Documentation] Test case for validating that the user is able to reset password functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Initiate Password Reset\n    Enter Reset Password Details ${RESET_PASSWORD_DETAILS}\n    Validate Password Reset Success","98":"*** Settings ***\nDocumentation          Test case for validating that the user is able to reset password functionality of the Account Management system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/account\n${USER_DETAILS}             user_details\n${NEW_PASSWORD}             new_password\n${CONFIRMATION_MESSAGE}     Your password has been successfully reset\n\n*** Test Cases ***\nValidate User Is Able To Reset Password\n    [Documentation] Test case for validating that the user is able to reset password functionality of the Account Management system\n    Launch Account Management Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Click On Reset Password Link\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit Password Reset\n    Validate Password Reset Successful ${CONFIRMATION_MESSAGE}","99":"*** Settings ***\nDocumentation          Test cases for validating that the customer can update contact information functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_CONTACT_INFO}         new_contact_info\n\n*** Test Cases ***\nValidate Customer Can Update Contact Information\n    [Documentation] Test case for validating that the customer can update contact information functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Contact Information Section\n    Update Contact Information ${NEW_CONTACT_INFO}\n    Save Changes\n    Validate Updated Contact Information","100":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to delete account with an outstanding balance functionality of the FinanceApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/financeapp\n${USER_DETAILS}             user_details\n${OUTSTANDING_BALANCE}      outstanding_balance\n\n*** Test Cases ***\nValidate Unable To Delete Account With Outstanding Balance\n    [Documentation] Test case for validating that the user is unable to delete account with an outstanding balance functionality of the FinanceApp datadriver\n    Launch FinanceApp Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Check Outstanding Balance ${OUTSTANDING_BALANCE}\n    Attempt Delete Account\n    Validate Deletion Prevented","101":"*** Settings ***\nDocumentation          Test cases for validating user authentication with two-factor authentication functionality of the SecureAuthApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/secureauth\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Authentication With Two-Factor Authentication\n    [Documentation] Test case for validating user authentication with two-factor authentication functionality of the SecureAuthApp datadriver\n    Launch SecureAuthApp ${URL}\n    Enter User Credentials ${USER_DETAILS}\n    Trigger Two-Factor Authentication\n    Enter Two-Factor Authentication Code\n    Validate Successful Authentication","102":"*** Settings ***\nDocumentation          Test cases for validating that a customer is unable to schedule payment for invoices older than one year functionality of the PayRepay application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payrepay\n${CUSTOMER_DETAILS}         customer_details\n${OLDER_INVOICE_DETAILS}    older_invoice_details\n\n*** Test Cases ***\nValidate Cannot Schedule Payment For Older Invoices\n    [Documentation] Test case for validating that a customer is unable to schedule payment for invoices older than one year functionality of the PayRepay application\n    Launch PayRepay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Schedule Payment For Older Invoices ${OLDER_INVOICE_DETAILS}\n    Validate Scheduling Payment For Older Invoices Unsuccessful","103":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to update contact information functionality of the AccountManager datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                        https:\/\/example.com\/accountmanager\n${CUSTOMER_DETAILS}           customer_details\n${CONTACT_INFO}               contact_info\n\n*** Test Cases ***\nValidate Update Contact Information\n    [Documentation]    Test case for validating that the customer is able to update contact information functionality of the AccountManager datadriver\n    Launch AccountManager Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Contact Information Page\n    Update Contact Information    ${CONTACT_INFO}\n    Validate Contact Information Updated","104":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update existing payment method functionality of the BillNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billnow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_METHOD_DETAILS}   payment_method_details\n\n*** Test Cases ***\nValidate Update Existing Payment Method\n    [Documentation] Test case for validating that the customer is able to update existing payment method functionality of the BillNow datadriver\n    Launch BillNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Payment Method ${PAYMENT_METHOD_DETAILS}\n    Validate Payment Method Updated","105":"*** Settings ***\nDocumentation          Test case for validating the functionality that ensures a customer can update their profile information in the Account Management section of the FoodNow application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/foodnow\n${CUSTOMER_ACCOUNT}         customer_account\n${NEW_PROFILE_DETAILS}      new_profile_details\n\n*** Test Cases ***\nValidate Customer Can Update Profile Information\n    [Documentation] Test case for validating the functionality that ensures a customer can update their profile information in the Account Management section of the FoodNow application\n    Launch FoodNow Application ${URL}\n    Enter Customer Account Details ${CUSTOMER_ACCOUNT}\n    Navigate To Account Management Section\n    Update Profile Information ${NEW_PROFILE_DETAILS}\n    Validate Profile Information Updated","106":"*** Settings ***\nDocumentation          Test cases for validating that the user can reset password using email functionality of the UserManagementSystem\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                 https:\/\/example.com\/usermanagement\n${USER_EMAIL}          user@example.com\n\n*** Test Cases ***\nValidate User Can Reset Password Using Email\n    [Documentation] Test case for validating that the user can reset password using email functionality of the UserManagementSystem\n    Launch User Management Application ${URL}\n    Navigate To Forgot Password Page\n    Enter User Email ${USER_EMAIL}\n    Submit Password Reset Request\n    Validate Password Reset Email Sent","107":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password functionality of the PayFast datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payfast\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Can Reset Password\n    [Documentation] Test case for validating that the user is able to reset password functionality of the PayFast datadriver\n    Launch PayFast Application ${URL}\n    Click On Forgot Password Link\n    Enter User Details ${USER_DETAILS}\n    Submit Reset Password Request\n    Validate Password Reset Email Sent","108":"*** Settings ***\nDocumentation          Test cases for validating that the customer can create recurring payment for weekly invoices functionality of the BillNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billnow\n${CUSTOMER_DETAILS}         customer_details\n${RECURRING_PAYMENT_DETAILS} recurring_payment_details\n\n*** Test Cases ***\nValidate Create Recurring Payment For Weekly Invoices\n    [Documentation] Test case for validating that the customer can create recurring payment for weekly invoices functionality of the BillNow datadriver\n    Launch BillNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Recurring Payments Section\n    Enter Recurring Payment Details ${RECURRING_PAYMENT_DETAILS}\n    Set Recurrence To Weekly\n    Save Recurring Payment\n    Validate Recurring Payment Created","109":"*** Settings ***\nDocumentation          Test cases for validating successful login and viewing account balance functionality in the Bank Transactions system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/banktransactions\n${USER_CREDENTIALS}         user_credentials\n\n*** Test Cases ***\nValidate Successful Login And View Account Balance\n    [Documentation] Test case for validating successful login and viewing account balance functionality in the Bank Transactions system\n    Launch Bank Transactions Application ${URL}\n    Enter User Credentials ${USER_CREDENTIALS}\n    Validate Successful Login\n    View Account Balance\n    Validate Account Balance Displayed","110":"*** Settings ***\nDocumentation          Test cases for validating the custom discount offer during checkout functionality of the QuickPay system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${CUSTOMER_DETAILS}         customer_details\n${CHECKOUT_DETAILS}         checkout_details\n${DISCOUNT_CODE}            discount_code\n\n*** Test Cases ***\nValidate Custom Discount Offer During Checkout\n    [Documentation] Test case for validating the custom discount offer during checkout functionality of the QuickPay system\n    Launch QuickPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Proceed to Checkout ${CHECKOUT_DETAILS}\n    Apply Discount Code ${DISCOUNT_CODE}\n    Validate Discount Applied During Checkout","111":"*** Settings ***\nDocumentation          Test cases for validating that the customer can successfully split payment across multiple invoices functionality of the PaymentSystem datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentsystem\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_LIST}             invoice_list\n${SPLIT_PAYMENT_DETAILS}    split_payment_details\n\n*** Test Cases ***\nValidate Customer Can Split Payment Across Multiple Invoices\n    [Documentation] Test case for validating that the customer can successfully split payment across multiple invoices functionality of the PaymentSystem datadriver\n    Launch PaymentSystem Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select Multiple Invoices ${INVOICE_LIST}\n    Enter Split Payment Details ${SPLIT_PAYMENT_DETAILS}\n    Confirm Split Payment\n    Validate Split Payment Successful","112":"*** Settings ***\nDocumentation          Test cases for validating that users are unable to register a new account with an already used email address\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/register\n${USED_EMAIL}           used_email@example.com\n${USER_DETAILS}         user_details\n\n*** Test Cases ***\nValidate Unable To Register With Used Email Address\n    [Documentation] Test case for validating that users are unable to register a new account with an already used email address\n    Launch Registration Page    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Enter Email Address    ${USED_EMAIL}\n    Submit Registration Form\n    Validate Error Message Displayed For Used Email","113":"*** Settings ***\nDocumentation     Test cases for validating that a non-integrated customer is able to view available balance before making payment functionality of the PayNOW datadriver\nLibrary           SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n\n*** Test Cases ***\nValidate Non-Integrated Customer Can View Available Balance Before Payment\n    [Documentation] Test case for validating that a non-integrated customer is able to view available balance before making payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Balance Page\n    Validate Available Balance Is Displayed","114":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${INVALID_EMAIL}            invalid_email@example.com\n\n*** Test Cases ***\nValidate Unable To Reset Password With Invalid Email ID\n    [Documentation]    Test case for validating that the customer is unable to reset password with an invalid email ID functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Navigate To Reset Password Screen\n    Enter Email ID    ${INVALID_EMAIL}\n    Attempt To Reset Password\n    Validate Error Message For Invalid Email","115":"*** Settings ***\nDocumentation          Test case for validating the functionality of user registration with an email confirmation on the MyApp application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myapp\n${USER_REGISTRATION_DETAILS} user_registration_details\n${EMAIL}                    user_email\n\n*** Test Cases ***\nValidate User Registration With Email Confirmation\n    [Documentation] Test case for validating the functionality of user registration with an email confirmation on the MyApp application\n    Launch MyApp Application ${URL}\n    Enter User Registration Details ${USER_REGISTRATION_DETAILS}\n    Submit Registration Form\n    Check Email For Confirmation Link ${EMAIL}\n    Confirm Email Registration Through Link","116":"*** Settings ***\nDocumentation          Test case for validating that the user is able to reset password via email functionality of the SecureBank platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securebank\n${USER_DETAILS}             user_details\n${EMAIL}                    email@example.com\n\n*** Test Cases ***\nValidate User Able To Reset Password Via Email\n    [Documentation] Test case for validating that the user is able to reset password via email functionality of the SecureBank platform\n    Launch SecureBank Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Send Password Reset Link ${EMAIL}\n    Validate Password Reset Email Sent","117":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process payment with an expired credit card functionality of the SecurePay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                    https:\/\/example.com\/securepay\n${CUSTOMER_DETAILS}       customer_details\n${EXPIRED_CREDIT_CARD}    expired_credit_card\n\n*** Test Cases ***\nValidate Unable To Process Payment With Expired Credit Card\n    [Documentation] Test case for validating that the customer is unable to process payment with an expired credit card functionality of the SecurePay datadriver\n    Launch SecurePay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Payment Method ${EXPIRED_CREDIT_CARD}\n    Attempt To Process Payment\n    Validate Payment Declined Due To Expired Card","118":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing information after a payment has been processed in the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_INFO}         new_billing_info\n${INVOICE_DETAILS}          invoice_details\n\n*** Test Cases ***\nValidate Update Billing Information After Payment\n    [Documentation] Test case for validating that the customer is able to update billing information after a payment has been processed in the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Process Payment ${INVOICE_DETAILS}\n    Update Billing Information ${NEW_BILLING_INFO}\n    Validate Billing Information Updated","119":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to generate weekly sales reports functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}          merchant_details\n${START_DATE}                start_date\n${END_DATE}                  end_date\n\n*** Test Cases ***\nValidate Generate Weekly Sales Reports\n    [Documentation]    Test case for validating that the merchant is able to generate weekly sales reports functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Merchant Details    ${MERCHANT_DETAILS}\n    Select Start Date    ${START_DATE}\n    Select End Date    ${END_DATE}\n    Generate Sales Report\n    Validate Sales Report Generated","120":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to apply discount code during checkout functionality of the BillingNow module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billingnow\n${CUSTOMER_DETAILS}         customer_details\n${DISCOUNT_CODE}            DISCOUNT123\n\n*** Test Cases ***\nValidate Apply Discount Code During Checkout\n    [Documentation] Test case for validating that the customer is able to apply discount code during checkout functionality of the BillingNow module\n    Launch BillingNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Proceed To Checkout\n    Apply Discount Code ${DISCOUNT_CODE}\n    Validate Discount Applied","121":"*** Settings ***\nDocumentation    Test cases for testing the functionality to ensure customers can update their email address in Digipay application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/digipay\n${BROWSER}       chrome\n${CUSTOMER_DETAILS}  customer_details\n${NEW_EMAIL}     new_email@example.com\n${SUCCESS_MESSAGE}  \"Your email has been updated successfully.\"\n\n*** Test Cases ***\nValidate Customer Can Update Email Address In Digipay\n    [Documentation]    Test case for testing the functionality to ensure customers can update their email address in Digipay application\n    Launch Browser    ${BROWSER}    ${URL}\n    Enter Customer Login Details    ${CUSTOMER_DETAILS}\n    Navigate To Account Settings\n    Enter New Email Address    ${NEW_EMAIL}\n    Submit Email Update\n    Validate Email Update Success Message    ${SUCCESS_MESSAGE}\n    Close Browser","122":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to create a new user account functionality of the MyApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myapp\n${NEW_USER_DETAILS}         new_user_details\n\n*** Test Cases ***\nValidate Create New User Account\n    [Documentation] Test case for validating that the customer is able to create a new user account functionality of the MyApp datadriver\n    Launch MyApp Application ${URL}\n    Enter New User Details ${NEW_USER_DETAILS}\n    Submit New User Account Form\n    Validate New User Account Created","123":"*** Settings ***\nDocumentation          Test cases for validating that the customer receives email notification after successful payment completion functionality of the PayFORWARD datadriver\nLibrary                SeleniumLibrary\nLibrary                StringLibrary\nLibrary                OperatingSystem\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payforward\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n${EMAIL_SUBJECT}            Payment Successful\n\n*** Test Cases ***\nValidate Email Notification After Successful Payment Completion\n    [Documentation] Test case for validating that the customer receives email notification after successful payment completion functionality of the PayFORWARD datadriver\n    Launch PayForward Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Complete Payment ${PAYMENT_DETAILS}\n    Verify Email Notification Received ${EMAIL_SUBJECT}","124":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to update account information functionality of the BankPro datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/bankpro\n${USER_DETAILS}             user_details\n${UPDATED_ACCOUNT_INFO}     updated_account_info\n\n*** Test Cases ***\nValidate User Is Able To Update Account Information\n    [Documentation] Test case for validating that the user is able to update account information functionality of the BankPro datadriver\n    Launch BankPro Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Account Information Page\n    Update Account Information ${UPDATED_ACCOUNT_INFO}\n    Validate Account Information Updated","125":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password using forgot password functionality in the MyBank application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mybank\n${USER_EMAIL}               user@example.com\n${NEW_PASSWORD}             NewPassword1234\n\n*** Test Cases ***\nValidate Reset Password Using Forgot Password Functionality\n    [Documentation] Test case for validating that the user is able to reset password using forgot password functionality in the MyBank application\n    Launch MyBank Application ${URL}\n    Click Element    xpath=\/\/a[text()='Forgot Password?']\n    Input Text       id=email     ${USER_EMAIL}\n    Click Element    xpath=\/\/button[text()='Reset Password']\n    Wait Until Page Contains  \"A password reset link has been sent to your email\"\n    Open Email And Click Reset Password Link\n    Input Text       id=new_password     ${NEW_PASSWORD}\n    Input Text       id=confirm_password ${NEW_PASSWORD}\n    Click Element    xpath=\/\/button[text()='Submit']\n    Wait Until Page Contains  \"Your password has been successfully reset\"","126":"*** Settings ***\nDocumentation    Test cases for ensuring user account lockout after multiple failed login attempts functionality of the SecurePay system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/securepay.com\/login\n${USERNAME}      testuser\n${PASSWORD}      wrongpassword\n${LOCKOUT_MSG}   Your account has been locked after multiple failed login attempts.\n\n*** Test Cases ***\nEnsure User Account Lockout After Multiple Failed Login Attempts\n    [Documentation]    Test case for ensuring user account lockout after multiple failed login attempts functionality of the SecurePay system\n    [Setup]    Open Browser    ${URL}    chrome\n    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}\n    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}\n    Attempt Failed Login Attempts ${USERNAME} ${PASSWORD}\n    Validate Account Lockout Message ${LOCKOUT_MSG}\n    [Teardown]    Close Browser\n\nAttempt Failed Login Attempts\n    [Arguments]    ${username}    ${password}\n    Input Text    id=username    ${username}\n    Input Text    id=password    ${password}\n    Click Button  id=login-button\n    Sleep         1s\n\nValidate Account Lockout Message\n    [Arguments]  ${expected_message}\n    Element Should Contain  id=lockout-message  ${expected_message}","127":"*** Settings ***\nDocumentation    Test cases for validating that user is able to reset password from forgot password link functionality of the MyAccount portal\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/myaccount\n${USERNAME}             test_user\n${EMAIL}                test_user@example.com\n${NEW_PASSWORD}         new_password_123\n\n*** Test Cases ***\nValidate Reset Password From Forgot Password Link\n    [Documentation]    Test case for validating that user is able to reset password from forgot password link functionality of the MyAccount portal\n    Launch MyAccount Portal    ${URL}\n    Click Forgot Password Link\n    Enter Username And Email    ${USERNAME}    ${EMAIL}\n    Submit Forgot Password Form\n    Check Email For Reset Link\n    Navigate To Reset Link\n    Enter New Password And Confirm ${NEW_PASSWORD}\n    Submit New Password Form\n    Validate Password Reset Success Message","128":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the EcomPAY datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ecompay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Can Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the EcomPAY datadriver\n    Launch EcomPAY Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Information\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","129":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to apply discount code during checkout workflow of the ShopEasy datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopeasy\n${CUSTOMER_DETAILS}         customer_details\n${DISCOUNT_CODE}            discount_code\n${DISCOUNT_APPLIED_MESSAGE} discount_applied_message\n\n*** Test Cases ***\nValidate Customer Is Able To Apply Discount Code During Checkout\n    [Documentation] Test case for validating that the customer is able to apply discount code during checkout workflow of the ShopEasy datadriver\n    Launch ShopEasy Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Proceed To Checkout\n    Enter Discount Code ${DISCOUNT_CODE}\n    Apply Discount Code\n    Validate Discount Applied ${DISCOUNT_APPLIED_MESSAGE}","130":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to view transaction summary without required permissions functionality of the ShopEasy application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopeasy\n${CUSTOMER_DETAILS}         customer_details\n${TRANSACTION_SUMMARY}      transaction_summary\n\n*** Test Cases ***\nValidate Unable To View Transaction Summary Without Required Permissions\n    [Documentation] Test case for validating that the customer is unable to view transaction summary without required permissions functionality of the ShopEasy application\n    Launch ShopEasy Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Access Transaction Summary ${TRANSACTION_SUMMARY}\n    Validate Permission Denied Message Displayed","131":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to schedule recurring payments on holidays functionality of the EasyPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/easypay\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_SCHEDULE}         payment_schedule\n\n*** Test Cases ***\nValidate Unable To Schedule Recurring Payments On Holidays\n    [Documentation] Test case for validating that the customer is unable to schedule recurring payments on holidays functionality of the EasyPay datadriver\n    Launch EasyPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Schedule Recurring Payments On Holidays ${PAYMENT_SCHEDULE}\n    Validate Unable To Schedule Payments On Holidays","132":"*** Settings ***\nDocumentation    Test cases for validating that the merchant is able to set up recurring payments functionality of the BillPay datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billpay\n${MERCHANT_DETAILS}         merchant_details\n${RECURRING_PAYMENT_DETAILS} recurring_payment_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Set Up Recurring Payments\n    [Documentation] Test case for validating that the merchant is able to set up recurring payments functionality of the BillPay datadriver\n    Launch BillPay Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Set Up Recurring Payments ${RECURRING_PAYMENT_DETAILS}\n    Validate Recurring Payments Setup","133":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to apply discount code during checkout functionality of the ShopEasy datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopeasy\n${VALID_CREDENTIALS}        valid_credentials\n${PRODUCT_DETAILS}          product_details\n${DISCOUNT_CODE}            discount_code\n\n*** Test Cases ***\nValidate Apply Discount Code During Checkout\n    [Documentation]    Test case for validating that the customer is able to apply discount code during checkout functionality of the ShopEasy datadriver\n    Launch ShopEasy Application    ${URL}\n    Login With Valid Credentials    ${VALID_CREDENTIALS}\n    Add Product To Cart    ${PRODUCT_DETAILS}\n    Proceed To Checkout\n    Apply Discount Code    ${DISCOUNT_CODE}\n    Validate Discount Applied\n    Complete Purchase\n    Validate Order Summary","134":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to schedule a recurring payment with an expired card functionality of the QuickPay system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${CUSTOMER_DETAILS}         customer_details\n${EXPIRED_CARD_DETAILS}     expired_card_details\n\n*** Test Cases ***\nValidate Unable To Schedule Recurring Payment With Expired Card\n    [Documentation] Test case for validating that the customer is unable to schedule a recurring payment with an expired card functionality of the QuickPay system\n    Launch QuickPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Payment Details ${EXPIRED_CARD_DETAILS}\n    Attempt To Schedule Recurring Payment\n    Validate Recurring Payment Scheduling Failed","135":"*** Settings ***\nDocumentation          Test cases for validating that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myapp\n${INVALID_EMAIL}            invalid_email@example\n${ERROR_MESSAGE}            \"Invalid email address.\"\n\n*** Test Cases ***\nValidate Error Message For Invalid Email Address In Signup Form\n    [Documentation] Test case for validating that users receive an error message when entering an invalid email address in the Signup form functionality of the MyApp datadriver\n    Launch Application   ${URL}\n    Navigate To Signup Form\n    Enter Invalid Email Address   ${INVALID_EMAIL}\n    Submit Signup Form\n    Validate Error Message Displayed   ${ERROR_MESSAGE}","136":"*** Settings ***\nDocumentation          Test cases for validating the secure password policy enforcement in the new user registration functionality of the SecureAuth platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/secureauth\n${NEW_USER_DETAILS}         new_user_details\n\n*** Test Cases ***\nValidate Secure Password Policy Enforcement\n    [Documentation] Test case for validating the secure password policy enforcement in the new user registration functionality of the SecureAuth platform\n    Launch SecureAuth Application ${URL}\n    Enter New User Details ${NEW_USER_DETAILS}\n    Validate Password Policy Enforcement","137":"*** Settings ***\nDocumentation    Test cases for validating the ability to add items to the shopping cart for the eShop application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/eshop\n${USER_CREDENTIALS}          user_credentials\n${ITEM_DETAILS}              item_details\n\n*** Test Cases ***\nValidate Adding Items To Shopping Cart\n    [Documentation]    Test case for validating the ability to add items to the shopping cart for the eShop application\n    Launch eShop Application    ${URL}\n    Login To User Account    ${USER_CREDENTIALS}\n    Search For Item    ${ITEM_DETAILS}\n    Add Item To Shopping Cart\n    Validate Item Added To Shopping Cart","138":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view payment summary page functionality of the InvoiceHub datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/invoicehub\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Is Able To View Payment Summary Page\n    [Documentation] Test case for validating that the customer is able to view payment summary page functionality of the InvoiceHub datadriver\n    Launch InvoiceHub Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Summary Page\n    Validate Payment Summary Page Is Displayed","139":"*** Settings ***\nDocumentation          Test cases for validating that the customer can create a subscription for recurring orders functionality of the ShopSmart datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopsmart\n${CUSTOMER_DETAILS}         customer_details\n${SUBSCRIPTION_DETAILS}     subscription_details\n\n*** Test Cases ***\nValidate Create Subscription For Recurring Orders\n    [Documentation] Test case for validating that the customer can create a subscription for recurring orders functionality of the ShopSmart datadriver\n    Launch ShopSmart Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Create Subscription For Recurring Orders ${SUBSCRIPTION_DETAILS}\n    Validate Subscription Created","140":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update profile information functionality of the ProfileManager system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/profilemanager\n${CUSTOMER_DETAILS}         customer_details\n${NEW_PROFILE_INFO}         new_profile_info\n\n*** Test Cases ***\nValidate Update Profile Information\n    [Documentation] Test case for validating that the customer is able to update profile information functionality of the ProfileManager system\n    Launch ProfileManager Application ${URL}\n    Enter Customer Login Details ${CUSTOMER_DETAILS}\n    Navigate To Profile Update Section\n    Enter New Profile Information ${NEW_PROFILE_INFO}\n    Save Updated Information\n    Validate Profile Information Updated","141":"*** Settings ***\nDocumentation    Test cases for testing the Validate Customer Cannot Add More Than Three Recipients To An Invoice functionality of the PayLater datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/paylater\n${BROWSER}       chrome\n${CUSTOMER_DETAILS} customer_details\n${INVOICE_NUMBER} inv123\n\n*** Test Cases ***\nValidate Customer Cannot Add More Than Three Recipients To An Invoice\n    [Documentation]    Test case for validating that a customer cannot add more than three recipients to an invoice in the PayLater datadriver\n    Launch Browser    ${BROWSER}    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Invoices Page\n    Select Invoice To Add Recipients    ${INVOICE_NUMBER}\n    Attempt To Add Multiple Recipients\n    Validate Maximum Number Of Recipients Warning Is Displayed","142":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to add a bank account without a routing number functionality of the OmniBank datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/omnibank\n${CUSTOMER_DETAILS}         customer_details\n${BANK_ACCOUNT_DETAILS}     bank_account_details\n\n*** Test Cases ***\nValidate Unable To Add Bank Account Without Routing Number\n    [Documentation] Test case for validating that the customer is unable to add a bank account without a routing number functionality of the OmniBank datadriver\n    Launch OmniBank Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Bank Account Details Without Routing Number ${BANK_ACCOUNT_DETAILS}\n    Attempt To Save Bank Account\n    Validate Error Message For Missing Routing Number","143":"*** Settings ***\nDocumentation          Test cases for validating that the customer can update billing address functionality of the PaymentPortal\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentportal\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Update Billing Address\n    [Documentation] Test case for validating that the customer can update billing address functionality of the PaymentPortal\n    Launch PaymentPortal Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","144":"*** Settings ***\nDocumentation          Test cases for validating that customers are unable to exceed payment limits using the PayEASY system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payeasy\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_LIMIT_DETAILS}    payment_limit_details\n\n*** Test Cases ***\nValidate Customer Cannot Exceed Payment Limits\n    [Documentation] Test case for validating that customers are unable to exceed payment limits using the PayEASY system\n    Launch PayEASY Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Exceed Payment Limit ${PAYMENT_LIMIT_DETAILS}\n    Validate Payment Limit Not Exceeded","145":"*** Settings ***\nDocumentation          Test case for validating that the customer is able to save payment method as default functionality of the PayGLOBAL datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                     https:\/\/example.com\/payglobal\n${CUSTOMER_LOGIN}          customer_login\n${PAYMENT_METHOD_DETAILS}  payment_method_details\n${SUCCESS_MESSAGE}         Payment method saved as default\n\n*** Test Cases ***\nValidate Customer Is Able To Save Payment Method As Default\n    [Documentation] Test case for validating that the customer is able to save payment method as default functionality of the PayGLOBAL datadriver\n    Launch PayGlobal Application ${URL}\n    Enter Customer Login Details ${CUSTOMER_LOGIN}\n    Navigate To Payment Methods Page\n    Select Payment Method ${PAYMENT_METHOD_DETAILS}\n    Click Save As Default Button\n    Validate Success Message Displayed ${SUCCESS_MESSAGE}","146":"*** Settings ***\nDocumentation    Test cases for validating that the user cannot reset password without valid email functionality of the SecureAccess datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/secureaccess\n${INVALID_EMAIL}            invalid_email@example.com\n${VALIDATION_MESSAGE}       Please enter a valid email address\n\n*** Test Cases ***\nValidate Password Reset With Invalid Email\n    [Documentation] Test case for validating that the user cannot reset password without valid email functionality of the SecureAccess datadriver\n    Launch SecureAccess Application    ${URL}\n    Attempt Password Reset With Invalid Email    ${INVALID_EMAIL}\n    Validate Error Message Displayed    ${VALIDATION_MESSAGE}","147":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update profile information functionality of the AccountManager system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/accountmanager\n${CUSTOMER_DETAILS}         customer_details\n${UPDATED_INFORMATION}      updated_information\n\n*** Test Cases ***\nValidate Customer Profile Update\n    [Documentation] Test case for validating that the customer is able to update profile information functionality of the AccountManager system\n    Launch AccountManager Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Profile Information ${UPDATED_INFORMATION}\n    Save Updated Profile Information\n    Validate Profile Information Is Updated","148":"*** Settings ***\nDocumentation          Test cases for validating successful login functionality using valid credentials of the BankApp system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/bankapp\n${USERNAME}                 valid_username\n${PASSWORD}                 valid_password\n\n*** Test Cases ***\nValidate Successful Login Using Valid Credentials\n    [Documentation] Test case for validating successful login functionality using valid credentials of the BankApp system\n    Launch BankApp Application ${URL}\n    Enter Username ${USERNAME}\n    Enter Password ${PASSWORD}\n    Click Login\n    Validate Successful Login","149":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to schedule payment for expired invoices functionality of the BillPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billpay\n${USER_DETAILS}             user_details\n${EXPIRED_INVOICE_DETAILS}  expired_invoice_details\n\n*** Test Cases ***\nValidate Unable To Schedule Payment For Expired Invoices\n    [Documentation] Test case for validating that the user is unable to schedule payment for expired invoices functionality of the BillPay datadriver\n    Launch BillPay Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Expired Invoice Page\n    Attempt To Schedule Payment ${EXPIRED_INVOICE_DETAILS}\n    Validate Unable To Schedule Payment","150":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to exceed transaction limit functionality of the QuickPay datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/quickpay\n${CUSTOMER_DETAILS}          customer_details\n${TRANSACTION_DETAILS}       transaction_details\n\n*** Test Cases ***\nValidate Customer Is Unable To Exceed Transaction Limit\n    [Documentation]    Test case for validating that the customer is unable to exceed transaction limit functionality of the QuickPay datadriver\n    Launch QuickPay Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Attempt Exceeding Transaction Limit    ${TRANSACTION_DETAILS}\n    Validate Transaction Limit Exceeded Error","151":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to generate monthly financial reports functionality of the FinSERV datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/finserv\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Generate Monthly Financial Reports\n    [Documentation] Test case for validating that the merchant is able to generate monthly financial reports functionality of the FinSERV datadriver\n    Launch FinSERV Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Reports Section\n    Select Monthly Financial Reports\n    Generate Report\n    Validate Report Generated Successfully","152":"*** Settings ***\nDocumentation    Test cases for validating that user is able to reset password through email functionality of the SecureApp datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                https:\/\/example.com\/secureapp\n${EMAIL}              testuser@example.com\n${NEW_PASSWORD}       NewSecurePassword123\n\n*** Test Cases ***\nValidate User Is Able To Reset Password Through Email\n    [Documentation]    Test case for validating that user is able to reset password through email functionality of the SecureApp datadriver\n    Launch SecureApp Application    ${URL}\n    Navigate To Reset Password Page\n    Enter Email Address For Password Reset    ${EMAIL}\n    Trigger Password Reset Email\n    Validate Password Reset Email Sent\n    Open Password Reset Email And Click Link\n    Enter New Password    ${NEW_PASSWORD}\n    Confirm New Password    ${NEW_PASSWORD}\n    Submit New Password\n    Validate Password Reset Successfully","153":"*** Settings ***\nDocumentation    Test case for validating that the user is unable to register with an invalid email address functionality of the MyApp datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myapp\n${INVALID_EMAIL}            invalid_email@example\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Is Unable To Register With Invalid Email Address\n    [Documentation]    Test case for validating that the user is unable to register with an invalid email address functionality of the MyApp datadriver\n    Launch MyApp Application    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Enter Email Address    ${INVALID_EMAIL}\n    Submit Registration Form\n    Validate Registration Error Message Displayed","154":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to add items to cart that are out of stock functionality of the eCommerceWebapp\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ecommerce\n${CUSTOMER_DETAILS}         customer_details\n${OUT_OF_STOCK_ITEM}        out_of_stock_item\n\n*** Test Cases ***\nValidate Unable To Add Out Of Stock Items To Cart\n    [Documentation] Test case for validating that the customer is unable to add items to cart that are out of stock functionality of the eCommerceWebapp\n    Launch eCommerce Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Add Out Of Stock Item To Cart ${OUT_OF_STOCK_ITEM}\n    Validate Unable To Add Item To Cart","155":"*** Settings ***\nDocumentation    Test cases for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customers Can View Precise Due Amount For Each Itemized Invoice In Billing Overview\n    [Documentation]    Test case for validating that customers can view the precise due amount for each itemized invoice in the Billing Overview for the MyAccount application\n    Launch MyAccount Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Overview\n    Validate Precise Due Amount For Each Itemized Invoice","156":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update the payment method details functionality of the PaymentGateway datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentgateway\n${CUSTOMER_DETAILS}         customer_details\n${OLD_PAYMENT_DETAILS}      old_payment_details\n${NEW_PAYMENT_DETAILS}      new_payment_details\n\n*** Test Cases ***\nValidate Customer Is Able To Update Payment Method Details\n    [Documentation] Test case for validating that the customer is able to update the payment method details functionality of the PaymentGateway datadriver\n    Launch PaymentGateway Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment Method Update Section\n    Enter Old Payment Method Details ${OLD_PAYMENT_DETAILS}\n    Enter New Payment Method Details ${NEW_PAYMENT_DETAILS}\n    Submit Payment Method Update\n    Validate Payment Method Updated","157":"*** Settings ***\nDocumentation    Test cases for verifying that the user is unable to reset password with invalid email address functionality of the SecureAccess module\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                    https:\/\/example.com\/secureaccess\n${INVALID_EMAIL_ADDRESS}  invalid.email@example.com\n\n*** Test Cases ***\nVerify User Is Unable To Reset Password With Invalid Email Address\n    [Documentation]    Test case for verifying that the user is unable to reset password with invalid email address functionality of the SecureAccess module\n    Launch SecureAccess Application    ${URL}\n    Click \"Forgot Password\" Link\n    Enter Email Address    ${INVALID_EMAIL_ADDRESS}\n    Submit Reset Password Request\n    Validate Error Message Displayed","158":"*** Settings ***\nDocumentation          Test cases for validating that the user cannot login with an expired session token in an e-commerce platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ecommerce\n${EXPIRED_SESSION_TOKEN}    expired_token\n\n*** Test Cases ***\nValidate User Cannot Login With Expired Session Token\n    [Documentation] Test case for validating that the user cannot login with an expired session token in an e-commerce platform\n    Launch Ecommerce Application ${URL}\n    Attempt To Login With Expired Session Token ${EXPIRED_SESSION_TOKEN}\n    Validate Login Failure Due To Expired Session Token","159":"*** Settings ***\nDocumentation          Test cases for testing the functionality of viewing list of upcoming orders in the OrderManagement System\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ordermanagement\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Upcoming Orders\n    [Documentation] Test case for testing the functionality of viewing list of upcoming orders in the OrderManagement System\n    Launch OrderManagement Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Upcoming Orders List\n    Validate Upcoming Orders Displayed","160":"*** Settings ***\nDocumentation          Test cases for validating user registration with valid and invalid data functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${VALID_USER_DETAILS}       valid_user_details\n${INVALID_USER_DETAILS}     invalid_user_details\n\n*** Test Cases ***\nValidate User Registration With Valid Data\n    [Documentation] Test case for validating user registration with valid data functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter User Details ${VALID_USER_DETAILS}\n    Submit Registration Form\n    Validate Successful Registration\n\nValidate User Registration With Invalid Data\n    [Documentation] Test case for validating user registration with invalid data functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter User Details ${INVALID_USER_DETAILS}\n    Submit Registration Form\n    Validate Registration Failure","161":"*** Settings ***\nDocumentation    Test cases for validating that the user is able to change their password functionality of the MyBanking application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                   https:\/\/example.com\/mybanking\n${USER_CREDENTIALS}      user_credentials\n${NEW_PASSWORD}          new_password\n\n*** Test Cases ***\nValidate User Is Able To Change Their Password\n    [Documentation]    Test case for validating that the user is able to change their password functionality of the MyBanking application\n    Launch MyBanking Application    ${URL}\n    Enter User Credentials    ${USER_CREDENTIALS}\n    Navigate To Change Password Page\n    Enter New Password    ${NEW_PASSWORD}\n    Confirm Change Password\n    Validate Password Changed","162":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/easypay\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Unable To Pay Outstanding Amount Exceeding Credit Limit\n    [Documentation] Test case for validating that the customer is unable to pay outstanding amount if it exceeds credit limit functionality of the EasyPay system\n    Launch EasyPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Outstanding Payments\n    Attempt To Pay Amount Exceeding Credit Limit\n    Validate Error Message Displayed","163":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to register with an invalid email functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${OMNICORP_MERCHANT}         OMNICORP_MERCHANT\n${INVALID_EMAIL}             invalid_email\n${ERROR_MESSAGE}             invalid_email_error_message\n\n*** Test Cases ***\nValidate Customer Is Unable To Register With Invalid Email\n    [Documentation]    Test case for validating that the customer is unable to register with an invalid email functionality of the PayNOW datadriver\n    Launch PayNow Application    ${OMNICORP_MERCHANT}\n    Enter Invalid Email          ${INVALID_EMAIL}\n    Validate Registration Error Message Is Displayed    ${ERROR_MESSAGE}","164":"*** Settings ***\nDocumentation          Test cases for testing the ability to reset user passwords via the Forgot Password feature of the SecureLogin application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securelogin\n${USER_EMAIL}               user@example.com\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate Forgot Password Functionality\n    [Documentation] Test case for validating the ability to reset user passwords via the Forgot Password feature of the SecureLogin application\n    Launch SecureLogin Application ${URL}\n    Navigate To Forgot Password Page\n    Enter User Email ${USER_EMAIL}\n    Submit Forgot Password Request\n    Receive Reset Password Email And Extract Link\n    Navigate To Reset Password Link\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit New Password\n    Validate Password Reset Confirmation Message\n","165":"*** Settings ***\nDocumentation          Test cases for validating user can add multiple products to shopping cart functionality of the eCommerce platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\n${USER_CREDENTIALS}         user_credentials\n${PRODUCT_1}                product_1\n${PRODUCT_2}                product_2\n${PRODUCT_3}                product_3\n\n*** Test Cases ***\nValidate User Can Add Multiple Products To Shopping Cart\n    [Documentation] Test case for validating user can add multiple products to shopping cart functionality of the eCommerce platform\n    Launch ECommerce Platform ${URL}\n    Login As User ${USER_CREDENTIALS}\n    Add Product To Cart ${PRODUCT_1}\n    Add Product To Cart ${PRODUCT_2}\n    Add Product To Cart ${PRODUCT_3}\n    View Shopping Cart\n    Validate Products In Cart ${PRODUCT_1} ${PRODUCT_2} ${PRODUCT_3}","166":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to initiate a refund for cancelled orders functionality of the OrderNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ordernow\n${MERCHANT_DETAILS}         merchant_details\n${CANCELLED_ORDER_DETAILS}  cancelled_order_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Initiate Refund For Cancelled Orders\n    [Documentation] Test case for validating that the merchant is able to initiate a refund for cancelled orders functionality of the OrderNow datadriver\n    Launch OrderNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Cancelled Orders ${CANCELLED_ORDER_DETAILS}\n    Initiate Refund\n    Validate Refund Initiated For Cancelled Orders","167":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to complete payment without adding a billing address functionality of the PayFaster platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payfaster\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Unable To Complete Payment Without Billing Address\n    [Documentation] Test case for validating that the customer is unable to complete payment without adding a billing address functionality of the PayFaster platform\n    Launch PayFaster Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Payment Details ${PAYMENT_DETAILS}\n    Attempt To Complete Payment\n    Validate Error Message Displayed For Missing Billing Address","168":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to update billing address functionality of the PaymentApp datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentapp\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PaymentApp datadriver\n    Launch PaymentApp Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Update Page\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated\n","169":"*** Settings ***\nDocumentation    Test cases for validating that the user is able to reset password via email functionality of the MyAccount service\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${USER_DETAILS}             user_details\n${EMAIL_ADDRESS}            user_email_address\n\n*** Test Cases ***\nValidate User Is Able To Reset Password Via Email\n    [Documentation]    Test case for validating that the user is able to reset password via email functionality of the MyAccount service\n    Launch MyAccount Application    ${URL}\n    Navigate To Forgot Password Page\n    Enter User Email Address    ${EMAIL_ADDRESS}\n    Submit Forgot Password Request\n    Validate Password Reset Email Sent    ${USER_DETAILS}\n    Open Email And Get Password Reset Link\n    Navigate To Password Reset Link\n    Enter New Password And Confirm\n    Validate Password Reset Successfully","170":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reset their password functionality of the AccountManagement datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/accountmanagement\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Reset Password\n    [Documentation] Test case for validating that the customer is able to reset their password functionality of the AccountManagement datadriver\n    Launch Account Management Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Reset Password Page\n    Submit Password Reset Request\n    Validate Password Reset Email Sent","171":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/secureshop\n${CUSTOMER_DETAILS}         customer_details\n${PURCHASE_DETAILS}         purchase_details\n${ERROR_MESSAGE}            Purchase exceeds your credit limit\n\n*** Test Cases ***\nValidate Customer Unable To Make Purchase Over Credit Limit\n    [Documentation] Test case for validating that the customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver\n    Launch SecureShop Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Make Purchase ${PURCHASE_DETAILS}\n    Validate Error Message Is Displayed ${ERROR_MESSAGE}","172":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to generate monthly transaction report functionality of the PayREPORT system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payreport\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Generate Monthly Transaction Report\n    [Documentation] Test case for validating that the merchant is able to generate monthly transaction report functionality of the PayREPORT system\n    Launch PayReport Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Generate Monthly Transaction Report\n    Validate Generated Monthly Report","173":"*** Settings ***\nDocumentation          Test cases for validating user registration functionality of the MyService datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myservice\n${BROWSER}                  chrome\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Registration\n    [Documentation] Test case for validating user registration functionality of the MyService datadriver\n    Launch Browser    ${BROWSER}    ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Registration Form\n    Validate Registration Success Message","174":"*** Settings ***\nDocumentation          Test case for validating that the customer is able to update the shipping address for an order functionality of the ShopEZ data engine\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopez\n${CUSTOMER_DETAILS}         customer_details\n${ORDER_ID}                 order123\n${NEW_SHIPPING_ADDRESS}     new_address_details\n\n*** Test Cases ***\nValidate Customer Able To Update Shipping Address For Order\n    [Documentation] Test case for validating that the customer is able to update the shipping address for an order functionality of the ShopEZ data engine\n    Launch ShopEZ Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Order ID ${ORDER_ID}\n    Enter New Shipping Address ${NEW_SHIPPING_ADDRESS}\n    Save New Shipping Address\n    Validate Shipping Address Updated","175":"*** Settings ***\nDocumentation          Test cases for testing the Add New Customer functionality of the User Management module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/user_management\n${BROWSER}                  chrome\n${NEW_CUSTOMER_DETAILS}     new_customer_details\n\n*** Test Cases ***\nAdd New Customer\n    [Documentation] Test case for testing the Add New Customer functionality of the User Management module\n    Launch Browser  ${BROWSER}  ${URL}\n    Login As Admin\n    Navigate To Add Customer Page\n    Enter New Customer Details  ${NEW_CUSTOMER_DETAILS}\n    Submit New Customer Form\n    Validate New Customer Added\n    Close Browser","176":"*** Settings ***\nDocumentation          Test cases for checking the ability of the customer to update their billing information on the MyAccount page functionality\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${CUSTOMER_DETAILS}         customer_details\n${BILLING_INFORMATION}      billing_information\n\n*** Test Cases ***\nValidate Update Billing Information\n    [Documentation] Test case for checking the ability of the customer to update their billing information on the MyAccount page functionality\n    Launch MyAccount Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Information Page\n    Update Billing Information ${BILLING_INFORMATION}\n    Validate Billing Information Updated","177":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reset password using email functionality of the MyAPP datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myapp\n${CUSTOMER_EMAIL}           customer@example.com\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate Reset Password Using Email\n    [Documentation] Test case for validating that the customer is able to reset password using email functionality of the MyAPP datadriver\n    Launch MyAPP Application ${URL}\n    Click Forgot Password Link\n    Enter Customer Email ${CUSTOMER_EMAIL}\n    Submit Forgot Password Request\n    Open Email And Retrieve Reset Link\n    Navigate To Reset Link\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit New Password Form\n    Validate Password Reset Successful","178":"*** Settings ***\nDocumentation          Test cases for validating that a customer cannot login with an expired account in the MyBank application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mybank\n${EXPIRED_ACCOUNT_DETAILS}  expired_account_details\n\n*** Test Cases ***\nValidate Customer Cannot Login With Expired Account\n    [Documentation] Test case for validating that a customer cannot login with an expired account in the MyBank application\n    Launch MyBank Application ${URL}\n    Enter Account Details ${EXPIRED_ACCOUNT_DETAILS}\n    Attempt Login With Expired Account\n    Validate Login Failure Message","179":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to generate daily sales reports functionality of the SalesTracker application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/salestracker\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Generate Daily Sales Reports\n    [Documentation] Test case for validating that the merchant is able to generate daily sales reports functionality of the SalesTracker application\n    Launch SalesTracker Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Sales Reports Section\n    Generate Daily Sales Report\n    Validate Daily Sales Report Generated","180":"*** Settings ***\nDocumentation    Test cases for validating that user is able to recover password using registered email functionality of the E-Shop datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/eshop\n${REGISTERED_EMAIL}          registered_email\n\n*** Test Cases ***\nValidate User Is Able To Recover Password Using Registered Email\n    [Documentation]    Test case for validating that user is able to recover password using registered email functionality of the E-Shop datadriver\n    Launch E-Shop Application    ${URL}\n    Navigate To Forgot Password Page\n    Enter Registered Email    ${REGISTERED_EMAIL}\n    Submit Password Recovery Request\n    Validate Password Recovery Email Sent","181":"*** Settings ***\nDocumentation          Test cases for validating that the customer can generate invoice report functionality of the InvoiceNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/invoicenow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Can Generate Invoice Report\n    [Documentation] Test case for validating that the customer can generate invoice report functionality of the InvoiceNow datadriver\n    Launch InvoiceNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Report Section\n    Generate Invoice Report\n    Validate Invoice Report Generated","182":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to update billing information after making a purchase functionality of the ShopEase platform\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                             https:\/\/example.com\/shopease\n${CUSTOMER_DETAILS}                customer_details\n${PURCHASE_DETAILS}                purchase_details\n${NEW_BILLING_INFORMATION}         new_billing_information\n\n*** Test Cases ***\nValidate Customer Can Update Billing Information After Purchase\n    [Documentation]    Test case for validating that the customer is able to update billing information after making a purchase functionality of the ShopEase platform\n    Launch ShopEase Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Make A Purchase    ${PURCHASE_DETAILS}\n    Navigate To Billing Information Page\n    Update Billing Information    ${NEW_BILLING_INFORMATION}\n    Validate Billing Information Updated","183":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to generate invoice reports functionality of the ReportGEN datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/reportgen\n${CUSTOMER_DETAILS}         customer_details\n${REPORT_PARAMETERS}        report_parameters\n\n*** Test Cases ***\nValidate Customer Is Able To Generate Invoice Reports\n    [Documentation] Test case for validating that the customer is able to generate invoice reports functionality of the ReportGEN datadriver\n    Launch ReportGEN Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Report Parameters ${REPORT_PARAMETERS}\n    Generate Invoice Reports\n    Validate Invoice Reports Generated","184":"*** Settings ***\nDocumentation          Test cases for validating the creation of a new user account functionality of the MetroPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/metropay\n${USER_DETAILS}             user_details\n${SUCCESS_MESSAGE}          Account successfully created\n\n*** Test Cases ***\nValidate Creation Of New User Account\n    [Documentation] Test case for validating the creation of a new user account functionality of the MetroPay datadriver\n    Launch MetroPay Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit User Details\n    Validate Success Message ${SUCCESS_MESSAGE}","185":"*** Settings ***\nDocumentation    Test cases for validating that a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${PAYWORK_REQUEST_DETAILS}   paywork_request_details\n${UNPAID_INVOICE_DATE}       1000\n\n*** Test Cases ***\nValidate Customer Is Prohibited From Initiating PayWork Requests For Unpaid Invoices Over 1000 Days\n    [Documentation]    Test case for validating that a customer is prohibited from initiating PayWork requests for invoices that have been unpaid for over 1000 days functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Enter PayWork Request Details    ${PAYWORK_REQUEST_DETAILS}\n    Validate Unpaid Invoice Date Is Greater Than    ${UNPAID_INVOICE_DATE}\n    Verify PayWork Request Initiation Is Prohibited","186":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update scheduled payment date functionality of the SysFIN datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/sysfin\n${CUSTOMER_DETAILS}         customer_details\n${NEW_PAYMENT_DATE}         new_payment_date\n\n*** Test Cases ***\nValidate Customer Is Able To Update Scheduled Payment Date\n    [Documentation] Test case for validating that the customer is able to update scheduled payment date functionality of the SysFIN datadriver\n    Launch SysFIN Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Scheduled Payments\n    Update Payment Date ${NEW_PAYMENT_DATE}\n    Validate Updated Payment Date","187":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view detailed invoice history functionality of the InvoiceViewer datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/invoiceviewer\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Can View Detailed Invoice History\n    [Documentation] Test case for validating that the customer is able to view detailed invoice history functionality of the InvoiceViewer datadriver\n    Launch InvoiceViewer Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    View Detailed Invoice History\n    Validate Detailed Invoice History Displayed","188":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view updated balance after processing refund functionality of the QuickPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${MERCHANT_DETAILS}         merchant_details\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate View Updated Balance After Processing Refund\n    [Documentation] Test case for validating that the merchant is able to view updated balance after processing refund functionality of the QuickPay datadriver\n    Launch QuickPay Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Transactions ${TRANSACTION_DETAILS}\n    Process Refund\n    Validate Updated Balance After Refund","189":"*** Settings ***\nDocumentation    Test cases for validating the customer's ability to reset their password via email verification functionality of the SecurePAY system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/securepay\n${CUSTOMER_EMAIL}       customer@example.com\n${EMAIL_INBOX_URL}      https:\/\/mail.example.com\n${NEW_PASSWORD}         new_password123\n${RESET_LINK_SUBJECT}   Password Reset Link\n\n*** Test Cases ***\nValidate Password Reset Via Email Verification\n    [Documentation] Test case for validating the customer's ability to reset their password via email verification functionality of the SecurePAY system\n    Launch SecurePAY Application    ${URL}\n    Click Forgot Password Link\n    Enter Customer Email Address    ${CUSTOMER_EMAIL}\n    Submit Password Reset Request\n    Open Email Inbox                ${EMAIL_INBOX_URL}\n    Locate Password Reset Email     ${CUSTOMER_EMAIL}  ${RESET_LINK_SUBJECT}\n    Click Password Reset Link In Email\n    Enter New Password              ${NEW_PASSWORD}\n    Confirm New Password            ${NEW_PASSWORD}\n    Submit New Password\n    Validate Successful Password Reset","190":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Account Settings\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","191":"*** Settings ***\nDocumentation          Test cases for validating customer data encryption functionality of the PaymentSecure datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paymentsecure\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Data Encryption\n    [Documentation] Test case for validating customer data encryption functionality of the PaymentSecure datadriver\n    Launch PaymentSecure Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Encrypt Customer Data\n    Validate Customer Data Is Encrypted","192":"*** Settings ***\nDocumentation          Test cases for testing the functionality of system logging out idle users automatically after a specified time period in the SecurePay app\nLibrary                SeleniumLibrary\nLibrary                BuiltIn\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${USER_DETAILS}             user_details\n${IDLE_TIMEOUT}             15m # specify the idle timeout period here\n\n*** Test Cases ***\nValidate Auto Logout for Idle Users\n    [Documentation] Test case for validating the functionality of system logging out idle users automatically after a specified time period in the SecurePay app\n    Launch SecurePay Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Simulate User Activity For ${IDLE_TIMEOUT}\n    Wait Until Page Contains Element    logout_button   timeout=${IDLE_TIMEOUT} # Assumed element id for logout button\n    Validate Auto Logout\n\n","193":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reset password using email functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${EMAIL}                   customer@example.com\n\n*** Test Cases ***\nValidate Password Reset Using Email\n    [Documentation] Test case for validating that the customer is able to reset password using email functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Navigate To Forgot Password Page\n    Enter Customer Email ${EMAIL}\n    Submit Password Reset Request\n    Validate Password Reset Email Received","194":"*** Settings ***\nDocumentation          Test cases for validating the user registration process on the client's web application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/registration\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Registration Process\n    [Documentation] Test case for validating the user registration process on the client's web application\n    Launch Registration Page ${URL}\n    Enter User Details ${USER_DETAILS}\n    Submit Registration Form\n    Validate Registration Success Message","195":"*** Settings ***\nDocumentation          Test cases for validating the Check Cart Total Calculation functionality of the OnlineShopping datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/onlineshopping\n${CUSTOMER_DETAILS}         customer_details\n${CART_DETAILS}             cart_details\n\n*** Test Cases ***\nValidate Cart Total Calculation\n    [Documentation] Test case for validating the Check Cart Total Calculation functionality of the OnlineShopping datadriver\n    Launch Online Shopping Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Add Items To Cart ${CART_DETAILS}\n    Proceed To Checkout\n    Verify Cart Total Calculation\n    Validate Total Amount","196":"*** Settings ***\nDocumentation          Test cases for validating that the customer can successfully use account recovery functionality of the SafeBank application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/safebank\n${CUSTOMER_EMAIL}           customer_email\n${RECOVERY_OPTIONS}         recovery_options\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate Customer Can Use Account Recovery\n    [Documentation] Test case for validating that the customer can successfully use account recovery functionality of the SafeBank application\n    Launch SafeBank Application ${URL}\n    Initiate Account Recovery ${CUSTOMER_EMAIL}\n    Select Recovery Option ${RECOVERY_OPTIONS}\n    Provide New Password ${NEW_PASSWORD}\n    Validate Account Recovery Successful","197":"*** Settings ***\nDocumentation          Test cases for ensuring that the customer can successfully update email address on profile page functionality of the PayNOW User Profile module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_LOGIN_DETAILS}   customer_login_details\n${NEW_EMAIL_ADDRESS}        new_email@example.com\n\n*** Test Cases ***\nValidate Update Email Address On Profile Page\n    [Documentation] Test case for ensuring that the customer can successfully update email address on profile page functionality of the PayNOW User Profile module\n    Launch PayNow Application ${URL}\n    Log In As Customer ${CUSTOMER_LOGIN_DETAILS}\n    Navigate To Profile Page\n    Update Email Address ${NEW_EMAIL_ADDRESS}\n    Validate Email Address Updated","198":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to logout successfully functionality of the SecurePay application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Logout Successfully\n    [Documentation] Test case for validating that the customer is able to logout successfully functionality of the SecurePay application\n    Launch SecurePay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Logout Customer\n    Validate Logout Successful","199":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to change shipping address before order confirmation functionality of the ShopNOW application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopnow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_SHIPPING_ADDRESS}     new_shipping_address\n\n*** Test Cases ***\nValidate Change Shipping Address Before Order Confirmation\n    [Documentation] Test case for validating that the customer is able to change shipping address before order confirmation functionality of the ShopNOW application\n    Launch ShopNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Order Checkout Page\n    Change Shipping Address ${NEW_SHIPPING_ADDRESS}\n    Validate Changed Shipping Address Before Confirmation","200":"*** Settings ***\nDocumentation          Test cases for validating user registration with valid details functionality of the SampleApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/sampleapp\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate User Registration With Valid Details\n    [Documentation] Test case for validating user registration with valid details functionality of the SampleApp datadriver\n    Launch SampleApp Application ${URL}\n    Enter User Registration Details ${USER_DETAILS}\n    Submit Registration Form\n    Validate User Registration Successful","201":"*** Settings ***\nDocumentation    Test cases for validating the ability for customers to update their billing address in customer settings functionality\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                     https:\/\/example.com\/customersettings\n${CUSTOMER_LOGIN}          customer_login_details\n${NEW_BILLING_ADDRESS}     new_billing_address_details\n${SUCCESS_MESSAGE}         Address updated successfully\n\n*** Test Cases ***\nValidate Update Billing Address Functionality\n    [Documentation]    Test case for validating the ability for customers to update their billing address in customer settings functionality\n    Launch Customer Settings Application    ${URL}\n    Login As Customer    ${CUSTOMER_LOGIN}\n    Navigate To Billing Address Section\n    Enter New Billing Address Details    ${NEW_BILLING_ADDRESS}\n    Save Updated Billing Address\n    Validate Success Message Is Displayed    ${SUCCESS_MESSAGE}","202":"*** Settings ***\nDocumentation    Test cases for validating that the customer is able to update their email address functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${NEW_EMAIL_ADDRESS}         new_email@example.com\n\n*** Test Cases ***\nValidate Customer Is Able To Update Email Address\n    [Documentation]    Test case for validating that the customer is able to update their email address functionality of the PayNOW datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Account Settings\n    Update Email Address    ${NEW_EMAIL_ADDRESS}\n    Validate Email Address Updated","203":"*** Settings ***\nDocumentation          Test cases for validating that the user can update profile information functionality of the MyProfile datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myprofile\n${USER_DETAILS}             user_details\n${NEW_PROFILE_INFO}         new_profile_info\n\n*** Test Cases ***\nValidate User Can Update Profile Information\n    [Documentation] Test case for validating that the user can update profile information functionality of the MyProfile datadriver\n    Launch MyProfile Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Profile Information Page\n    Update Profile Information ${NEW_PROFILE_INFO}\n    Validate Profile Information Updated","204":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to make payment with expired credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}          customer_details\n${EXPIRED_CREDIT_CARD}       expired_credit_card\n\n*** Test Cases ***\nValidate Unable To Make Payment With Expired Credit Card\n    [Documentation] Test case for validating that the customer is unable to make payment with expired credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Expired Credit Card Details ${EXPIRED_CREDIT_CARD}\n    Attempt To Make Payment\n    Validate Payment Failed Due To Expired Card","205":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to view payment history over the last six months functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${DATE_RANGE}               last_six_months\n\n*** Test Cases ***\nValidate View Payment History Over Last Six Months\n    [Documentation] Test case for validating that the customer is able to view payment history over the last six months functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Payment History\n    Select Date Range ${DATE_RANGE}\n    Validate Payment History Displayed","206":"*** Settings ***\nDocumentation          Test cases for validating that payment reminder notifications are sent through SMS functionality of the BillNotify datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billnotify\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Payment Reminder Notifications Sent Through SMS\n    [Documentation] Test case for validating that payment reminder notifications are sent through SMS functionality of the BillNotify datadriver\n    Launch BillNotify Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Trigger Payment Reminder Notification\n    Validate SMS Notification Sent","207":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to add more than three payment methods functionality of the MoneyApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/moneyapp\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_METHOD_ONE}       payment_method_one\n${PAYMENT_METHOD_TWO}       payment_method_two\n${PAYMENT_METHOD_THREE}     payment_method_three\n${PAYMENT_METHOD_FOUR}      payment_method_four\n\n*** Test Cases ***\nValidate Customer Unable To Add More Than Three Payment Methods\n    [Documentation] Test case for validating that the customer is unable to add more than three payment methods functionality of the MoneyApp datadriver\n    Launch MoneyApp Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Add Payment Method ${PAYMENT_METHOD_ONE}\n    Add Payment Method ${PAYMENT_METHOD_TWO}\n    Add Payment Method ${PAYMENT_METHOD_THREE}\n    Attempt To Add Fourth Payment Method ${PAYMENT_METHOD_FOUR}\n    Validate Unable To Add Fourth Payment Method\n\n","208":"*** Settings ***\nDocumentation          Test cases for validating that the refund of payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate Refund Of Payment\n    [Documentation] Test case for validating that the refund of payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Transaction Details ${TRANSACTION_DETAILS}\n    Process Refund\n    Validate Refund Successful","209":"*** Settings ***\nDocumentation          Test cases for validating user login to the MartSecure application with both valid and invalid credentials.\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/martsecure\n${VALID_CREDENTIALS}        valid_credentials\n${INVALID_CREDENTIALS}      invalid_credentials\n\n*** Test Cases ***\nValidate User Login With Valid And Invalid Credentials\n    [Documentation] Test case for validating user login to the MartSecure application with both valid and invalid credentials.\n    Open Browser ${URL} ${BROWSER}\n    [Teardown] Close Browser\n    Validate Login With Valid Credentials ${VALID_CREDENTIALS}\n    Validate Login With Invalid Credentials ${INVALID_CREDENTIALS}\n\nValidate Login With Valid Credentials\n    [Arguments]  ${Valid_Credentials}\n    Input Text    username_field   ${Valid_Credentials.username}\n    Input Text    password_field   ${Valid_Credentials.password}\n    Click Button  login_button\n    Wait Until Page Contains   Welcome, ${Valid_Credentials.username}   timeout=10s\n    Capture Page Screenshot\n\nValidate Login With Invalid Credentials\n    [Arguments]  ${Invalid_Credentials}\n    Input Text    username_field   ${Invalid_Credentials.username}\n    Input Text    password_field   ${Invalid_Credentials.password}\n    Click Button  login_button\n    Wait Until Page Contains   Invalid username or password   timeout=10s\n    Capture Page Screenshot","210":"*** Settings ***\nDocumentation          Test cases for testing the Download and Print Invoice functionality of the ManagePAY datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/managepay\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_ID}               invoice_id\n\n*** Test Cases ***\nValidate Download And Print Invoice\n    [Documentation] Test case for testing the Download and Print Invoice functionality of the ManagePAY datadriver\n    Launch ManagePAY Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Select Invoice ${INVOICE_ID}\n    Download Invoice\n    Print Invoice\n    Validate Invoice Downloaded And Printed","211":"*** Settings ***\nDocumentation          Test cases for validating the user password reset through email functionality of the SecureAuth application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/secureauth\n${EMAIL_DETAILS}            email_details\n\n*** Test Cases ***\nValidate User Password Reset Through Email\n    [Documentation] Test case for validating the user password reset through email functionality of the SecureAuth application\n    Launch SecureAuth Application ${URL}\n    Navigate To Password Reset Page\n    Enter Email Details ${EMAIL_DETAILS}\n    Submit Password Reset Request\n    Validate Email Sent For Password Reset","212":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to process payment using expired credit card functionality of the FinPay datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/finpay\n${CUSTOMER_DETAILS}          customer_details\n${EXPIRED_CREDIT_CARD}       expired_credit_card_details\n${ERROR_MESSAGE}             credit_card_error_message\n\n*** Test Cases ***\nValidate Unable To Process Payment Using Expired Credit Card\n    [Documentation]    Test case for validating that the customer is unable to process payment using expired credit card functionality of the FinPay datadriver\n    Launch PayNow Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Payment Page\n    Enter Credit Card Details    ${EXPIRED_CREDIT_CARD}\n    Attempt To Process Payment\n    Validate Error Message Displayed    ${ERROR_MESSAGE}\n","213":"*** Settings ***\nDocumentation    Test cases for verifying that users can update their profile details on the MyAccount application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/myaccount\n${USER_DETAILS}              user_details\n\n*** Test Cases ***\nVerify Users Can Update Profile Details\n    [Documentation]    Test case for verifying that users can update their profile details on the MyAccount application\n    Launch MyAccount Application    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Navigate To Profile Section\n    Update Profile Details\n    Validate Profile Details Updated Successfully","214":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reschedule AutoPay for a future date functionality of the AutoPAY system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/autopay\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n${FUTURE_DATE}              2023-12-31\n\n*** Test Cases ***\nValidate Customer Is Able To Reschedule AutoPay For A Future Date\n    [Documentation] Test case for validating that the customer is able to reschedule AutoPay for a future date functionality of the AutoPAY system\n    Launch AutoPAY Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To AutoPay Section\n    Update AutoPay Date ${AUTOPAY_DETAILS} ${FUTURE_DATE}\n    Validate Reschedule Successful","215":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to reset password using registered email functionality of the PayRESET datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payreset\n${REGISTERED_EMAIL}         exampleuser@example.com\n${NEW_PASSWORD}             NewPassword123!\n${CONFIRM_PASSWORD}         NewPassword123!\n\n*** Test Cases ***\nValidate Customer Is Able To Reset Password Using Registered Email\n    [Documentation] Test case for validating that the customer is able to reset password using registered email functionality of the PayRESET datadriver\n    Launch PayReset Application ${URL}\n    Enter Registered Email ${REGISTERED_EMAIL}\n    Submit Reset Password Request\n    Open Password Reset Email\n    Click Reset Password Link\n    Enter New Password ${NEW_PASSWORD} ${CONFIRM_PASSWORD}\n    Submit New Password\n    Validate Password Reset Successful","216":"*** Settings ***\nDocumentation    Test cases for validating that the user can update personal information functionality of the MyApp system\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                  https:\/\/example.com\/myapp\n${USER_CREDENTIALS}     user_credentials\n${PERSONAL_INFO}        personal_info\n\n*** Test Cases ***\nValidate User Can Update Personal Information\n    [Documentation]    Test case for validating that the user can update personal information functionality of the MyApp system\n    Launch Application    ${URL}\n    Login To Application    ${USER_CREDENTIALS}\n    Navigate To Personal Information Page\n    Update Personal Information    ${PERSONAL_INFO}\n    Validate Personal Information Updated","217":"*** Settings ***\nDocumentation          Test cases for validating that customers can update their profile information in the UserPortal system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/userportal\n${CUSTOMER_DETAILS}         customer_details\n${PROFILE_UPDATE_DATA}      profile_update_data\n\n*** Test Cases ***\nValidate Customer Profile Update\n    [Documentation] Test case for validating that customers can update their profile information in the UserPortal system\n    Launch UserPortal Application ${URL}\n    Enter Customer Credentials ${CUSTOMER_DETAILS}\n    Navigate To Profile Page\n    Update Profile Information ${PROFILE_UPDATE_DATA}\n    Validate Profile Update Success","218":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to change email address in profile functionality of the MyAccount data driver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myaccount\n${USER_DETAILS}             user_details\n${NEW_EMAIL}                new_email\n\n*** Test Cases ***\nValidate Change Email Address In Profile\n    [Documentation] Test case for validating that the user is able to change email address in profile functionality of the MyAccount data driver\n    Launch MyAccount Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Profile Settings\n    Change Email Address To ${NEW_EMAIL}\n    Validate Email Address Changed To ${NEW_EMAIL}","219":"*** Settings ***\nDocumentation    Test cases for validating that the customer is unable to apply discount code for invoices that are already discounted functionality of the PaymentPlus datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paymentplus\n${CUSTOMER_DETAILS}          customer_details\n${DISCOUNT_CODE}             discount_code\n\n*** Test Cases ***\nValidate Customer Cannot Apply Discount Code For Already Discounted Invoices\n    [Documentation] Test case for validating that the customer is unable to apply discount code for invoices that are already discounted functionality of the PaymentPlus datadriver\n    Launch Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Invoice Page\n    Attempt To Apply Discount Code ${DISCOUNT_CODE}\n    Validate Discount Code Not Applied To Discounted Invoices","220":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update their billing address in the profile functionality of the AccountManagement system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/accountmanagement\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Can Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update their billing address in the profile functionality of the AccountManagement system\n    Launch Account Management Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Profile Settings\n    Enter New Billing Address ${NEW_BILLING_ADDRESS}\n    Save Billing Address Changes\n    Validate Billing Address Updated","221":"*** Settings ***\nDocumentation    Test cases for testing the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/paymentmanager\n${CUSTOMER_DETAILS}          customer_details\n${EXISTING_PAYMENT_METHOD}   existing_payment_method\n${NEW_PAYMENT_DETAILS}       new_payment_details\n\n*** Test Cases ***\nValidate Modification Of Existing Payment Method\n    [Documentation] Test case for validating that customers can modify their existing payment method details functionality of the PaymentManager datadriver\n    Launch PaymentManager Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Payment Methods Page\n    Select Existing Payment Method    ${EXISTING_PAYMENT_METHOD}\n    Modify Payment Method Details    ${NEW_PAYMENT_DETAILS}\n    Save Changes\n    Validate Payment Method Details Updated    ${NEW_PAYMENT_DETAILS}","222":"*** Settings ***\nDocumentation          Test cases for validating that the user is unable to reset password without security questions functionality of the SecureNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securenow\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate Unable To Reset Password Without Security Questions\n    [Documentation] Test case for validating that the user is unable to reset password without security questions functionality of the SecureNow datadriver\n    Launch SecureNow Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Attempt Password Reset Without Security Questions\n    Validate Password Reset Failure","223":"*** Settings ***\nDocumentation    Test cases for validating that a customer is unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                            https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}               customer_details\n${TRANSACTION_DATE_BEFORE_180D}   180_days_ago\n${TRANSACTION_ID}                 transaction_id\n\n*** Test Cases ***\nValidate Customer Unable To Process Refunds On Transactions Older Than 180 Days\n    [Documentation]    Test case for validating that a customer is unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Search For Transaction By Date ${TRANSACTION_DATE_BEFORE_180D}\n    Attempt To Process Refund ${TRANSACTION_ID}\n    Validate Refund Not Allowed","224":"*** Settings ***\nDocumentation          Test cases for validating that an admin user is able to create new user accounts in the UserManagement system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/usermanagement\n${ADMIN_LOGIN}              admin_login\n${NEW_USER_DETAILS}         new_user_details\n\n*** Test Cases ***\nValidate Admin User Can Create New User Accounts\n    [Documentation] Test case for validating that an admin user is able to create new user accounts in the UserManagement system\n    Launch UserManagement Application ${URL}\n    Admin Login ${ADMIN_LOGIN}\n    Navigate To Create New User Account Page\n    Enter New User Details ${NEW_USER_DETAILS}\n    Submit New User Account Form\n    Validate New User Account Created Successfully","225":"*** Settings ***\nDocumentation    Test cases for validating the functionality of user registration and login process for the 'QuickPay' application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/quickpay\n${BROWSER}       chrome\n${USER_DETAILS}  user_details\n\n*** Test Cases ***\nValidate User Registration And Login Process\n    [Documentation]    Test case for validating the functionality of user registration and login process for the 'QuickPay' application\n    Launch Browser    ${BROWSER}    ${URL}\n    Register New User    ${USER_DETAILS}\n    Validate User Registration Successful\n    Login With Registered User    ${USER_DETAILS}\n    Validate User Login Successful\n    Close Browser","226":"*** Settings ***\nDocumentation    Test cases for validating the successful order placement with multiple items in the ShoppingCart application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/shoppingcart\n${CUSTOMER_DETAILS}          customer_details\n${SHOPPING_CART_ITEMS}       shopping_cart_items\n${ORDER_CONFIRMATION}        order_confirmation\n\n*** Test Cases ***\nValidate Successful Order Placement With Multiple Items\n    [Documentation]    Test case for validating the successful order placement with multiple items in the ShoppingCart application\n    Launch ShoppingCart Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Add Items To Cart    ${SHOPPING_CART_ITEMS}\n    Proceed To Checkout\n    Confirm Order Placement\n    Validate Order Confirmation Received    ${ORDER_CONFIRMATION}","227":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to generate monthly financial reports functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Monthly Financial Reports Generation\n    [Documentation] Test case for validating that the customer is able to generate monthly financial reports functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Generate Monthly Financial Reports\n    Validate Financial Reports Generated","228":"*** Settings ***\nDocumentation          Test case for validating that the customer is able to update the shipping address while checking out functionality of the ShopNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopnow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_SHIPPING_ADDRESS}     new_shipping_address\n\n*** Test Cases ***\nValidate Update Shipping Address While Checkout\n    [Documentation] Test case for validating that the customer is able to update the shipping address while checking out functionality of the ShopNow datadriver\n    Launch ShopNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Checkout Page\n    Update Shipping Address ${NEW_SHIPPING_ADDRESS}\n    Validate Shipping Address Updated","229":"*** Settings ***\nDocumentation    Test cases for validating customer login functionality using two-factor authentication in the SecurePay application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                     https:\/\/example.com\/securepay\n${CUSTOMER_DETAILS}         customer_details\n${TWO_FA_CODE}              two_fa_code\n\n*** Test Cases ***\nValidate Customer Login Using Two-Factor Authentication\n    [Documentation]    Test case for validating that the customer login functionality works with two-factor authentication in the SecurePay application    \n    Launch SecurePay Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Click Login Button\n    Enter Two-Factor Authentication Code    ${TWO_FA_CODE}\n    Validate Successful Login","230":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to receive payment confirmation email functionality of the PayNOW app\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PAYMENT_DETAILS}          payment_details\n${EXPECTED_EMAIL}           email@example.com\n\n*** Test Cases ***\nValidate Customer Ability To Receive Payment Confirmation Email\n    [Documentation] Test case for validating that the customer is able to receive payment confirmation email functionality of the PayNOW app\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Make Payment ${PAYMENT_DETAILS}\n    Validate Payment Confirmation Email Sent ${EXPECTED_EMAIL}","231":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the BillTech datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billtech\n${CUSTOMER_DETAILS}         customer_details\n${BILLING_ADDRESS_DETAILS}  billing_address_details\n\n*** Test Cases ***\nValidate Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the BillTech datadriver\n    Launch BillTech Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Account Settings\n    Update Billing Address ${BILLING_ADDRESS_DETAILS}\n    Validate Billing Address Updated","232":"*** Settings ***\nDocumentation          Test cases for validating customer being unable to update expired credit card functionality in the PayFLOW application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payflow\n${CUSTOMER_DETAILS}         customer_details\n${EXPIRED_CARD_DETAILS}     expired_card_details\n${ERROR_MESSAGE}            expired_card_details.Error_Message\n\n*** Test Cases ***\nValidate Unable To Update Expired Credit Card\n    [Documentation] Test case for validating customer being unable to update expired credit card functionality in the PayFLOW application\n    Launch PayFlow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Expired Credit Card Details ${EXPIRED_CARD_DETAILS}\n    Attempt To Update Credit Card\n    Validate Error Message Displayed ${ERROR_MESSAGE}\n    Verify Card Not Updated","233":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update their profile information functionality of the PayNOW application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${PROFILE_DETAILS}          profile_details\n\n*** Test Cases ***\nValidate Update Profile Information\n    [Documentation] Test case for validating that the customer is able to update their profile information functionality of the PayNOW application\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Profile Page\n    Update Profile Information ${PROFILE_DETAILS}\n    Submit Profile Updates\n    Validate Profile Information Updated","234":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to override default tax calculation functionality of the ShopEZ datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopez\n${MERCHANT_DETAILS}         merchant_details\n${TAX_DETAILS}              tax_details\n\n*** Test Cases ***\nValidate Merchant Is Able To Override Default Tax Calculation\n    [Documentation] Test case for validating that the merchant is able to override default tax calculation functionality of the ShopEZ datadriver\n    Launch ShopEZ Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Override Default Tax Calculation ${TAX_DETAILS}\n    Validate Tax Calculation Overridden","235":"*** Settings ***\nDocumentation          Test cases for validating that the user can update profile information functionality of the eBanking platform\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/ebanking\n${USER_LOGIN_DETAILS}       user_login_details\n${PROFILE_UPDATE_DETAILS}   profile_update_details\n\n*** Test Cases ***\nValidate User Can Update Profile Information\n    [Documentation] Test case for validating that the user can update profile information functionality of the eBanking platform\n    Launch eBanking Platform ${URL}\n    Login To eBanking Platform ${USER_LOGIN_DETAILS}\n    Navigate To Profile Update Section\n    Update Profile Information ${PROFILE_UPDATE_DETAILS}\n    Save Profile Information\n    Validate Profile Information Updated","236":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to view transactions without logging in functionality of the FinanceApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/financeapp\n${INVALID_SESSION}          invalid_session_details\n\n*** Test Cases ***\nValidate Unable To View Transactions Without Logging In\n    [Documentation] Test case for validating that the customer is unable to view transactions without logging in functionality of the FinanceApp datadriver\n    Launch FinanceApp Application ${URL}\n    Attempt To View Transactions Without Logging In ${INVALID_SESSION}\n    Validate Unable To View Transactions","237":"*** Settings ***\nDocumentation          Test cases for validating that customers can update personal information in their profile functionality of the MyProfile data driver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myprofile\n${CUSTOMER_PROFILE_DETAILS} update_profile_details\n\n*** Test Cases ***\nValidate Customer Can Update Personal Information\n    [Documentation] Test case for validating that customers can update personal information in their profile functionality of the MyProfile data driver\n    Launch MyProfile Application ${URL}\n    Enter Customer Profile Details ${CUSTOMER_PROFILE_DETAILS}\n    Update Personal Information\n    Validate Personal Information Updated","238":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to book an appointment with an unavailable doctor using the Book Appointment feature of the HealthCare App\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/healthcare\n${CUSTOMER_DETAILS}         customer_details\n${UNAVAILABLE_DOCTOR}      unavailable_doctor\n\n*** Test Cases ***\nValidate Unable To Book Appointment With Unavailable Doctor\n    [Documentation] Test case for validating that the customer is unable to book an appointment with an unavailable doctor using the Book Appointment feature of the HealthCare App\n    Launch HealthCare Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Book Appointment With Unavailable Doctor ${UNAVAILABLE_DOCTOR}\n    Validate Booking Failure","239":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to process payment without providing customer ID functionality of the QuickPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${MERCHANT_DETAILS}         merchant_details\n${PAYMENT_DETAILS}          payment_details\n\n*** Test Cases ***\nValidate Merchant Unable To Process Payment Without Customer ID\n    [Documentation] Test case for validating that the merchant is unable to process payment without providing customer ID functionality of the QuickPay datadriver\n    Launch QuickPay Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Leave Customer ID Empty\n    Attempt Process Payment ${PAYMENT_DETAILS}\n    Validate Payment Not Processed","240":"*** Settings ***\nDocumentation          Test cases for validating the generation of monthly user activity report functionality of the ReportMaster datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/reportmaster\n${USER_DETAILS}             user_details\n${REPORT_DETAILS}           report_details\n\n*** Test Cases ***\nValidate Generate Monthly User Activity Report\n    [Documentation] Test case for validating the generation of monthly user activity report functionality of the ReportMaster datadriver\n    Launch ReportMaster Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Generate Monthly User Activity Report ${REPORT_DETAILS}\n    Validate Monthly User Activity Report Generated","241":"*** Settings ***\nDocumentation    Test cases for validating that the user is unable to login with invalid credentials functionality of the BankNOW application\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}           https:\/\/example.com\/banknow\n${INVALID_USERNAME}    invalid_user\n${INVALID_PASSWORD}    invalid_pass\n${ERROR_MESSAGE}       Invalid username or password\n\n*** Test Cases ***\nValidate User Unable To Login With Invalid Credentials\n    [Documentation]    Test case for validating that the user is unable to login with invalid credentials functionality of the BankNOW application\n    Launch Browser    chrome    ${URL}\n    Input Text    id=username_input    ${INVALID_USERNAME}\n    Input Text    id=password_input    ${INVALID_PASSWORD}\n    Click Button    id=login_button\n    Wait Until Element Is Visible    id=error_message    10s\n    Element Text Should Be    id=error_message    ${ERROR_MESSAGE}\n    Close Browser","242":"*** Settings ***\nDocumentation          Test cases for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/clientportal\n${CUSTOMER_DETAILS_INITIAL} initial_customer_details\n${CUSTOMER_DETAILS_UPDATED} updated_customer_details\n\n*** Test Cases ***\nValidate Edit Customer Details\n    [Documentation] Test case for testing the ability to edit customer details including name, address, and phone number functionality of the ClientPortal\n    Launch ClientPortal Application ${URL}\n    Enter Initial Customer Details ${CUSTOMER_DETAILS_INITIAL}\n    Navigate To Edit Customer Details Page\n    Update Customer Details ${CUSTOMER_DETAILS_UPDATED}\n    Validate Customer Details Updated","243":"*** Settings ***\nDocumentation          Test cases for validating that the customer can change and update billing address functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Change and Update Billing Address\n    [Documentation] Test case for validating that the customer can change and update billing address functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Section\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Save Changes\n    Validate Billing Address Updated","244":"*** Settings ***\nDocumentation          Test cases for validating that the customer can update their billing address functionality of the EasyBill system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/easybill\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Can Update Billing Address\n    [Documentation] Test case for validating that the customer can update their billing address functionality of the EasyBill system\n    Launch EasyBill Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To Billing Address Page\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","245":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to create recurring payment for expired card functionality of the TransactX system\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/transactx\n${CUSTOMER_DETAILS}         customer_details\n${EXPIRED_CARD_DETAILS}     expired_card_details\n\n*** Test Cases ***\nValidate Unable To Create Recurring Payment For Expired Card\n    [Documentation] Test case for validating that the customer is unable to create recurring payment for expired card functionality of the TransactX system\n    Launch TransactX Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt Create Recurring Payment With Expired Card ${EXPIRED_CARD_DETAILS}\n    Validate Unable To Create Recurring Payment","246":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to modify saved AutoPay schedule functionality of the BillNow datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billnow\n${CUSTOMER_DETAILS}         customer_details\n${AUTOPAY_DETAILS}          autopay_details\n\n*** Test Cases ***\nValidate Modify Saved AutoPay Schedule\n    [Documentation] Test case for validating that the customer is able to modify saved AutoPay schedule functionality of the BillNow datadriver\n    Launch BillNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Navigate To AutoPay Schedule\n    Modify Saved AutoPay Schedule ${AUTOPAY_DETAILS}\n    Validate AutoPay Schedule Modified","247":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password via email functionality of the SecurePAY datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securepay\n${USER_EMAIL}               user@example.com\n${RESET_LINK}               reset_link\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate Reset Password Via Email\n    [Documentation] Test case for validating that the user is able to reset password via email functionality of the SecurePAY datadriver\n    Launch SecurePAY Application ${URL}\n    Navigate To Forgot Password Page\n    Enter User Email ${USER_EMAIL}\n    Submit Password Reset Request\n    Open Reset Link From Email ${RESET_LINK}\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Verify Password Reset Successful","248":"*** Settings ***\nDocumentation    Test cases for validating the User Is Able To Change Password functionality of the SecurePay datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}             https:\/\/example.com\/securepay\n${USER_DETAILS}    user_details\n${OLD_PASSWORD}    old_password\n${NEW_PASSWORD}    new_password\n\n*** Test Cases ***\nValidate User Is Able To Change Password Functionality Of SecurePay\n    [Documentation]  Test case for validating the User Is Able To Change Password functionality of the SecurePay datadriver\n    Launch SecurePay Application ${URL}\n    Login With Old Password ${USER_DETAILS} ${OLD_PASSWORD}\n    Navigate To Change Password Page\n    Enter Old Password ${OLD_PASSWORD}\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit Password Change\n    Validate Password Change Successful\n    Logout From SecurePay\n    Login With New Password ${USER_DETAILS} ${NEW_PASSWORD}\n    Validate Login Successful","249":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to download payment receipt as PDF from the PayNOW portal\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Download Payment Receipt As PDF\n    [Documentation] Test case for validating that the customer is able to download payment receipt as PDF from the PayNOW portal\n    Launch PayNow Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Access Payment History\n    Download Payment Receipt As PDF\n    Validate Receipt Downloaded As PDF","250":"*** Settings ***\nDocumentation          Test cases for validating that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/payexpress\n${CUSTOMER_DETAILS}         customer_details\n${INVOICE_DETAILS}          invoice_details\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate No Duplicate Transactions For Same Invoice\n    [Documentation] Test case for validating that customers cannot duplicate transactions for the same invoice using the PayEXPRESS datadriver\n    Launch PayExpress Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Invoice Details ${INVOICE_DETAILS}\n    Process Transaction ${TRANSACTION_DETAILS}\n    Attempt Duplicate Transaction ${TRANSACTION_DETAILS}\n    Validate Duplicate Transaction Prevented","251":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction details on the dashboard functionality of the CommerceHub datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/commercehub\n${MERCHANT_DETAILS}         merchant_details\n${TRANSACTION_DETAILS}      transaction_details\n\n*** Test Cases ***\nValidate Merchant Can View Transaction Details On Dashboard\n    [Documentation] Test case for validating that the merchant is able to view transaction details on the dashboard functionality of the CommerceHub datadriver\n    Launch CommerceHub Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Dashboard\n    Validate Transaction Details Displayed ${TRANSACTION_DETAILS}\n    Close Browser","252":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to edit submitted payment requests functionality of the QuickPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/quickpay\n${MERCHANT_DETAILS}         merchant_details\n${SUBMITTED_PAYMENT_REQUEST}    submitted_payment_request\n\n*** Test Cases ***\nValidate Merchant Unable To Edit Submitted Payment Requests\n    [Documentation] Test case for validating that the merchant is unable to edit submitted payment requests functionality of the QuickPay datadriver\n    Launch QuickPay Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Submitted Payment Request ${SUBMITTED_PAYMENT_REQUEST}\n    Attempt To Edit Payment Request\n    Validate Edit Not Allowed","253":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to update billing address functionality of the BillPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billpay\n${CUSTOMER_DETAILS}         customer_details\n${NEW_BILLING_ADDRESS}      new_billing_address\n\n*** Test Cases ***\nValidate Customer Is Able To Update Billing Address\n    [Documentation] Test case for validating that the customer is able to update billing address functionality of the BillPay datadriver\n    Launch BillPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Billing Address ${NEW_BILLING_ADDRESS}\n    Validate Billing Address Updated","254":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process payment without entering correct security code functionality of the EasyPay datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/easypay\n${CUSTOMER_DETAILS}         customer_details\n${INCORRECT_SECURITY_CODE}  incorrect_security_code\n\n*** Test Cases ***\nValidate Unable To Process Payment Without Correct Security Code\n    [Documentation] Test case for validating that the customer is unable to process payment without entering correct security code functionality of the EasyPay datadriver\n    Launch EasyPay Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Attempt To Process Payment Without Security Code\n    Validate Unable To Process Payment\n    Enter Incorrect Security Code ${INCORRECT_SECURITY_CODE}\n    Attempt To Process Payment\n    Validate Unable To Process Payment","255":"*** Settings ***\nDocumentation          Test cases for testing the ability to update customer profile details functionality of the AccountManager module\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/account-manager\n${CUSTOMER_DETAILS}         customer_details\n${UPDATED_DETAILS}          updated_details\n\n*** Test Cases ***\nValidate Update Customer Profile Details\n    [Documentation] Test case for testing the ability to update customer profile details functionality of the AccountManager module\n    Launch AccountManager Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Update Customer Profile ${UPDATED_DETAILS}\n    Validate Profile Updated Successfully","256":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to export transaction history without date range functionality of the FinancialApp\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/financialapp\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Merchant Unable To Export Transaction History Without Date Range\n    [Documentation] Test case for validating that the merchant is unable to export transaction history without date range functionality of the FinancialApp\n    Launch FinancialApp Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Attempt To Export Transaction History Without Date Range\n    Validate Export Transaction History Failed","257":"*** Settings ***\nDocumentation    Test cases for validating a customer's ability to view detailed transaction history within the last six months in the Transacto app\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/transacto\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Customer Can View Detailed Transaction History Within Last Six Months\n    [Documentation]    Test case for validating a customer's ability to view detailed transaction history within the last six months in the Transacto app\n    Launch Transacto Application    ${URL}\n    Enter Customer Details    ${CUSTOMER_DETAILS}\n    Navigate To Transaction History Section\n    Select Date Range As Last Six Months\n    View Detailed Transaction History\n    Validate Detailed Transaction History Displayed","258":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to reset password via email functionality of the MyPaymentApp datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/mypaymentapp\n${USER_EMAIL}               user_email\n${NEW_PASSWORD}             new_password\n\n*** Test Cases ***\nValidate User Is Able To Reset Password Via Email\n    [Documentation] Test case for validating that the user is able to reset password via email functionality of the MyPaymentApp datadriver\n    Launch MyPaymentApp Application ${URL}\n    Click On Forgot Password Link\n    Enter User Email ${USER_EMAIL}\n    Submit Password Reset Request\n    Validate Password Reset Email Received ${USER_EMAIL}\n    Open Password Reset Link From Email ${USER_EMAIL}\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${NEW_PASSWORD}\n    Submit New Password\n    Validate Password Successfully Reset","259":"*** Settings ***\nDocumentation          Test cases for validating that the customer is able to change password functionality of the SecureLogin datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/securelogin\n${CUSTOMER_DETAILS}         customer_details\n${OLD_PASSWORD}             old_password\n${NEW_PASSWORD}             new_password\n${CONFIRM_PASSWORD}         confirm_password\n\n*** Test Cases ***\nValidate Customer Is Able To Change Password Functionality\n    [Documentation] Test case for validating that the customer is able to change password functionality of the SecureLogin datadriver\n    Launch SecureLogin Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Enter Old Password ${OLD_PASSWORD}\n    Enter New Password ${NEW_PASSWORD}\n    Confirm New Password ${CONFIRM_PASSWORD}\n    Submit Change Password Request\n    Validate Password Change Success Message","260":"*** Settings ***\nDocumentation          Test cases for validating that users are unable to update their profile without entering a valid email address on the Profile Update page\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/profile-update\n${USER_DETAILS}             user_details\n\n*** Test Cases ***\nValidate Profile Update Without Valid Email Address\n    [Documentation] Test case for validating that users are unable to update their profile without entering a valid email address on the Profile Update page\n    Launch Profile Update Page ${URL}\n    Enter User Details Without Valid Email ${USER_DETAILS}\n    Attempt To Save Profile Updates\n    Validate Error Message For Invalid Email","261":"*** Settings ***\nDocumentation          Test cases for validating that users are unable to reset their password without providing a valid email address in the MyPortal application\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/myportal\n${INVALID_EMAIL}            invalid_email\n\n*** Test Cases ***\nValidate Password Reset Without Valid Email\n    [Documentation] Test case for validating that users are unable to reset their password without providing a valid email address in the MyPortal application\n    Launch MyPortal Application ${URL}\n    Navigate To Password Reset Page\n    Enter Invalid Email ${INVALID_EMAIL}\n    Submit Password Reset Request\n    Validate Password Reset Fails Due To Invalid Email","262":"*** Settings ***\nDocumentation    Test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver\nLibrary          SeleniumLibrary\n\n*** Variables ***\n${URL}                       https:\/\/example.com\/ecommerce\n${USER_DETAILS}              user_details\n${NEW_ADDRESS_DETAILS}       new_address_details\n\n*** Test Cases ***\nValidate Addition Of New Address To Shipping Address Book\n    [Documentation]    Test case for testing the addition of a new address to the user's shipping address book functionality of the Ecommerce datadriver\n    Launch Ecommerce Application    ${URL}\n    Enter User Details    ${USER_DETAILS}\n    Navigate To Shipping Address Book\n    Add New Address    ${NEW_ADDRESS_DETAILS}\n    Validate New Address Added Successfully","263":"*** Settings ***\nDocumentation          Test cases for validating that the customer is unable to process refund for closed account functionality of the PayNEL datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynel\n${CUSTOMER_DETAILS}         customer_details\n${ACCOUNT_STATUS}           closed\n\n*** Test Cases ***\nValidate Unable To Process Refund For Closed Account\n    [Documentation] Test case for validating that the customer is unable to process refund for closed account functionality of the PayNEL datadriver\n    Launch PayNEL Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Verify Account Status ${ACCOUNT_STATUS}\n    Attempt Process Refund\n    Validate Refund Not Processed","264":"*** Settings ***\nDocumentation          Test cases for validating the retrieval of order history for a specific customer in the ShopFast datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/shopfast\n${CUSTOMER_DETAILS}         customer_details\n\n*** Test Cases ***\nValidate Order History Retrieval\n    [Documentation] Test case for validating the retrieval of order history for a specific customer in the ShopFast datadriver\n    Launch ShopFast Application ${URL}\n    Enter Customer Details ${CUSTOMER_DETAILS}\n    Retrieve Order History\n    Validate Order History Details","265":"*** Settings ***\nDocumentation          Test cases for validating that the user is able to change email notifications settings functionality of the BillMaster datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/billmaster\n${USER_DETAILS}             user_details\n${NOTIFICATION_SETTINGS}    notification_settings\n\n*** Test Cases ***\nValidate Change Email Notifications Settings\n    [Documentation] Test case for validating that the user is able to change email notifications settings functionality of the BillMaster datadriver\n    Launch BillMaster Application ${URL}\n    Enter User Details ${USER_DETAILS}\n    Navigate To Notification Settings\n    Change Email Notifications Settings ${NOTIFICATION_SETTINGS}\n    Validate Email Notifications Settings Updated"},"Description":{"0":"This test case checks the validation for the ability of a customer to receive payment reminders functionality of the BillPro system.","1":"This test case checks the validation for updating billing information functionality of the BillNOW datadriver.","2":"This test case checks the validation to ensure the system properly restricts payments to the defined maximum allowable limit functionality of the PayNOW datadriver.","3":"This test case checks the validation for restricting access to premium features when the user has a basic subscription on the MyService platform.","4":"This test case checks the validation for updating personal information functionality of the MyAccount datadriver.","5":"This test case checks the validation for being unable to add duplicate email addresses in the customer profile of the MyPay system.","6":"This test case ensures that a customer is able to successfully update their billing address details within the PremiumPay service.","7":"This test case checks the validation for updating payment method information functionality of the PayNOW datadriver.","8":"This test case checks the validation for being unable to reset the password with an invalid email address functionality of the PayLATER datadriver.","9":"This test case checks the validation for being unable to download receipt without providing an email functionality of the BillPay datadriver.","10":"This test case checks the validation for being unable to create a weekly AutoPay schedule for an invalid account functionality of the PayAuto service.","11":"This test case checks the validation for updating the billing address functionality of the PayNOW datadriver.","12":"This test case checks the validation for setting up recurring payments on a weekly basis functionality of the PayNOW datadriver.","13":"This test case checks the validation for updating payment method details functionality of the PayMATE datadriver.","14":"This test case checks the validation for ensuring customers receive a payment confirmation email after completing a transaction using the EZCheckout driver.","15":"This test case checks the validation for user navigation to the contact support page functionality of the AppNOW application.","16":"This test case checks the validation for adding a new address during the checkout process functionality of the ShopNOW datadriver.","17":"This test case checks the validation for the user registration functionality of the ShopEZ datadriver.","18":"This test case checks the validation for downloading and printing invoices functionality of the PayNOW datadriver.","19":"This test case checks the validation for viewing the customer's account balance immediately after the user logs into the BankApp app.","20":"This test case checks the validation for being unable to apply a discount code once it has expired functionality of the ShopEasy datadriver.","21":"This test case checks the validation for the admin's ability to generate monthly reporting functionality of the CommerceX datadriver.","22":"This test case checks the validation for opting in for monthly email invoices feature of the InvoicePortal datadriver.","23":"This test case ensures that a user is unable to exceed the maximum number of login attempts after entering multiple invalid passwords in the OnlineBank module.","24":"This test case checks the validation for adding a new item to the customer's wishlist functionality on the eCommerce site.","25":"This test case checks the validation for successfully registering a user with valid credentials functionality of the QuickPay platform.","26":"This test case checks the validation for being unable to transfer funds between accounts when one account balance is negative functionality of the MyBank datadriver.","27":"This test case checks the validation for updating bank account details functionality of the Financial App platform.","28":"This test case checks the validation for being unable to register with an invalid email address in the registration functionality of the DefSecure application.","29":"This test case checks the validation for retrieving a forgotten password functionality of the ResetPassword datadriver.","30":"This test case checks the validation for being unable to update personal details without confirmation functionality of the UserProfileManager.","31":"This test case checks the validation for successfully logging out from the BillingNow data application.","32":"This test case checks the validation for incorrect username\/password behavior functionality of the SecurePay datadriver.","33":"This test case validates the login functionality when a user tries to log in with an expired password on the MyPay application.","34":"This test case validates the functionality of generating a monthly report that consolidates all transactions performed by the user in that month on the platform.","35":"This test case checks the validation for ensuring shipping tracking information is accurately updated for orders shipped through FedEx functionality of the OrderNow datadriver.","36":"This test case checks the validation for being unable to view payment history functionality of the InvoiceNOW datadriver.","37":"This test case validates the functionality allowing users to view detailed transaction history on the Transactions page, ensuring all elements are correctly displayed and can be interacted with.","38":"This test case verifies that the user account gets locked after multiple failed login attempts as part of the SecureBanking datadriver functionality.","39":"This test case checks the validation for being unable to sign in with an incorrect password functionality of the LoginService.","40":"This test case checks the validation for user registration with email verification functionality of the SignUp module.","41":"This test case checks the validation for being able to reset password through email functionality of the PayNOW datadriver.","42":"This test case checks the validation for updating personal information functionality of the UserProfile datadriver.","43":"This test case ensures that a customer is able to successfully update their personal profile information, including name, address, email, and phone number, through the MightyPay datadriver.","44":"This test case checks the validation for updating personal information from the profile page functionality of the NewApp datadriver.","45":"This test case checks the validation for waiving transaction fees when using government-issued debit cards in the ServiceX system.","46":"This test case checks the validation for being able to update personal information functionality of the MyAccount manager.","47":"This test case checks the validation for allowing the customer to apply a promotional code during the checkout process via the PayNow datadriver.","48":"This test case checks the validation for being unable to reset password using an invalid email in the SecureNOW application.","49":"This test case checks the validation for being unable to subscribe to the monthly plan without providing a credit card functionality of the PremiumSubscription system.","50":"This test case checks the validation for user registration with email verification functionality of the SignUp system.","51":"This test case checks the validation for updating billing information for an existing account functionality of the BillFast system.","52":"This test case checks the validation for user being unable to register a new account using an already registered email functionality of the UserAccount datadriver.","53":"This test case checks the validation for updating saved credit card details functionality of the PayLater datadriver.","54":"This test case checks the validation for offering a discount for early payments functionality of the PayFIRST datadriver.","55":"This test case verifies the function that allows customers to update their profile information including email, password, and contact details in the MyAccount datadriver.","56":"This test case checks the validation for being unable to cancel a confirmed payment functionality of the MyAccount datadriver.","57":"This test case checks the validation for user registration using a valid email address in the MyApp datadriver.","58":"This test case checks the validation for ensuring that users cannot access premium features without an active subscription on the MyService platform.","59":"This test case checks the validation for adding a new payment method functionality of the QuickPay application.","60":"This test case checks the validation for updating user profile information functionality of the MyBankApp datadriver.","61":"This test case checks the validation for the user's ability to reset their password by receiving and confirming an email verification code in the GoUnified system.","62":"This test case checks the validation for notifying customers about upcoming payments functionality of the PayNOW datadriver.","63":"This test case checks the validation for user registration with both valid and invalid Email Address functionality of the MyCompany platform.","64":"This test case checks the validation for user being unable to reset password with an invalid email address functionality of the SecureLogin system.","65":"This test case checks the validation for being unable to place an order with an expired credit card functionality of the Checkout process.","66":"This test case checks the validation for paying multiple invoices using different payment methods functionality of the SuperPay datadriver.","67":"This test case checks the validation for downloading the transaction report in CSV format on the payment portal functionality.","68":"This test case checks the validation for user login with an incorrect password functionality of the CompanyPortal system.","69":"This test case checks the validation for being unable to schedule a same-day payment transfer functionality of the BANKPAY system.","70":"This test case verifies if the customer can successfully reset their password by using the 'Forgot Password' link and following the provided steps on the ShopOnline platform.","71":"This test case checks the validation for updating the billing address functionality of the SuperPay datadriver.","72":"This test case checks the validation for editing payment details after scheduling a payment functionality of the PayBuddy system.","73":"This test case checks the validation for updating saved credit card details functionality of the PayNOW datadriver.","74":"This test case checks the validation for changing the invoice due date functionality of the MerchEasy payment system.","75":"This test case verifies the ability of a customer to modify their shipping address before confirming an order on the ShopNow platform.","76":"This test case checks the validation for resetting the password using a registered email functionality of the MyBankNow application.","77":"This test case checks the validation for updating customer information functionality of the PayNOW datadriver.","78":"This test case checks the validation for ensuring a user is unable to update sensitive information without proper authentication in the DataSecure system.","79":"This test case checks the validation for saving a preferred shipping address in the customer account functionality of the ShopMaster datadriver.","80":"This test case checks the validation for user login with invalid credentials functionality of the PayOnTime datadriver.","81":"This test case checks the validation for updating billing information functionality of the PayNOW datadriver.","82":"This test case checks the validation for customer authorization workflow functionality within the SecurePay application, ensuring customers can authorize their accounts correctly.","83":"This test case checks the validation for updating profile information such as name, email, and address in the user settings module.","84":"This test case checks the validation for resetting password after failed login attempts functionality of the PayLATER datadriver.","85":"This test case checks the validation for applying and calculating discounts using coupons in the shopping cart functionality of the OnlineStore system.","86":"This test case checks the validation for user registration with valid credentials functionality of the RegisterNow datadriver.","87":"This test case checks the validation for user registration with valid credentials functionality of the MobileApp datadriver.","88":"This test case checks the validation that prevents customers from proceeding with payment if they haven't provided the CVV number when using a credit card functionality.","89":"This test case checks the validation for being able to upload documents for an invoice functionality of the InvoiceManager datadriver.","90":"This test case checks the validation for applying discount coupon functionality of the PayNOW datadriver.","91":"This test case verifies the ability to filter transactions based on various payment types (Credit Card, Debit Card, ACH, etc.) for customers using the ECommerce portal.","92":"This test case checks the validation for tracking refund status in the customer account functionality of the PayNOW datadriver.","93":"This test case checks the validation for updating the payment method for a recurring payment functionality of the DirectPAY datadriver.","94":"This test case checks the validation for creating and saving recurring payments functionality of the PayTECH datadriver.","95":"This test case checks the validation for exporting transaction reports as CSV functionality of the ExportMagic datadriver.","96":"This test case checks the validation for resetting the user password functionality of the SecurePay service.","97":"This test case checks the validation for resetting user password functionality of the PayNOW datadriver.","98":"This test case checks the validation for being able to reset the password through the Account Management system.","99":"This test case checks the validation for updating the contact information (email, phone number, address) functionality of the PayNOW datadriver.","100":"This test case checks the validation for being unable to delete an account that has an outstanding balance functionality of the FinanceApp datadriver.","101":"This test case checks the validation for user authentication with two-factor authentication (2FA) functionality of the SecureAuthApp datadriver.","102":"This test case checks the validation for being unable to schedule payments for invoices that are older than one year in the PayRepay application.","103":"This test case checks the validation for updating contact information functionality of the AccountManager datadriver.","104":"This test case checks the validation for updating an existing payment method functionality of the BillNow datadriver.","105":"This test case validates if a customer is able to update their profile information such as name, email, and address details within the account management section of the FoodNow application.","106":"This test case checks the validation for resetting password using email functionality of the UserManagementSystem.","107":"This test case checks the validation for resetting the password functionality of the PayFast datadriver.","108":"This test case checks the validation for creating recurring payments for weekly invoices functionality of the BillNow datadriver.","109":"This test case checks the validation for a successful login followed by viewing the account balance functionality in the Bank Transactions system.","110":"This test case checks the validation for applying a custom discount offer during the checkout process functionality of the QuickPay system.","111":"This test case checks the validation for the ability to split a payment across multiple invoices functionality of the PaymentSystem datadriver.","112":"This test case checks the validation for users being unable to register a new account with an email address that is already used by another account.","113":"This test case checks the validation for viewing available balance before making payment functionality of the PayNOW datadriver by a non-integrated customer.","114":"This test case checks the validation for being unable to reset password with an invalid email ID functionality of the PayNOW datadriver.","115":"This test case checks the validation for the user registration process, including email confirmation, on the MyApp application.","116":"This test case checks the validation for resetting the user password via email functionality of the SecureBank platform.","117":"This test case checks the validation for being unable to process payment with an expired credit card functionality of the SecurePay datadriver.","118":"This test case checks the validation for updating billing information after a payment has been processed in the PayNOW datadriver.","119":"This test case checks the validation for generating weekly sales reports functionality of the PayNOW datadriver.","120":"This test case checks the validation for applying a discount code during the checkout process functionality of the BillingNow module.","121":"This test case checks the validation to ensure customers can update their registered email address in the Digipay application.","122":"This test case checks the validation for creating a new user account functionality of the MyApp datadriver.","123":"This test case verifies that the customer receives an email notification after successfully completing a payment using the PayFORWARD datadriver.","124":"This test case checks the validation for updating account information functionality of the BankPro datadriver.","125":"This test case checks the validation for resetting the password using the forgot password functionality in the MyBank application.","126":"This test case validates the functionality to lock a user account after multiple failed login attempts on the SecurePay system.","127":"This test case checks the validation for the user's ability to reset their password using the Forgot Password link in the MyAccount portal.","128":"This test case checks the validation for updating billing address functionality of the EcomPAY datadriver.","129":"This test case checks the validation for applying a discount code during the checkout workflow functionality of the ShopEasy datadriver.","130":"This test case checks the validation for restricting access to transaction summary for customers without required permissions functionality of the ShopEasy application.","131":"This test case checks the validation for being unable to schedule recurring payments on holidays functionality of the EasyPay datadriver.","132":"This test case checks the validation for setting up recurring payments functionality of the BillPay datadriver.","133":"This test case checks the validation for applying a discount code during the checkout process functionality of the ShopEasy datadriver.","134":"This test case checks the validation for being unable to schedule a recurring payment with an expired card functionality of the QuickPay system.","135":"This test case checks the validation for receiving an error message when a user enters an invalid email address in the Signup form functionality of the MyApp datadriver.","136":"This test case validates the enforcement of a secure password policy for new user registrations, ensuring the password meets criteria such as length, complexity, and the inclusion of special characters on the SecureAuth platform.","137":"This test case verifies the functionality of adding items to the shopping cart in the eShop application.","138":"This test case checks validation for ensuring that the customer is able to view the payment summary page properly in the InvoiceHub datadriver.","139":"This test case checks the validation for customer being able to create subscription for recurring orders functionality of the ShopSmart datadriver.","140":"This test case checks the validation for updating profile information functionality of the ProfileManager system.","141":"This test case checks the validation for ensuring a customer cannot add more than three recipients to an invoice functionality of the PayLater datadriver.","142":"This test case checks the validation for being unable to add a bank account without providing the routing number functionality of the OmniBank datadriver.","143":"This test case checks the validation for updating the billing address functionality of the PaymentPortal.","144":"This test case verifies that customers cannot make payments exceeding their predefined limits in the PayEASY system.","145":"This test case checks the validation for saving a payment method as the default payment method functionality of the PayGLOBAL datadriver.","146":"This test case checks the validation for being unable to reset password without entering a valid email functionality of the SecureAccess datadriver.","147":"This test case checks the validation for updating profile information functionality of the AccountManager system.","148":"This test case checks the validation for successful login using valid credentials functionality of the BankApp system.","149":"This test case checks the validation for being unable to schedule payment for expired invoices functionality of the BillPay datadriver.","150":"This test case checks the validation for being unable to exceed the transaction limit functionality of the QuickPay datadriver.","151":"This test case checks the validation for generating monthly financial reports by merchants functionality of the FinSERV datadriver.","152":"This test case checks the validation for resetting password through email functionality of the SecureApp datadriver.","153":"This test case checks the validation for user being unable to register with an invalid email address functionality of the MyApp datadriver.","154":"This test case checks the validation for being unable to add items to the cart that are out of stock functionality of the eCommerceWebapp.","155":"This test case checks the functionality that allows customers to view the exact due amount for each itemized invoice in the Billing Overview section of the MyAccount application.","156":"This test case verifies the customer's ability to successfully update the payment method details in the PaymentGateway datadriver.","157":"This test case checks the validation for being unable to reset password with an invalid email address in the SecureAccess module.","158":"This test case checks the validation for preventing user login using an expired session token functionality of the e-commerce platform.","159":"This test case checks the validation for viewing the list of upcoming orders functionality of the OrderManagement System.","160":"This test case checks the validation for user registration with both valid and invalid data functionality of the PayNOW datadriver.","161":"This test case checks the validation for a user being able to successfully change their password functionality of the MyBanking application.","162":"This test case checks the validation for preventing payment when the outstanding amount exceeds the customer's set credit limit functionality of the EasyPay system.","163":"This test case checks the validation for being unable to register with an invalid email functionality of the PayNOW datadriver.","164":"This test case validates the functionality of the Forgot Password feature, ensuring that users can successfully reset their passwords and regain access to the SecureLogin application.","165":"This test case ensures the functionality of allowing users to add multiple products to their shopping cart in the eCommerce platform.","166":"This test case checks the validation for initiating refunds for cancelled orders functionality of the OrderNow datadriver.","167":"This test case checks the validation for being unable to complete a payment without adding a billing address functionality of the PayFaster platform.","168":"This test case verifies the functionality for updating the billing address in the PaymentApp datadriver.","169":"This test case checks the validation for resetting password via email functionality of the MyAccount service.","170":"This test case checks the validation for resetting the password functionality of the AccountManagement datadriver.","171":"This test case checks the validation for ensuring that a customer is unable to make a purchase over their credit limit functionality of the SecureShop datadriver.","172":"This test case checks the validation for generating monthly transaction reports functionality of the PayREPORT system.","173":"This test case checks the validation for user registration functionality of the MyService datadriver.","174":"This test case checks the validation for updating the shipping address for an order functionality of the ShopEZ data engine.","175":"This test case checks the validation for adding a new customer in the User Management module.","176":"This test case validates the customer's ability to update their billing information on the MyAccount page functionality.","177":"This test case checks the validation for resetting password using email functionality of the MyAPP datadriver.","178":"This test case checks the validation for preventing customer login with an expired account in the MyBank application.","179":"This test case checks the validation for merchant's ability to generate daily sales reports functionality of the SalesTracker application.","180":"This test case checks the validation for user password recovery using registered email functionality of the E-Shop datadriver.","181":"This test case checks the validation for being able to generate an invoice report functionality of the InvoiceNow datadriver.","182":"This test case checks the validation for updating billing information after making a purchase functionality of the ShopEase platform.","183":"This test case checks the validation for generating invoice reports functionality of the ReportGEN datadriver.","184":"This test case checks the validation for creating a new user account functionality of the MetroPay datadriver.","185":"This test case ensures that customers are not allowed to initiate PayWork requests for invoices that have remained unpaid for over 1000 days.","186":"This test case checks the validation for updating the scheduled payment date functionality of the SysFIN datadriver.","187":"This test case checks the validation for viewing detailed invoice history functionality of the InvoiceViewer datadriver.","188":"This test case checks the validation for viewing updated balance after processing a refund functionality of the QuickPay datadriver.","189":"This test case checks the validation of a customer's ability to reset their password via email verification functionality in the SecurePAY system.","190":"This test case checks the validation for updating the billing address functionality of the PayNOW datadriver.","191":"This test case checks the validation for data encryption, ensuring all user data remains secure during transactions with the PaymentSecure datadriver.","192":"This test case ensures that users who have been inactive for a specified duration are automatically logged out of the SecurePay app, in order to maintain security standards.","193":"This test case checks the validation for resetting password using email functionality of the PayNOW datadriver.","194":"This test case checks the validation for the user registration process functionality on the client's web application.","195":"This test case checks the validation for accurate calculation of the cart total when multiple items are added to and removed from the cart, including the correct application of discounts and taxes, in the OnlineShopping datadriver.","196":"This test case checks the validation for successfully using the account recovery functionality of the SafeBank application.","197":"This test case checks the validation for successfully updating email address on the profile page functionality of the PayNOW User Profile module.","198":"This test case checks the validation for successfully logging out functionality of the SecurePay application.","199":"This test case checks the validation for changing the shipping address before order confirmation functionality of the ShopNOW application.","200":"This test case checks the validation for user registration with valid details functionality of the SampleApp datadriver.","201":"This test case checks the validation for the ability of customers to update their billing address in the customer settings functionality of the application.","202":"This test case checks the validation for updating the email address functionality of the PayNOW datadriver.","203":"This test case checks the validation for updating profile information such as name, email, and address functionality of the MyProfile datadriver.","204":"This test case checks the validation for being unable to make a payment with an expired credit card functionality of the PayNOW datadriver.","205":"This test case checks the validation for viewing payment history over the last six months functionality of the PayNOW datadriver.","206":"This test case checks the validation for ensuring payment reminder notifications are sent through SMS functionality of the BillNotify datadriver.","207":"This test case checks the validation for being unable to add more than three payment methods functionality of the MoneyApp datadriver.","208":"This test case checks the validation for the refund of payment functionality of the PayNOW datadriver.","209":"This test case checks the validation functionality of user login for the MartSecure application using both valid and invalid credentials.","210":"This test case checks the validation for downloading and printing invoices functionality of the ManagePAY datadriver.","211":"This test case checks the validation for resetting a user's password through email functionality of the SecureAuth application.","212":"This test case checks if the system prevents customers from processing a payment using an expired credit card, ensuring the functionality of the FinPay datadriver.","213":"This test case checks the functionality for updating profile details including name, email, and phone number on the MyAccount application.","214":"This test case checks the validation for rescheduling AutoPay for a future date functionality of the AutoPAY system.","215":"This test case checks the validation for resetting the password using a registered email functionality of the PayRESET datadriver.","216":"This test case checks the validation for updating personal information including name, email, and phone number functionality of the MyApp system.","217":"This test case checks the validation for updating profile information such as name, address, phone number, and email in the UserPortal system.","218":"This test case checks the validation for changing the email address in the user profile functionality of the MyAccount data driver.","219":"This test case checks the validation for being unable to apply a discount code for invoices that have already been discounted functionality of the PaymentPlus datadriver.","220":"This test case verifies the functionality of updating the customer's billing address in their profile within the AccountManagement system.","221":"This test case checks the validation for customers to modify their existing payment method details functionality of the PaymentManager datadriver.","222":"This test case checks the validation for being unable to reset the password without answering security questions on the SecureNow datadriver.","223":"This test case checks the validation for being unable to process refunds on transactions older than 180 days functionality of the PayNOW datadriver.","224":"This test case checks the validation for admin users being able to create new user accounts in the UserManagement system, ensuring the creation process works correctly with valid data.","225":"This test case checks the validation for user registration and login process functionalities of the QuickPay application.","226":"This test case verifies the functionality of placing an order with multiple items in the ShoppingCart application to ensure it handles adding multiple products and processing the order correctly.","227":"This test case checks the validation for generating monthly financial reports functionality of the PayNOW datadriver.","228":"This test case checks the validation for updating the shipping address during checkout functionality of the ShopNow datadriver.","229":"This test case checks the validation process for customer login using two-factor authentication functionality of the SecurePay application.","230":"This test case checks the validation for the customer receiving a payment confirmation email after successfully processing a payment using the PayNOW app.","231":"This test case checks the validation for updating the billing address functionality of the BillTech datadriver.","232":"This test case checks the validation for customer being unable to update expired credit card functionality in the PayFLOW application.","233":"This test case checks the validation for updating customer profile information including name, address, and contact details functionality of the PayNOW application.","234":"This test case checks the validation for the ability of a merchant to override the default tax calculation functionality of the ShopEZ datadriver.","235":"This test case checks the validation for updating profile information functionality of the eBanking platform.","236":"This test case checks the validation for being unable to view transactions without logging in functionality of the FinanceApp datadriver.","237":"This test case checks the validation for updating personal information in a customer's profile functionality of the MyProfile data driver.","238":"This test case checks the validation for being unable to book an appointment with a doctor who is marked as unavailable in the HealthCare App.","239":"This test case checks the validation for being unable to process payment without providing customer ID functionality of the QuickPay datadriver.","240":"This test case verifies the validation of the system's ability to generate a detailed monthly user activity report using the functionality of the ReportMaster datadriver.","241":"This test case checks the validation for user login with invalid credentials functionality of the BankNOW application.","242":"This test case checks the validation for editing customer details such as name, address, and phone number functionality of the ClientPortal.","243":"This test case checks the validation for changing and updating the billing address functionality of the PayNOW datadriver.","244":"This test case checks the validation for updating the customer's billing address functionality of the EasyBill system.","245":"This test case checks the validation for being unable to create recurring payment for expired card functionality of the TransactX system.","246":"This test case checks the validation for modifying saved AutoPay schedule functionality of the BillNow datadriver.","247":"This test case checks the validation for resetting user password via email functionality of the SecurePAY datadriver.","248":"This test case checks the validation for a user being able to change their password functionality of the SecurePay datadriver.","249":"This test case checks the validation for downloading the payment receipt as a PDF functionality of the PayNOW portal.","250":"This test case checks the validation to ensure that duplicate transactions for the same invoice cannot be processed using the PayEXPRESS datadriver.","251":"This test case checks the validation for viewing transaction details on the dashboard functionality of the CommerceHub datadriver.","252":"This test case checks the validation for ensuring merchant cannot edit submitted payment requests functionality of the QuickPay datadriver.","253":"This test case checks the validation for updating the billing address functionality of the BillPay datadriver.","254":"This test case checks the validation for being unable to process payment without entering the correct security code functionality of the EasyPay datadriver.","255":"This test case checks the validation for updating customer profile details in the AccountManager module.","256":"This test case checks the validation for being unable to export transaction history without selecting a date range functionality of the FinancialApp.","257":"This test case checks the validation for a customer viewing detailed transaction history within the last six months in the Transacto app.","258":"This test case checks the validation for a user being able to reset their password via an email link functionality of the MyPaymentApp datadriver.","259":"This test case checks the validation for changing the password functionality of the SecureLogin datadriver.","260":"This test case checks the validation for users being unable to update their profile without entering a valid email address on the Profile Update page functionality.","261":"This test case checks the validation for ensuring users are unable to reset their password without providing a valid email address in the MyPortal application.","262":"This test case checks the validation for adding a new address to the user's shipping address book functionality of the Ecommerce datadriver.","263":"This test case checks the validation for being unable to process a refund for closed accounts using the PayNEL datadriver.","264":"This test case checks the validation for accurately retrieving the order history details for a specific customer in the ShopFast datadriver.","265":"This test case checks the validation for changing email notifications settings functionality of the BillMaster datadriver."},"Testcase name":{"0":"Validate Customer Receives Payment Reminders","1":"Validate Update Billing Information","2":"Validate Maximum Allowable Payment Amount Restriction","3":"Validate Restriction of Premium Features for Basic Subscription","4":"Validate Update Personal Information","5":"Validate Unable To Add Duplicate Email Addresses","6":"Validate Customer Updates Billing Address Successfully","7":"Validate Update Payment Method Information","8":"Validate Unable To Reset Password With Invalid Email Address","9":"Validate Unable To Download Receipt Without Providing Email","10":"Validate Unable To Create Weekly AutoPay Schedule For Invalid Account","11":"Validate Update Billing Address Functionality","12":"Validate Set Up Recurring Payments On A Weekly Basis","13":"Validate Update Payment Method Details","14":"Validate Customer Receives Payment Confirmation Email","15":"Validate User Navigation To Contact Support Page","16":"Validate Customer Can Add New Address On Checkout","17":"Validate User Registration Functionality","18":"Validate Download and Print Invoice Functionality","19":"Validate View Account Balance After Login","20":"Validate Unable To Apply Expired Discount Code","21":"Validate Admin Can Generate Monthly Reporting","22":"Validate Customer Can Opt-In For Monthly Email Invoices","23":"Validate User Cannot Exceed Maximum Login Attempts With Invalid Passwords","24":"Validate Add New Item To Wishlist","25":"Validate User Registration With Valid Credentials","26":"Validate Unable To Transfer Funds With Negative Account Balance","27":"Validate Update Bank Account Details","28":"Validate Unable To Register With Invalid Email Address","29":"Validate Retrieve Forgotten Password","30":"Validate Unable To Update Personal Details Without Confirmation","31":"Validate Successful Logout Functionality","32":"Validate Incorrect Username\/Password Behavior","33":"Validate Login With Expired Password On MyPay","34":"Validate User Can Generate Monthly Transaction Report","35":"Validate Shipping Tracking Update For FedEx Orders","36":"Validate Unable To View Payment History","37":"Validate Viewing Detailed Transaction History On Transactions Page","38":"Validate User Account Lockout After Multiple Failed Login Attempts","39":"Validate Unable To Sign In With Incorrect Password","40":"Validate User Registration With Email Verification","41":"Validate User Can Reset Password Through Email","42":"Validate Update Personal Information","43":"Validate Customer Can Update Personal Profile Information","44":"Validate Update Personal Information From Profile Page","45":"Validate Waiver Of Transaction Fees For Government-Issued Debit Cards","46":"Validate Update Personal Information","47":"Validate Promotional Code Application During Checkout","48":"Validate Unable To Reset Password With Invalid Email","49":"Validate Unable To Subscribe To Monthly Plan Without Credit Card","50":"Validate User Registration With Email Verification","51":"Validate Update Billing Information For Existing Account","52":"Validate Unable To Register Account With Already Registered Email","53":"Validate Update Saved Credit Card Details","54":"Validate Offering Discount For Early Payments","55":"Validate Customer Can Update Profile Information","56":"Validate Unable To Cancel Confirmed Payment","57":"Validate User Registration With Valid Email","58":"Validate Premium Features Access Without Subscription","59":"Validate Add New Payment Method","60":"Validate User Is Able To Update Profile Information","61":"Validate Password Reset Through Email Verification Code","62":"Validate Notification For Upcoming Payment","63":"Validate User Registration With Valid And Invalid Email Address","64":"Validate Unable To Reset Password With Invalid Email Address","65":"Validate Unable To Place Order With Expired Credit Card","66":"Validate Pay Multiple Invoices With Different Payment Methods","67":"Validate Download Transaction Report In CSV Format","68":"Validate User Login With Incorrect Password","69":"Validate Unable To Schedule Same-Day Payment Transfer","70":"Validate Customer Can Reset Password Using Forgot Password Functionality","71":"Validate Customer Is Able To Update Billing Address","72":"Validate Edit Payment Details After Scheduling Payment","73":"Validate Update Saved Credit Card Details","74":"Validate Merchant Can Change Invoice Due Date","75":"Validate Modify Shipping Address Before Order Confirmation","76":"Validate Password Reset Using Registered Email","77":"Validate Merchant Is Able To Update Customer Information","78":"Validate User Unable To Update Sensitive Information Without Authentication","79":"Validate Save Preferred Shipping Address","80":"Validate User Login With Invalid Credentials","81":"Validate Customer Is Able To Update Billing Information","82":"Validate Customer Authorization Workflow in SecurePay","83":"Validate Customer Can Update Profile Information","84":"Validate Password Reset After Failed Login Attempts","85":"Validate Coupon Application and Discount Calculation in Shopping Cart","86":"Validate User Registration With Valid Credentials","87":"Validate User Registration With Valid Credentials","88":"Validate Customer Is Unable To Proceed With Payment Without Providing CVV Number","89":"Validate Customer Is Able To Upload Documents For Invoice","90":"Validate Customer Is Able To Apply Discount Coupon","91":"Validate Transaction Filtering By Payment Type For ECommerce Portal","92":"Validate Customer Can Track Refund Status In Their Account","93":"Validate Update Payment Method For Recurring Payment","94":"Validate Create And Save Recurring Payments","95":"Validate Export Transaction Report as CSV","96":"Validate User Is Able To Reset Password","97":"Validate User Password Reset","98":"Validate Password Reset Functionality","99":"Validate Update Contact Information","100":"Validate User Unable To Delete Account With Outstanding Balance","101":"Validate User Authentication With Two-Factor Authentication","102":"Validate Unable To Schedule Payment For Invoices Older Than One Year","103":"Validate Customer Update Contact Information","104":"Validate Update Existing Payment Method","105":"Validate Customer Can Update Profile Information In Account Management Section","106":"Validate Reset Password Using Email","107":"Validate Password Reset Functionality","108":"Validate Create Recurring Payment For Weekly Invoices","109":"Validate Successful Login And View Account Balance ","110":"Validate Custom Discount Offer During Checkout","111":"Validate Split Payment Across Multiple Invoices","112":"Validate Unable To Register With Already Used Email Address","113":"Validate Non-Integrated Customer View Available Balance Before Payment","114":"Validate Unable To Reset Password With Invalid Email ID","115":"Validate User Registration With Email Confirmation","116":"Validate User Able To Reset Password Via Email","117":"Validate Unable To Process Payment With Expired Credit Card","118":"Validate Update Billing Information After Payment","119":"Validate Generate Weekly Sales Reports","120":"Validate Apply Discount Code During Checkout","121":"Validate Email Address Update Functionality In Digipay","122":"Validate New User Account Creation","123":"Validate Customer Receives Email Notification After Successful Payment","124":"Validate User Can Update Account Information","125":"Validate Reset Password Using Forgot Password Functionality","126":"Validate User Account Lockout After Failed Login Attempts","127":"Validate User Can Reset Password From Forgot Password Link","128":"Validate Update Billing Address","129":"Validate Customer Is Able To Apply Discount Code During Checkout","130":"Validate Customer Unable To View Transaction Summary Without Permissions","131":"Validate Unable To Schedule Recurring Payments On Holidays","132":"Validate Merchant Is Able To Set Up Recurring Payments","133":"Validate Apply Discount Code During Checkout","134":"Validate Unable To Schedule Recurring Payment With Expired Card","135":"Validate Error Message For Invalid Email In Signup Form","136":"Validate Secure Password Policy Enforcement During New User Registration","137":"Validate Adding Items To Shopping Cart","138":"Validate View Payment Summary Page","139":"Validate Create Subscription For Recurring Orders","140":"Validate Customer Is Able To Update Profile Information","141":"Validate Customer Cannot Add More Than Three Recipients To An Invoice","142":"Validate Unable To Add Bank Account Without Routing Number","143":"Validate Update Billing Address","144":"Validate Inability To Exceed Payment Limits","145":"Validate Save Payment Method As Default","146":"Validate Unable To Reset Password Without Valid Email","147":"Validate Update Profile Information","148":"Validate Successful Login With Valid Credentials","149":"Validate User Unable To Schedule Payment For Expired Invoices","150":"Validate Customer Cannot Exceed Transaction Limit","151":"Validate Merchant Generating Monthly Financial Reports","152":"Validate User Is Able To Reset Password Through Email","153":"Validate User Unable To Register With Invalid Email Address","154":"Validate Unable To Add Out Of Stock Items To Cart","155":"Validate Viewing Exact Due Amount For Each Itemized Invoice In Billing Overview","156":"Validate Customer Is Able To Update Payment Method Details","157":"Validate Unable To Reset Password With Invalid Email Address","158":"Validate User Login With Expired Session Token","159":"Validate View List Of Upcoming Orders","160":"Validate User Registration With Valid And Invalid Data","161":"Validate User Is Able To Change Password","162":"Validate Unable To Pay Outstanding Amount If Exceeds Credit Limit","163":"Validate Unable To Register With Invalid Email","164":"Validate Forgot Password Reset Functionality","165":"Validate Add Multiple Products To Shopping Cart","166":"Validate Initiate Refund For Cancelled Orders","167":"Validate Unable to Complete Payment Without Billing Address","168":"Validate Update Billing Address","169":"Validate Reset Password Via Email","170":"Validate Password Reset Functionality","171":"Validate Unable To Make Purchase Over Credit Limit","172":"Validate Monthly Transaction Report Generation","173":"Validate User Registration Functionality","174":"Validate Update Shipping Address for Order","175":"Validate Add New Customer Functionality","176":"Validate Customer Can Update Billing Information On MyAccount Page","177":"Validate Customer Is Able To Reset Password Using Email","178":"Validate Unable To Login With Expired Account","179":"Validate Merchant Is Able To Generate Daily Sales Reports","180":"Validate User Password Recovery Using Registered Email","181":"Validate Customer Can Generate Invoice Report","182":"Validate Customer Is Able To Update Billing Information After Purchase","183":"Validate Generate Invoice Reports","184":"Validate Create New User Account","185":"Validate No PayWork Initiation for Unpaid Invoices Over 1000 Days","186":"Validate Update Scheduled Payment Date","187":"Validate View Detailed Invoice History","188":"Validate View Updated Balance After Refund","189":"Validate Password Reset Via Email Verification","190":"Validate Updating Billing Address","191":"Validate Customer Data Encryption","192":"Validate Automatic Logout Of Idle Users","193":"Validate Password Reset Using Email","194":"Validate User Registration Process","195":"Validate Check Cart Total Calculation","196":"Validate Successful Account Recovery in SafeBank","197":"Validate Update Email Address On Profile Page","198":"Validate Customer Is Able To Logout Successfully","199":"Validate Change Shipping Address Before Order Confirmation","200":"Validate User Registration With Valid Details","201":"Validate Customer Can Update Billing Address","202":"Validate Update Email Address Functionality","203":"Validate User Can Update Profile Information","204":"Validate Unable To Make Payment With Expired Credit Card","205":"Validate View Payment History Over Last Six Months","206":"Validate Payment Reminder Notifications Sent Through SMS","207":"Validate Unable To Add More Than Three Payment Methods","208":"Validate Refund Of Payment","209":"Validate User Login With Valid And Invalid Credentials For MartSecure","210":"Validate Download and Print Invoice Functionality","211":"Validate User Password Reset Through Email","212":"Validate Unable To Process Payment Using Expired Credit Card","213":"Validate Update User Profile Details","214":"Validate Reschedule AutoPay For Future Date","215":"Validate Password Reset Using Registered Email","216":"Validate Update Personal Information","217":"Validate Profile Information Update In UserPortal","218":"Validate Change Email Address In Profile","219":"Validate Customer Unable to Apply Discount Code For Already Discounted Invoices","220":"Validate Customer Can Update Billing Address In Profile","221":"Validate Customer Can Modify Existing Payment Method Details","222":"Validate User Unable To Reset Password Without Security Questions","223":"Validate Unable To Process Refunds On Transactions Older Than 180 Days","224":"Validate Admin Can Create New User Accounts In UserManagement","225":"Validate User Registration and Login Process for QuickPay","226":"Validate Successful Order Placement With Multiple Items","227":"Validate Generate Monthly Financial Reports","228":"Validate Update Shipping Address During Checkout","229":"Validate Customer Login With Two-Factor Authentication","230":"Validate Customer Receives Payment Confirmation Email After Successful Payment","231":"Validate Update Billing Address","232":"Validate Unable To Update Expired Credit Card","233":"Validate Update Customer Profile Information","234":"Validate Merchant Override Default Tax Calculation","235":"Validate Update Profile Information","236":"Validate Unable To View Transactions Without Logging In","237":"Validate Update Personal Information In Customer Profile","238":"Validate Unable To Book Appointment With Unavailable Doctor","239":"Validate Unable To Process Payment Without Customer ID","240":"Validate Monthly User Activity Report Generation","241":"Validate Unable To Login With Invalid Credentials","242":"Validate Edit Customer Details Functionality","243":"Validate Customer Can Update Billing Address","244":"Validate Update Billing Address","245":"Validate Unable To Create Recurring Payment For Expired Card","246":"Validate Modify Saved AutoPay Schedule","247":"Validate User Is Able To Reset Password Via Email","248":"Validate User Can Change Password","249":"Validate Download Payment Receipt As PDF","250":"Validate Duplicate Transactions Prevention For Same Invoice","251":"Validate View Transaction Details On Dashboard","252":"Validate Merchant Unable To Edit Submitted Payment Requests","253":"Validate Customer Is Able To Update Billing Address","254":"Validate Unable To Process Payment Without Correct Security Code","255":"Validate Update Customer Profile Details","256":"Validate Merchant Unable to Export Transaction History Without Date Range","257":"Validate Customer Ability To View Last Six Months Transaction History","258":"Validate User Can Reset Password Via Email","259":"Validate Change Password Functionality","260":"Validate Unable To Update Profile Without Valid Email","261":"Validate Password Reset Without Valid Email Address","262":"Validate Adding New Address To Shipping Address Book","263":"Validate Unable To Process Refund For Closed Account","264":"Validate Retrieve Order History For Specific Customer In ShopFast","265":"Validate Change Email Notifications Settings"},"Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Number(#) And Amount($) Of Invoices, Credit Cards, And ACH Transactions In Transaction Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Transaction Summary View\n    [Documentation] Test case for validating that the merchant is able to view number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Number And Amount Of Transactions Displayed","Description":"This test case checks the validation for viewing number(#) and amount($) of invoices, credit cards, and ACH transactions in transaction summary functionality of the PayNOW datadriver.","Testcase name":"Validate Transaction Summary View","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Customer Details Page By Clicking On Customer Number functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Customer Details Page\n    [Documentation] Test case for validating that the merchant is able to navigate to customer details page by clicking on customer number functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Customer Number\n    Validate Navigation To Customer Details Page","Description":"This test case checks the validation for navigating to customer details page by clicking on customer number functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Customer Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Total Number(#) And Amount($) Of Transactions In The Transaction Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Total Transactions In Summary\n    [Documentation] Test case for validating that the merchant is able to view the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Total Number And Amount Of Transactions Displayed","Description":"This test case checks the validation for viewing the total number(#) and amount($) of transactions in the transaction summary functionality of the PayNOW datadriver.","Testcase name":"Validate View Total Transactions In Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Transaction Amount($) And Count(#) After One Process Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Change In Transaction Summary\n    [Documentation] Test case for validating that the merchant is able to view the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process A Transaction\n    View Transaction Summary\n    Validate Change In Number And Amount Of Transactions Displayed","Description":"This test case checks the validation for viewing the change in transaction amount($) and count(#) after one process transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Change In Transaction Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate The Matrix Count(#) With The Transactions list Count functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the matrix count(#) matches with the transactions list count functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Matrix Count With Transactions List Count\n    [Documentation] Test case for validating that the matrix count(#) matches with the transactions list count functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Matrix Count Matches Transactions List Count","Description":"This test case checks the validation for matching the matrix count(#) with the transactions list count functionality of the PayNOW datadriver.","Testcase name":"Validate Matrix Count With Transactions List Count","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Auto Applied Checkbox Checked For Apply To Oldest Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Auto Applied Checkbox For Oldest Transaction\n    [Documentation] Test case for validating that the merchant is able to view auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Auto Applied Checkbox Checked For Oldest Transaction","Description":"This test case checks the validation for viewing auto applied checkbox checked for apply to oldest transaction functionality of the PayNOW datadriver.","Testcase name":"Validate Auto Applied Checkbox For Oldest Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Auto Applied Checkbox Checked For Specific Invoice Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Auto Applied Checkbox For Specific Invoice Transaction\n    [Documentation] Test case for validating that the merchant is able to view auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Auto Applied Checkbox Checked For Specific Invoice Transaction","Description":"This test case checks the validation for viewing auto applied checkbox checked for specific invoice transaction functionality of the PayNOW datadriver.","Testcase name":"Validate Auto Applied Checkbox For Specific Invoice Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View ACHorcheck Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view ACHorcheck transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View ACHorcheck Transaction\n    [Documentation] Test case for validating that the merchant is able to view ACHorcheck transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate ACHorcheck Transaction Displayed","Description":"This test case checks the validation for viewing ACHorcheck transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View ACHorcheck Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Credit Card Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view credit card transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Credit Card Transaction\n    [Documentation] Test case for validating that the merchant is able to view credit card transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Credit Card Transaction Displayed","Description":"This test case checks the validation for viewing credit card transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Credit Card Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transactions After Navigating To Next Page And Previous Page In Grid functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transactions After Page Navigation\n    [Documentation] Test case for validating that the merchant is able to view transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Next Page\n    Navigate To Previous Page\n    Validate Transactions Displayed After Page Navigation","Description":"This test case checks the validation for viewing transactions after navigating to next page and previous page in grid functionality of the PayNOW datadriver.","Testcase name":"Validate View Transactions After Page Navigation","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Paid ACH Count(#) And Amount($) After One Process Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Change In Paid ACH Count And Amount\n    [Documentation] Test case for validating that the merchant is able to view the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process A Transaction\n    View Transaction Summary\n    Validate Change In Paid ACH Count And Amount","Description":"This test case checks the validation for viewing the change in paid ACH count(#) and amount($) after one process transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Change In Paid ACH Count And Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Paid Invoices Count(#) And Amount($) After One Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Change In Paid Invoices Count And Amount\n    [Documentation] Test case for validating that the merchant is able to view the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process A Transaction\n    View Transaction Summary\n    Validate Change In Paid Invoices Count And Amount","Description":"This test case checks the validation for viewing the change in paid invoices count(#) and amount($) after one transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Change In Paid Invoices Count And Amount","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Custom Date Range And View Transactions Summary And Payment Date In Grid functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Custom Date Range And View Transactions Summary\n    [Documentation] Test case for validating that the merchant is able to custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Set Custom Date Range\n    View Transaction Summary\n    Validate Transactions Summary And Payment Date In Grid","Description":"This test case checks the validation for custom date range and view transactions summary and payment date in grid functionality of the PayNOW datadriver.","Testcase name":"Validate Custom Date Range And View Transactions Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Payment Date functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction payment date functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Payment Date\n    [Documentation] Test case for validating that the merchant is able to view transaction payment date functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Transaction Payment Date","Description":"This test case checks the validation for viewing transaction payment date functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Payment Date","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count For Successful Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice count for successful transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Count For Successful Transaction\n    [Documentation] Test case for validating that the merchant is able to view invoice count for successful transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Invoice Count For Successful Transaction","Description":"This test case checks the validation for viewing invoice count for successful transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Count For Successful Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Count For A Declined Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice count for a declined transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Count For Declined Transaction\n    [Documentation] Test case for validating that the merchant is able to view invoice count for a declined transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Invoice Count For Declined Transaction","Description":"This test case checks the validation for viewing invoice count for a declined transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Count For Declined Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoices Count For Multiple Transactions functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoices count for multiple transactions functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoices Count For Multiple Transactions\n    [Documentation] Test case for validating that the merchant is able to view invoices count for multiple transactions functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Invoices Count For Multiple Transactions","Description":"This test case checks the validation for viewing invoices count for multiple transactions functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoices Count For Multiple Transactions","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Partial Transactions Processed With ACHorEcheck functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Partial Transactions With ACHorEcheck\n    [Documentation] Test case for validating that the merchant is able to view partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Partial Transactions With ACHorEcheck","Description":"This test case checks the validation for viewing partial transactions processed with ACHorEcheck functionality of the PayNOW datadriver.","Testcase name":"Validate View Partial Transactions With ACHorEcheck","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Partial Transactions Processed With Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view partial transactions processed with credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Partial Transactions With Credit Card\n    [Documentation] Test case for validating that the merchant is able to view partial transactions processed with credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Partial Transactions With Credit Card","Description":"This test case checks the validation for viewing partial transactions processed with credit card functionality of the PayNOW datadriver.","Testcase name":"Validate View Partial Transactions With Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Status In Grid functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view payment status in grid functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Payment Status In Grid\n    [Documentation] Test case for validating that the merchant is able to view payment status in grid functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Payment Status In Grid","Description":"This test case checks the validation for viewing payment status in grid functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment Status In Grid","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Send Receipt With Valid Email id functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to send receipt with valid email id functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${EMAIL}                    email@example.com\n\n*** Test Cases ***\nValidate Send Receipt With Valid Email id\n    [Documentation] Test case for validating that the merchant is able to send receipt with valid email id functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Send Receipt ${EMAIL}\n    Validate Receipt Sent","Description":"This test case checks the validation for sending receipt with valid email id functionality of the PayNOW datadriver.","Testcase name":"Validate Send Receipt With Valid Email id","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Transaction Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to transaction details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Transaction Details\n    [Documentation] Test case for validating that the merchant is able to navigate to transaction details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Transaction Details\n    Validate Transaction Details Page","Description":"This test case checks the validation for navigating to transaction details functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Transaction Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Type Details In Transaction Summary For ACH Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Payment Type Details For ACH Payment\n    [Documentation] Test case for validating that the merchant is able to view payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Payment Type Details For ACH Payment","Description":"This test case checks the validation for viewing payment type details in transaction summary for ACH payment functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment Type Details For ACH Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Type Details In Transaction Summary For Credit Card Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Payment Type Details For Credit Card Payment\n    [Documentation] Test case for validating that the merchant is able to view payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Payment Type Details For Credit Card Payment","Description":"This test case checks the validation for viewing payment type details in transaction summary for credit card payment functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment Type Details For Credit Card Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Custom Fields And Billing Info In Transaction Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view custom fields and billing info in transaction summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Custom Fields And Billing Info In Transaction Summary\n    [Documentation] Test case for validating that the merchant is able to view custom fields and billing info in transaction summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Custom Fields And Billing Info Displayed","Description":"This test case checks the validation for viewing custom fields and billing info in transaction summary functionality of the PayNOW datadriver.","Testcase name":"Validate View Custom Fields And Billing Info In Transaction Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Approved Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction summary for approved transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Summary For Approved Transaction\n    [Documentation] Test case for validating that the merchant is able to view transaction summary for approved transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Approved Transaction","Description":"This test case checks the validation for viewing transaction summary for approved transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Summary For Approved Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Declined Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction summary for declined transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Summary For Declined Transaction\n    [Documentation] Test case for validating that the merchant is able to view transaction summary for declined transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Declined Transaction","Description":"This test case checks the validation for viewing transaction summary for declined transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Summary For Declined Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Filtered Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view filtered transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n${FILTER_CRITERIA}          filter_criteria\n\n*** Test Cases ***\nValidate View Filtered Transaction\n    [Documentation] Test case for validating that the merchant is able to view filtered transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Apply Filter ${FILTER_CRITERIA}\n    View Filtered Transaction","Description":"This test case checks the validation for viewing filtered transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Filtered Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Sort Transactions By Type functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to sort transactions by type functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Sort Transactions By Type\n    [Documentation] Test case for validating that the merchant is able to sort transactions by type functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Sort Transactions By Type\n    Validate Sorted Transactions","Description":"This test case checks the validation for sorting transactions by type functionality of the PayNOW datadriver.","Testcase name":"Validate Sort Transactions By Type","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Is Not Applied For ACH Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Amount Not Applied For ACH Transaction\n    [Documentation] Test case for validating that the merchant is able to view the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate No Surcharge For ACH Transaction","Description":"This test case checks the validation for viewing the surcharge amount is not applied for ACH transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Amount Not Applied For ACH Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Applied For Credit Card Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Surcharge Amount Applied For Credit Card Transaction\n    [Documentation] Test case for validating that the merchant is able to view the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Surcharge Amount For Credit Card Transaction","Description":"This test case checks the validation for viewing the surcharge amount applied for credit card transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Surcharge Amount Applied For Credit Card Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Items Per Page functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view items per page functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Items Per Page\n    [Documentation] Test case for validating that the merchant is able to view items per page functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Items Per Page\n    Validate Items Per Page Displayed","Description":"This test case checks the validation for viewing items per page functionality of the PayNOW datadriver.","Testcase name":"Validate View Items Per Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Details In All Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice details in all transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Details In All Transaction\n    [Documentation] Test case for validating that the merchant is able to view invoice details in all transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Details\n    Validate Invoice Details Displayed","Description":"This test case checks the validation for viewing invoice details in all transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Details In All Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Collapse Invoice Details functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to collapse invoice details functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Collapse Invoice Details\n    [Documentation] Test case for validating that the merchant is able to collapse invoice details functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Collapse Invoice Details\n    Validate Invoice Details Collapsed","Description":"This test case checks the validation for collapsing invoice details functionality of the PayNOW datadriver.","Testcase name":"Validate Collapse Invoice Details","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page By Clicking On Invoice Number In All Transactions functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Details Page\n    [Documentation] Test case for validating that the merchant is able to navigate to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Click Invoice Number\n    Validate Navigation To Invoice Details Page","Description":"This test case checks the validation for navigating to invoice details page by clicking on invoice number in all transactions functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Details Page","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Cancel Send Receipt Popup functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to cancel send receipt popup functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Cancel Send Receipt Popup\n    [Documentation] Test case for validating that the merchant is able to cancel send receipt popup functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Open Send Receipt Popup\n    Cancel Send Receipt Popup\n    Validate Popup Canceled","Description":"This test case checks the validation for canceling send receipt popup functionality of the PayNOW datadriver.","Testcase name":"Validate Cancel Send Receipt Popup","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Alert Popup To Void Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view alert popup to void transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Alert Popup To Void Transaction\n    [Documentation] Test case for validating that the merchant is able to view alert popup to void transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Void Transaction\n    Validate Alert Popup Displayed","Description":"This test case checks the validation for viewing alert popup to void transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Alert Popup To Void Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View AVS And CVV Response Code For Card Payment functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view AVS and CVV response code for card payment functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View AVS And CVV Response Code For Card Payment\n    [Documentation] Test case for validating that the merchant is able to view AVS and CVV response code for card payment functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Card Payment Details\n    Validate AVS And CVV Response Code","Description":"This test case checks the validation for viewing AVS and CVV response code for card payment functionality of the PayNOW datadriver.","Testcase name":"Validate View AVS And CVV Response Code For Card Payment","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Master Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction summary for Master credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Summary For Master Credit Card\n    [Documentation] Test case for validating that the merchant is able to view transaction summary for Master credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Master Credit Card Transactions","Description":"This test case checks the validation for viewing transaction summary for Master credit card functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Summary For Master Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Transaction Summary For Visa Debit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view transaction summary for Visa debit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Transaction Summary For Visa Debit Card\n    [Documentation] Test case for validating that the merchant is able to view transaction summary for Visa debit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Visa Debit Card Transactions","Description":"This test case checks the validation for viewing transaction summary for Visa debit card functionality of the PayNOW datadriver.","Testcase name":"Validate View Transaction Summary For Visa Debit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Amount Split up In Transaction Summary functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the amount split up in transaction summary functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Amount Split Up In Transaction Summary\n    [Documentation] Test case for validating that the merchant is able to view the amount split up in transaction summary functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Amount Split Up Displayed","Description":"This test case checks the validation for viewing the amount split up in transaction summary functionality of the PayNOW datadriver.","Testcase name":"Validate View Amount Split Up In Transaction Summary","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Settled Amount For Successful Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view settled amount for successful transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Settled Amount For Successful Transaction\n    [Documentation] Test case for validating that the merchant is able to view settled amount for successful transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate Settled Amount Displayed","Description":"This test case checks the validation for viewing settled amount for successful transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Settled Amount For Successful Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To View Settled Amount For Declined Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to view settled amount for declined transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Settled Amount For Declined Transaction\n    [Documentation] Test case for validating that the merchant is unable to view settled amount for declined transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate No Settled Amount For Declined Transaction","Description":"This test case checks the validation for not viewing settled amount for declined transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Settled Amount For Declined Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To View Settled Amount For Partial Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to view settled amount for partial transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Settled Amount For Partial Transaction\n    [Documentation] Test case for validating that the merchant is unable to view settled amount for partial transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Transaction Summary\n    Validate No Settled Amount For Partial Transaction","Description":"This test case checks the validation for not viewing settled amount for partial transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Settled Amount For Partial Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Surcharge Amount Information (i) functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the surcharge amount information (i) functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View The Surcharge Amount Information (i)\n    [Documentation] Test case for validating that the merchant is able to view the surcharge amount information (i) functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Surcharge Amount Information (i)\n    Validate Surcharge Amount Information Displayed","Description":"This test case checks the validation for viewing the surcharge amount information (i) functionality of the PayNOW datadriver.","Testcase name":"Validate View The Surcharge Amount Information (i)","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Due Amount After Processing Partial Payment Using ACH functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Change In Due Amount After Partial Payment Using ACH\n    [Documentation] Test case for validating that the merchant is able to view the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Partial Payment Using ACH\n    Validate Change In Due Amount Displayed","Description":"This test case checks the validation for viewing the change in due amount after processing partial payment using ACH functionality of the PayNOW datadriver.","Testcase name":"Validate View Change In Due Amount After Partial Payment Using ACH","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Change In Due Amount After Full Payment Using Credit Card functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the change in due amount after full payment using credit card functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Change In Due Amount After Full Payment Using Credit Card\n    [Documentation] Test case for validating that the merchant is able to view the change in due amount after full payment using credit card functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Full Payment Using Credit Card\n    Validate Change In Due Amount Displayed","Description":"This test case checks the validation for viewing the change in due amount after full payment using credit card functionality of the PayNOW datadriver.","Testcase name":"Validate View Change In Due Amount After Full Payment Using Credit Card","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Invoice Details After Processing Multiple Invoices functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the invoice details after processing multiple invoices functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Details After Processing Multiple Invoices\n    [Documentation] Test case for validating that the merchant is able to view the invoice details after processing multiple invoices functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Multiple Invoices\n    Validate Invoice Details Displayed","Description":"This test case checks the validation for viewing the invoice details after processing multiple invoices functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Details After Processing Multiple Invoices","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Application Option When Processed Through Specific Invoice functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view payment application option when processed through specific invoice functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Payment Application Option When Processed Through Specific Invoice\n    [Documentation] Test case for validating that the merchant is able to view payment application option when processed through specific invoice functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Payment Through Specific Invoice\n    Validate Payment Application Option Displayed","Description":"This test case checks the validation for viewing payment application option when processed through specific invoice functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment Application Option When Processed Through Specific Invoice","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Payment Application Option When Processed Through Lump Sum functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view payment application option when processed through lump sum functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Payment Application Option When Processed Through Lump Sum\n    [Documentation] Test case for validating that the merchant is able to view payment application option when processed through lump sum functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Process Payment Through Lump Sum\n    Validate Payment Application Option Displayed","Description":"This test case checks the validation for viewing payment application option when processed through lump sum functionality of the PayNOW datadriver.","Testcase name":"Validate View Payment Application Option When Processed Through Lump Sum","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Invoice Payment Details Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view invoice payment details tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Invoice Payment Details Tab\n    [Documentation] Test case for validating that the merchant is able to view invoice payment details tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Invoice Payment Details Tab","Description":"This test case checks the validation for viewing invoice payment details tab functionality of the PayNOW datadriver.","Testcase name":"Validate View Invoice Payment Details Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To Navigate To Invoice Details Page From Invoice Payment Details Tab functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to navigate to invoice details page from invoice payment details tab functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Navigate To Invoice Details Page From Invoice Payment Details Tab\n    [Documentation] Test case for validating that the merchant is able to navigate to invoice details page from invoice payment details tab functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Navigate To Invoice Details Page From Invoice Payment Details Tab","Description":"This test case checks the validation for navigating to invoice details page from invoice payment details tab functionality of the PayNOW datadriver.","Testcase name":"Validate Navigate To Invoice Details Page From Invoice Payment Details Tab","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Approved Transactions functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view approved transactions functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Approved Transactions\n    [Documentation] Test case for validating that the merchant is able to view approved transactions functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Approved Transactions","Description":"This test case checks the validation for viewing approved transactions functionality of the PayNOW datadriver.","Testcase name":"Validate View Approved Transactions","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View Not Approved Transactions functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view not approved transactions functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Not Approved Transactions\n    [Documentation] Test case for validating that the merchant is able to view not approved transactions functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    View Not Approved Transactions","Description":"This test case checks the validation for viewing not approved transactions functionality of the PayNOW datadriver.","Testcase name":"Validate View Not Approved Transactions","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Able To View The Refunded Amount After Void Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is able to view the refunded amount after void transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate View Refunded Amount After Void Transaction\n    [Documentation] Test case for validating that the merchant is able to view the refunded amount after void transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Void Transaction\n    Validate Refunded Amount Displayed","Description":"This test case checks the validation for viewing the refunded amount after void transaction functionality of the PayNOW datadriver.","Testcase name":"Validate View Refunded Amount After Void Transaction","Testcase Name":null},{"Prompt":"Generate a robot framework test case for testing to Validate Merchant Is Unable To Void Payment Second Time For The Same Transaction functionality of the PayNOW datadriver.","Response":"*** Settings ***\nDocumentation          Test cases for validating that the merchant is unable to void payment second time for the same transaction functionality of the PayNOW datadriver\nLibrary                SeleniumLibrary\n\n*** Variables ***\n${URL}                      https:\/\/example.com\/paynow\n${MERCHANT_DETAILS}         merchant_details\n\n*** Test Cases ***\nValidate Unable To Void Payment Second Time For Same Transaction\n    [Documentation] Test case for validating that the merchant is unable to void payment second time for the same transaction functionality of the PayNOW datadriver\n    Launch PayNow Application ${URL}\n    Enter Merchant Details ${MERCHANT_DETAILS}\n    Void Transaction\n    Attempt To Void Same Transaction Again\n    Validate Unable To Void Second Time","Description":"This test case checks the validation for not being able to void payment a second time for the same transaction functionality of the PayNOW datadriver.","Testcase name":"Validate Unable To Void Payment Second Time For Same Transaction","Testcase Name":null}]